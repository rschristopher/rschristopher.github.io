{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bitcoin is True","text":"<p>Sovereignty is a skill. We help you master it.</p> <p>We work with individuals and businesses who want to take real ownership of their wealth -- no custodians, no compromises. From secure self-custody to sovereign payments and mining infrastructure, we provide personalized guidance, bespoke tools, and complete setups designed around your goals.</p>      Request a Consultation"},{"location":"#why-self-custody-matters","title":"Why Self-Custody Matters","text":"<p>If your Bitcoin is on an exchange or with a custodian, it isn't truly yours.  Bitcoin enables complete sovereignty. We're here to help you:</p> <ul> <li>Set up cold storage the right way</li> <li>Understand inheritance planning</li> <li>Gain confidence handling your keys</li> </ul> <p>You will learn to do it yourself, from simple to the most advanced multisig protocols imaginable. We make sure you do it right.</p>"},{"location":"#bitcoin-payments-done-right","title":"Bitcoin Payments, Done Right","text":"<p>Accepting Bitcoin should be seamless and sovereign. We help you integrate:</p> <ul> <li>Lightning Network payments</li> <li>Self-hosted infrastructure</li> <li>Full ownership of your payment stack</li> </ul> <p>Whether you're a merchant, freelancer, or supplier, we help you eliminate middlemen -- permanently.</p>"},{"location":"#private-bitcoin-mining","title":"Private Bitcoin Mining","text":"<p>We offer mining solutions ranging from residential setups to industrial deployments:</p> <ul> <li>True solo mining</li> <li>Remote monitoring dashboards</li> <li>Demand-response curtailment</li> </ul> <p>Gain complete sovereignty by settling your own transactions, generating your own block templates without fear of censorship, and directing sufficient hashrate to your own solo mining pool.</p>"},{"location":"#one-on-one-guidance","title":"One-on-One Guidance","text":"<p>Bitcoin is for everyone. So is sovereignty.</p> <p>We work with clients who want:</p> <ul> <li>A secure self-custody setup with no guesswork</li> <li>Custom infrastructure and automation tools</li> <li>Peace of mind in an increasingly uncertain world</li> </ul> <p>You'll never be dependent on us -- we're here only when you need us.</p> <p>Explore Services See Pricing</p>"},{"location":"#ready-to-take-the-first-step","title":"Ready to Take the First Step?","text":"Request a Consultation    <p>\u201cThey helped me move millions off-exchange securely, with confidence. I sleep better now.\u201d \u2014 Private client</p>"},{"location":"#learn-on-your-own","title":"Learn on Your Own","text":"<p>We provide complete details covering all sovereignty levels -- helpful for beginners to even the most advanced users looking to strengthen their setup.</p> <p>If you're new to Bitcoin and willing to learn more, there's plenty of articles and references to help you understand the deeper and often terrifying truth of our broken banking system, and how to leverage Bitcoin to gain true sovereignty over your wealth.</p> <p>Your Bitcoin. Your keys. Your responsibility.  </p>"},{"location":"prices/","title":"Prices","text":"<p>Straightforward. Transparent. Optional.</p> <p>You don\u2019t need us to use Bitcoin well -- but if you want one-on-one support, we offer it at competitive, transparent pricing. No hidden fees. No \u201ccall for quote.\u201d</p> <p>We charge based on time and scope, not complexity. Pricing below gives examples of what typical engagements look like.</p>"},{"location":"prices/#individual-family-clients","title":"\ud83d\udcbc Individual &amp; Family Clients","text":"<p>For clients who want help with secure storage, inheritance planning, or mining at home.</p> <p>Starter Vault Session \u2013 $500 One-hour 1:1 call to review your setup or walk you through a new one. Includes follow-up notes and resources.</p> <p>Cold Storage Setup \u2013 from $1,500 Custom vault design (single-sig or multisig), hardware wallet configuration, and backup strategies.</p> <p>Inheritance Planning Add-on \u2013 + $750 Walkthrough of key handoff, survivorship design, and family onboarding.</p> <p>Ongoing Support Retainer \u2013 $1,000/month Ongoing access, quarterly check-ins, and emergency coordination help.</p>"},{"location":"prices/#business-enterprise-clients","title":"\ud83c\udfe2 Business &amp; Enterprise Clients","text":"<p>For businesses accepting Bitcoin, holding it on balance sheet, or integrating it into operations.</p> <p>BTCPay Server Setup \u2013 $2,000\u2013$4,000 Self-hosted deployment, payment flows, staff walkthrough.</p> <p>Lightning Node &amp; Channel Strategy \u2013 from $3,000 Node setup, routing design, and liquidity support.</p> <p>Infrastructure Review / Audit \u2013 $1,500 flat Review existing setup, identify risks, and propose improvements.</p> <p>Team Training &amp; SOPs \u2013 Custom pricing Workshops or documentation tailored to your operational needs.</p>"},{"location":"prices/#mining-setup-support","title":"\u26cf\ufe0f Mining Setup Support","text":"<p>For individuals or teams looking to run miners independently.</p> <p>ASIC Acquisition &amp; Setup Guidance \u2013 $500/hour We help you choose hardware, firmware, pool, and layout strategy.</p> <p>Residential Mining Walkthrough \u2013 from $1,500 Includes electrical, physical, and monitoring setup overview.</p> <p>Colocation Planning Session \u2013 $750/hour Cover contracts, hosting risks, remote monitoring, and ROI modeling.</p> <p>We don\u2019t sell miners. We help you use them well.</p>"},{"location":"prices/#custom-projects","title":"\ud83e\uddf0 Custom Projects","text":"<p>Bespoke software, dashboards, scripting, or integration work is available in limited capacity.</p> <p>Custom Development \u2013 $350/hour or project-based All code is client-owned, documented, and open-source friendly.</p>"},{"location":"prices/#not-sure-what-you-need","title":"\ud83e\udded Not Sure What You Need?","text":"<p>Start with a consultation. We\u2019ll help you scope it.</p>      Request a Consultation"},{"location":"prices/#faq","title":"FAQ","text":"<p>Do you offer flat-fee packages? Yes \u2014 for custody setups, BTCPay deployments, and small engagements.</p> <p>Can you work with multisig I already started? Absolutely. We\u2019re happy to review or refine an existing setup.</p> <p>Do you ever take custody or hold client keys? No. Never.</p> <p>Do you charge more if the amount held is high? No. Pricing is based on scope, not assets. In fact, do not ever disclose your exact assets, that's between you and your loved ones, nrver with us.</p> <p>Is your pricing negotiable? If you\u2019re working on something aligned with our mission, reach out. We care more about helping the right people than maxing out invoices.</p> <p>Bitcoin is free to use. But getting it right takes time. We're here if you want help.</p>"},{"location":"services/","title":"Services","text":"<p>Bitcoin is simple. Doing it right isn't.</p> <p>We help individuals, families, and businesses take real ownership of their Bitcoin -- without custodians, centralized dependencies, or unnecessary third parties. Everything we do is rooted in helping clients understand and execute their own sovereignty path, one piece at a time.</p> <p>As a sovereign, you will never be dependent on us. We are here to help you gain true sovereignty.</p>      Request a Consultation"},{"location":"services/#saving","title":"\ud83c\udfe6 Saving","text":"<p>Self-custody for real ownership and long-term security.</p> <p>Bitcoin isn\u2019t savings unless you hold your own keys. We help clients take control of their custody setups \u2014 with careful attention to privacy, durability, and independence from custodians or custodial hardware/software platforms.</p> <p>We offer guidance on:</p> <ul> <li>Wallet selection and cold storage workflows</li> <li>Multisig setups with coordinator independence</li> <li>Inheritance strategies that don\u2019t rely on third parties</li> <li>Secure key storage and recovery practices</li> <li>Minimizing reliance on any single vendor or company</li> </ul> <p>The goal is not just \"not your keys, not your coins\" \u2014 it\u2019s knowing that your setup will still work ten years from now, and that your heirs can access it when needed.</p>"},{"location":"services/#currency","title":"\u26a1 Currency","text":"<p>Use Bitcoin in your business or life \u2014 without giving up control.</p> <p>Most payment integrations are custodial at some level \u2014 hosted wallets, fiat ramps, cloud servers. We help you move toward self-hosted, sovereign systems that reflect Bitcoin\u2019s design.</p> <p>We help clients:</p> <ul> <li>Deploy BTCPay Server on your own infrastructure</li> <li>Set up Lightning nodes and connect to relevant peers</li> <li>Design payment flows that avoid SaaS reliance</li> <li>Understand privacy tradeoffs in receiving and spending</li> <li>Integrate Bitcoin payments into real businesses, cleanly</li> </ul> <p>This isn\u2019t about gimmicks \u2014 it\u2019s about making Bitcoin useful, fast, and sovereign at the same time.</p>"},{"location":"services/#proof-of-work","title":"\u26cf\ufe0f Proof of Work","text":"<p>Run miners, support the network, build hashrate \u2014 on your terms.</p> <p>Bitcoin mining is for everyone, not just institutions. But the incentives only work if your setup is intentional. We help clients approach mining from first principles, reflecting the same values that guide custody and payments: decentralization, privacy, and independence.</p> <p>Depending on your context, we offer:</p> <ul> <li>Guidance on acquiring and setting up ASICs</li> <li>Introduction to firmware and pool selection</li> <li>Layout advice for home or colocated deployment</li> <li>Monitoring and planning based on your actual goals</li> </ul> <p>We do not run hosted miners. We help you run your own.</p>"},{"location":"services/#custom-projects","title":"\ud83e\uddf0 Custom Projects","text":"<p>Some clients need more. We occasionally take on bespoke work \u2014 custom dashboards, scripting, or integrations \u2014 where we can offer clear value and stay aligned with our principles.</p> <ul> <li>Open-source\u2013oriented, maintainable code</li> <li>Built for long-term independence, not support lock-in</li> <li>Always with full source control and client ownership</li> </ul> <p>If you\u2019re building something serious and sovereign, we may be able to help.</p>"},{"location":"services/#consultation","title":"\ud83e\udd1d Consultation &amp; Ongoing Support","text":"<p>We offer flexible, one-on-one consulting for clients who want to skip the rabbit hole but still get it right:</p> <ul> <li>Vault design sessions</li> <li>Payment infrastructure walkthroughs</li> <li>Mining setup strategy calls</li> <li>Retainer-style engagements for teams or family offices</li> </ul> <p>Our pricing is simple and predictable. Start by telling us what you\u2019re trying to accomplish.</p>      Request a Consultation    <p>Not ready to engage? No problem. We have provided sufficient articles and references for you to do this yourself. We are passionate about the full stack of Bitcoin (from ethos to code).</p>"},{"location":"about/","title":"About","text":"<p>by R.S. Christopher</p> <p>This is a collection of essays  and information centered around  a single question. It is a question most worth pursuing. Is Bitcoin True?</p> <p>In other words, we aim to understand:  is Bitcoin money? Is the fixed supply of Bitcoin truly fixed? Will this solve the problems  of seigniorage and fiat currency?</p> <p>We will not be satisfied  with shallow  criticism  and hype. We want to know whether or not  there is truth to Bitcoin. And we will go as deep as  necessary to discover this  truth.</p>"},{"location":"about/#who-is-rs-christopher","title":"Who is R.S. Christopher?","text":"<p>Reprobus Saint Christopher, the dog-headed  saint of travelers and Bitcoiners. While revisionists  like to say St. Christopher   was an ordinary man,   arrogantly proclaiming that  \"dog-headed men\" never  actually existed  and that it was all just a  translation  error   or worse, a myth -- no, Reprobus actually was  a dog-headed giant; a monster from beyond the fringes,  haunting the marginalia of  our ancient world. And, in the pursuit of power,  Reprobus instead found salvation.</p> <p>And even now St. Christopher helps travelers and  Bitcoiners find their way.</p> <p></p>"},{"location":"about/#who-are-you-really","title":"Who are you, really?","text":"<p>No one important, just a pseudonym. It doesn't  really matter who I am -- what  matters is whether the claims  about Bitcoin are true, or not.</p> <p>Perhaps more importantly,  who are you? Are you a seeker of truth? Are you willing to challenge  conventional wisdom and deeply  held beliefs? Is truth that important to you?</p> <p>The arguments put forth  in these essays   may challenge the status quo  to which you cling. It might be uncomfortable. So again I ask,  is truth really important to you?</p>"},{"location":"about/contact/","title":"Contact","text":"<p>Bitcoin is True exists to help individuals and businesses achieve real sovereignty \u2014 not just buy-and-hold convenience.</p> <p>We're not a company built on buzzwords or marketing funnels. We're a consulting and development practice rooted in real-world Bitcoin use. We've worked with clients ranging from family offices securing generational wealth to solo entrepreneurs integrating Lightning payments.</p> <p>We believe Bitcoin should be simple, private, and durable. We help people get there \u2014 or build it themselves with confidence.</p>"},{"location":"about/contact/#get-in-touch","title":"Get in Touch","text":"<ul> <li>One-on-one consulting</li> <li>Bespoke infrastructure guidance</li> <li>Custom software and automation tools</li> <li>Private support for those who need it</li> </ul> <p>Want to ask a question or propose a project?</p> Email Us      Signal"},{"location":"about/contact/#pgp-optional","title":"PGP (optional)","text":"<p>For sensitive communication, reach out by email and request our public PGP key.</p>"},{"location":"about/contact/#who-runs-this","title":"Who Runs This?","text":"<p>Bitcoin is True is run by a small team of engineers, educators, and infrastructure builders. We publish articles, write tools, and help people secure their wealth and future \u2014 not chase trends.</p>"},{"location":"about/nostr/","title":"Nostr","text":""},{"location":"about/nostr/#nostr","title":"Nostr","text":"<p>Follow me on   Nostr  with the self-verified  <code>bitcoinistrue.com</code>  identifier,  using your preferred Nostr client.</p> <p>Or use the following public key,</p> <pre><code>npub1w4w9apn7yjd3atqzu3f4umctxpx2u3tcq3uadj2zgxndwavpd49smxj8ar\n</code></pre>"},{"location":"about/nostr/#what-is-nostr","title":"What is Nostr?","text":"<p>Nostr is a protocol for decentralized social networking. In other words, you can use any Nostr client and you'll be  looking at the same social network. This replaces twitter, telegram, and any other  centrally controlled social network -- allowing  an open and uncensorable social network.</p> <p>Technically, email and websites are based on  similar protocols. Imagine if one company owned all websites and all email --  censoring your emails and prohibiting what you  can write on your own website --  this is effectively what social media companies  have attempted. Nostr simply puts the power back in the hands  of the user. You decide what you want to read, not an \"algorithm\"  written by moral busybodies and propagandists.</p> <p>As such, a Nostr client app is like a web browser. Regardless of which web browser you use,  you will be looking at the same website. Regardless of which Nostr client you use,  you will be looking at the same Nostr feed.</p>"},{"location":"about/nostr/#why-is-nostr","title":"Why is Nostr?","text":"<p>The early Internet was decentralized:  emails, websites, usenet groups, gopher,  private FTP sites, or even the infamous  bulletin board systems (BBS) -- all were  completely decentralized and uncensorable. Users did not reveal their personal identity,  preferring pseudonymous \"handles\". Using a personal identity was considered,  well, too personal.</p> <p>Most all of this still exists, relegated to  the so-called darkweb and nearly forgotten. Even personal websites fell out of favor,  all replaced by the  dystopian surveillance panopticon  brought about by FAANG companies and their ilk. Facebook, Apple, Amazon, Netflix, and  Google -- along with the other \"big tech\"  companies that never made it into that dumb  acronym (Twitter, Microsoft, Slack, etc).</p> <p>Few questioned the wisdom of this centralized  corporate fascism,  ignoring the heavy-handed influence of government  and military \"defense\" agencies --  let alone the corrosive influence of political  parties and the various dictators and human  rights abusers  (often calling themselves activists   and other absurdities). Not only are true names the expectation,  they are increasingly required --  with pressure from nation states  (and unelected central planners)  to encourage and even   enforce this level of tracking. Everything you do and say, both online  and off, what you type, where you're sitting,  your buying habits, your political views,  everything -- all these formerly  private details are  aggressively and repeatedly tracked in  a comically inefficient   Rube Goldberg surveillance machine,  with your identity   bought and sold for immoral  uses that prior generations would have  only imagined in a sci-fi novel.</p> <p>Are you being tracked?</p> <p>Even reading this blog has likely triggered dozens of surveillance trackers, each adding data to your digital profile (the device you are using, how long you stayed on this page, your physical location, mouse and/or touchpad movements, everything) -- this profile is then sold, where yours and billions of other profiles are endlessly compared and experimented via  machine learning models with predictions of what you'll buy next, where you'll go, who you'll likely vote for, and of course: your level of conformity into this draconian system that no one asked for.</p> <p>Meanwhile, Nostr continues the tradition  of a decentralized Internet. There are no identities other than what  you choose to reveal. The default is  complete privacy through pseudonyms --  specifically through  public/private keys.</p> <p>An \"identity\" in Nostr is simply a public key. All messages are signed by a corresponding  private key. You can create as many keys as you want. That is, as many pseudonyms as you want. You can even use new keys every time,  effectively providing anonymous access  without any hurdles.</p> <p>Meanwhile, payment integration is baked in  natively with lightning. Rather than monetizing through attention,  engagement, and other measures that did nothing  but fuel the dystopian nightmare that is our  modern surveillance state -- instead Nostr  monetizes through, well, money. Rather than desperately track personal details  and whorishly seek attention, Nostr simply  uses Bitcoin over lightning rails. Anyone can pay anyone, all pseudonymously.</p> <p>And since Nostr is a protocol, different  clients can use Nostr for a variety of use  cases, effectively disrupting almost all  products and services from those  FAANG companies. Like what the Internet did to publishing houses  and record stores, Nostr is poised to do to  our labyrinthine social media hellscape.</p> <p>If Twitter, Facebook, Tik-Tok and the others  are to survive the next decade,  it will likely be  as Nostr clients. Or Facebook will go the way of Kodak,  Google the way of IBM,  and so on --  replaced by more competent  companies that understand  the direction of society. If you don't think this  could happen, consider  that this is what already  happened when these  FAANG companies were young  start-ups and supplanted  the old tech giants,  all building on top of  Internet protocols like HTTP.</p> <p></p>"},{"location":"about/nostr/#creating-keys","title":"Creating Keys","text":"<p>To get started on Nostr, you'll need to generate a public/private key pair. Most Nostr clients can do this for you.</p> <p>Your private key (nsec) is your password -- keep it secret and secure. The public key (npub) is your identity, share it freely.</p>"},{"location":"about/nostr/#creating-a-verified-username","title":"Creating a verified username","text":"<p>To create a verified username like <code>user@domain.com</code>, set up a  NIP-05 identifier. This links your public key to a domain you control, proving ownership without central authority.</p> <p>Steps:</p> <ul> <li>Add a JSON file to your domain's <code>.well-known/nostr.json</code> path with your npub.</li> <li>Update your Nostr profile with the identifier.</li> </ul> <p>This adds credibility, like a blue checkmark but decentralized.</p>"},{"location":"about/nostr/#linking-to-a-lightning-address","title":"Linking to a Lightning Address","text":"<p>Link a Lightning Address to your Nostr profile for seamless zaps (tips) via Bitcoin's Lightning Network. Use services like Wallet of Satoshi or self-host with Alby.</p> <p>In your Nostr client, add the address to your profile. Receivers see it as a zap button -- instant, low-fee payments without intermediaries.</p>"},{"location":"about/nostr/#nostr-resources","title":"Nostr Resources","text":"<p>Clients:</p> <ul> <li>Damus (iOS)</li> <li>Amethyst (Android)</li> <li>Primal (Web/Android/iOS)</li> <li>Iris (Web)</li> <li>Nostrudel (Web)</li> </ul> <p>Relays:</p> <ul> <li>Nostr.watch (Relay list and status)</li> <li>wss://relay.damus.io</li> <li>wss://nos.lol</li> <li>wss://nostr-pub.wellorder.net</li> </ul> <p>Other:</p> <ul> <li>Nostr Protocol (Official site)</li> <li>Nostr NIPs (Improvement proposals)</li> <li>Nostr Resources (Guides and tools)</li> <li>Nostr Band (Search and stats)</li> </ul>"},{"location":"about/references/","title":"References","text":"<p>Online information about Bitcoin is rife with scams -- from fake giveaways and phishing sites to rug-pull \"altcoins\" and fraudulent exchanges and \"yield\" products promising high returns. It's easy to lose everything if you chase quick gains or trust without verifying. </p> <p>Finding pure signal amid the noise is challenging, but sticking to time-tested, open-source, and community-vetted resources is key. Avoid anything promoting \"get rich quick\" or alternatives to Bitcoin; focus on education and self-sovereignty. And always remember to question everything, never trust, always verify.</p>"},{"location":"about/references/#signal-in-the-noise","title":"Signal in the noise","text":"<ul> <li>Nakamoto Institute</li> <li>Mises Institute</li> <li>Learn Me A Bitcoin</li> <li>Bitcoin.org</li> <li>Bitcoin Wiki</li> <li>The Bitcoin Standard</li> <li>The Bitcoin Layer</li> <li>The Bitstein Brief</li> <li>DarthCoin</li> <li>Gigi (21 Ideas)</li> <li>Arman the Parman</li> <li>The Blocksize War</li> </ul>"},{"location":"about/references/#before-there-was-bitcoin","title":"Before there was Bitcoin","text":"<p>there was ...</p> <ul> <li>The Sovereign Individual</li> <li>The Creature from Jekyll Island</li> <li>The Ethics of Money Production</li> <li>De Moneta of Nicholas Oresme</li> <li>The History of the Decline and Fall of the Roman Empire</li> <li>Wealth of Nations</li> <li>What Has Government Done to Our Money?</li> <li>Denationalisation of Money</li> <li>The Theory of Money and Credit</li> <li>A History of Money and Banking in the United States</li> <li>Human Action</li> <li>The Bible</li> </ul>"},{"location":"about/references/#books-with-bitcoin-in-the-title","title":"Books with \"Bitcoin\" in the title","text":"<p>that are actually worth reading</p> <ul> <li>The Bitcoin Standard</li> <li>Bitcoin is Venice</li> <li>Bullish Case for Bitcoin</li> <li>Bitcoin Clarity</li> <li>Inventing Bitcoin</li> <li>Programming Bitcoin</li> </ul>"},{"location":"articles/","title":"Articles","text":"<p>by R.S. Christopher</p> <p>This is a collection of essays  and information centered around  a single question. It is a question most worth pursuing. Is Bitcoin True?</p> <p>In other words, we aim to understand:  is Bitcoin money? Is the fixed supply of Bitcoin truly fixed? Will this solve the problems  of seigniorage and fiat currency?</p> <p>We will not be satisfied  with shallow  criticism  and hype. We want to know whether or not  there is truth to Bitcoin. And we will go as deep as  necessary to discover this  truth.</p>"},{"location":"articles/#who-is-rs-christopher","title":"Who is R.S. Christopher?","text":"<p>Reprobus Saint Christopher, the dog-headed  saint of travelers and Bitcoiners. While revisionists  like to say St. Christopher   was an ordinary man,   arrogantly proclaiming that  \"dog-headed men\" never  actually existed  and that it was all just a  translation  error   or worse, a myth -- no, Reprobus actually was  a dog-headed giant; a monster from beyond the fringes,  haunting the marginalia of  our ancient world. And, in the pursuit of power,  Reprobus instead found salvation.</p> <p>And even now St. Christopher helps travelers and  Bitcoiners find their way.</p> <p></p>"},{"location":"articles/#who-are-you-really","title":"Who are you, really?","text":"<p>No one important, just a pseudonym. It doesn't  really matter who I am -- what  matters is whether the claims  about Bitcoin are true, or not.</p> <p>Perhaps more importantly,  who are you? Are you a seeker of truth? Are you willing to challenge  conventional wisdom and deeply  held beliefs? Is truth that important to you?</p> <p>The arguments put forth  in these essays   may challenge the status quo  to which you cling. It might be uncomfortable. So again I ask,  is truth really important to you?</p>"},{"location":"articles/is-bitcoin-true/","title":"Is Bitcoin True?","text":"<p>One of the strangest realizations I had when  I first learned about Bitcoin,  was the thought,</p> <p>Bitcoin fixes modern art?</p> <p>Bitcoin  -- if it is true --  fixes all of the problems of fiat money,  even modern art.</p>"},{"location":"articles/is-bitcoin-true/#the-problem-of-fiat-money","title":"The problem of fiat money","text":"<p>Bitcoin was designed to  fix the problem of fiat money,   which is the problem of politics and money,   an incessant problem that has  burdened human civilization throughout  history.</p> <p>You may have gotten into Bitcoin as  an investment;  a high-risk and volatile investment;  an investment into the best performing  asset of all time. And yet, Bitcoin was  not designed to be an investment. Bitcoin was designed to be money,  sound money that can fix the problems  of fiat money -- it is in this regard  that we ask: is Bitcoin true?</p> <p>The problems of fiat money run deep,   beyond the ever-increasing  price of meat and potatoes -- shaping  Politics and War,  Food and Health,  Education and Research,  Science and Innovation -- and yes, even modern art.</p>"},{"location":"articles/is-bitcoin-true/#even-modern-art","title":"Even modern art?","text":"modern art under fiat <p>This is an actual piece of art --  that sold, and appreciated to over 6-million dollars.</p> <p>There are many such examples, along with  eye-roll inducing apologetics, such that the banana represents a critique of the very problems of modern art that everyone is criticizing. Janitors protested the banana for pay inequality, another artist ate the banana, and still another wrote \"Epstein didn't kill himself\" on the wall in red lipstick.</p> <p></p> <p>Even the artists and the art dealers know that modern art is vapid nonsense, and so they perform self-referential pieces of art, criticising themselves, being cynical about cynicism -- someone will then call the self-referential cynicism \"genius\" -- and why stop if the money keeps rolling in?</p> <p>Rather than ask what is and what is not art, instead ask how art collectors have money for this kind of art, and why they see value in it. And most importantly,  find out where that money came from.</p>"},{"location":"articles/is-bitcoin-true/#where-does-money-come-from","title":"Where does money come from?","text":"<p>Money operates as a measure of value,  subjective value based on the perceptions of  those buying and selling.  Money also stores value,  value to be used in the future.   The time between earning money   and spending money  is known  as \"saving\".</p> <p>This simple and subjective sense of value  is all that money is and ever will be. It is best understood as a technology,  such that good money will be more efficient  than bad money.  It can be strong money with  a fixed supply, or it can be easy money  with an inflationary supply.</p> <p>Inflationary money  disprupts the natural cycle of saving,  replacing the age old \"saving for the future\"  with consumerism,   with credit and debt,   with a system of constant spending --  because money that constantly loses value  is simply worth more now than it will be   in the future.</p> <p>Fiat money is inflationary at the whims  of those who control the money supply. There is a  reason janitors have less purchasing power than   ever before. And it's not because a wealthy  person controlled this outcome. If you are a janitor earning fiat money,  you will work harder  and harder, but you will earn   less and less value over time.  And that amount of lost value will be gained by those known as   cantilion insiders,   those close to the money supply, those  who benefit from increases in the money supply,  including art collectors.</p> <p>An art collector's salary  will also lose value over time,  just like the janitor. However, assets such as real-estate  and art will increase in value.  Inflating the money supply  doesn't just drive up prices of consumer goods,  it first inflates the value of hard assets, transfering  wealth from those who work and save, to those  who own hard assets. And if you dig deep enough, you'll find  that most art collectors don't actually  earn a salary,  have never earned a salary,  and that their wealth is not  stored in cash.</p> <p>Political solultions make the problem worse,  and over time those controlling the money  supply use their ill-gotten gains (known as seigniorage)  to control the politics (regardless of the system),  so it inevitably becomes a rigged game  (be it a democracy or theocracy or socialist dictatorship or otherwise). Revolutions change the faces of the problem,  but like the word implies, a revolution is  to move in a circle.</p> <p>There is no political solution.</p> <p>If you ever wonder why seemingly diverse   modern societies are   struggling with consumerism, environmental   catastrophes, health epidemics where supposedly  \"wealthy\" populations are malnourished and  dying younger, and fighting endless wars over  control of oil -- look no further than  the source of all this misery -- fiat money,  where unaccountable bureaucrats control  the supply of money at the expense  of civilization itself.</p> <p>While the current round of non-sustainable  monetary parasitism began in   1971,   this   problem is as old as time. Whether it's   causal or not can be debated, but societies  fall when their money is debased  (just ask the Romans).  No reasonable person can believe otherwise.</p> <p>The real question becomes,   what can be done about the problem of fiat money?</p>"},{"location":"articles/is-bitcoin-true/#the-terrifying-truth","title":"The terrifying truth","text":"<p>If Bitcoin is true, it is almost too terrifying to contemplate. Bitcoin simply could not succeed in an honest system. It is   merely a set of protocols around  a cryptographic ledger  designed to prevent any and all  centralized control of money;  it requires voluntary participation;  it is designed  such that no one can or will control the  monetary policy. As a consequence of its design,  it is slow and less efficient than  what a non-corrupt centralized system could  achieve. It is only superior to corrupt  dishonest systems  (because it fixes the bad-actor problem).</p> <p>If Bitcoin is true it would mean that  the problems of fiat money are   not only real  but irreconciliable. It would mean our entire system is built on lies,   and that  our leaders are parasitic sociopaths,  selected by broken incentives that  benefit short-term gains at the expense  of the future,  unknowingly  destroying civilization in the process.</p> <p>And it means that we have been participants in this lie.</p> <p>For Americans it means Nixon was worse than   liberals believe, and that  FDR was even worse than Nixon. It means our media is corrupt propaganda,  and that our political parties are nothing  but the coordinators of this propaganda. And none of this is by design but is a consequence  of the fiat system itself;  of the broken incentives that reward  short-term gains at the expense of civilization. Such a system will  discourage you from ever discovering,</p> <p>where does money come from?</p> <p>This is a lot to take in for even a cynical person. You've been lied to about money,  by people who aren't particularly competent,  told that  money doesn't grow on trees and then  to look the other way when money is created  from nothing;  all by the whims of  parasitic sociopaths that know  not what they do.</p> <p>It's tempting to believe the lies, either that  they don't exist (it's all just a conspiracy theory)  or to believe they exist and are competent enough to  actually control money. But the terrifying truth is that they do exist,  but are completely incompetent. They don't  understand that one cannot actually control money.  No one can control money, because  money relies on the ever-changing perspectives of value of  every person on earth.</p> <p>Money is technology</p> <p>Money is the technology that allows for the ever-changing perspectives of value  (of every human on earth)  to be made known and measurable, that is, to have what are known as prices and markets.</p> <p>Money requires freedom, freedom to change your mind on a whim, to change your perception of value based on the ever-changing demands in your life.</p> <p>One cannot control money without controlling the  subjective values of every person on   earth, controlling not just their thoughts, but   their innate sense of value, and  all the externalities that might cause them to react,  rendering them less than cattle,   less than rats,   something more akin to cogs in a machine,  a machine that is   controlled by -- who exactly?</p>"},{"location":"articles/is-bitcoin-true/#bitcoin-fixes-this","title":"\"Bitcoin fixes this\"","text":"<p>This oft-repeated quote struck me as  too good to be true, the wishful thinking  of youthful idealists who are all theory  with no real-world experience,  those unprepared for the chaotic   realpolitik of life.</p> <p>And yet, if what is claimed about Bitcoin is  true, then it could fix  the damaging effects of inflationary money.  If the supply is truly scarce,   now and in the future;   and if the network is truly decentralized,   such that no  system of authority can control or kill it,  then yes, logically, Bitcoin could  fix many of the problems  of fiat money.</p> <p>But like I said, that all seems  too good to be true. Like trying to contemplate what life would  be like if people were always honest and   forthright; if everyone was kind, humble,  and forgiving. People aren't always that way,   and it's not helpful to pretend otherwise.</p> <p>And yet, Bitcoin assumes the opposite, that no one   can be trusted.</p> <p>don't trust, verify</p> <p>The entire design of Bitcoin is a trustless system  that assumes no one is honest. No one. You must verify everything. If there's something we can't verify, then trust  is required, in which case we're back to fiat,  back to the very problem that Bitcoin is trying to solve.</p> <p>For Bitcoin to be true, everything must be verifiable.</p>"},{"location":"articles/is-bitcoin-true/#why-not-other-cryptocurrencies","title":"Why not other Cryptocurrencies?","text":"<p>Altcoins are not attempting to solve   the problem Bitcoin solves.  They offer no scarcity, and no true  decentralization.  Most are free market monies that  operate as securities.  They sometimes offer interesting features  because   they're digital money,  but without scarcity over time.</p> <p>Most are merely copies of Bitcoin but   with a centralized source of control,  completely defeating the point,  which is why you will hear them referred  to as \"shitcoins\".</p> <p>Shitcoins cannot solve the problem  of fiat money. And they don't try. In all cases they are attempting to become  fiat money, granting seigniorage to  their own founders. Bitcoin is in a category all its own,  a scarce digital resource,  a superior money.</p> <p>If Bitcoin is true, then it wins in the end,  outcompeting all other money,  potentially  redeeming civilization in the process. Anything less than that would prove  Bitcoin false.</p>"},{"location":"articles/is-bitcoin-true/#what-if-bitcoin-is-false","title":"What if Bitcoin is false?","text":"<p>What if in our journey to verify everything  we miss something? And years later we realize that there  was a flaw, something we didn't see,  but it becomes obvious once exploited.</p> <p>That's all it would take to prove Bitcoin false  -- one small counterexample,   a flaw that could not be fixed in a soft fork. If trust was required,  then that trust could be exploited  -- and those who  most effectively violate that trust would  become the de-facto controllers of Bitcoin,  making it no better than fiat.</p> <p>What then?</p> <p>Nothing will have been fixed. The unsustainable problems of fiat  would continue in crisis after crisis. However, having learned about Bitcoin  you'll understand money.  The chaos of the moderm world will   make sense. And you'll realize we needed Bitcoin to be true   because there was no alternative.</p> <p>Whether we like it or not, the  survival of our civilization   depends on overcoming the problem of fiat money. This is the challenge of our generation. The existential threats  facing our civilization  all point back to fiat money. We cannot solve environmental crises,  health crises, meaning crises,  or any of the problems  in education or politics, not  without fixing the broken incentives  that created those problems to begin with.</p> <p>Bitcoin has been referred to as energy money,  one of the   great filters to the advancement  of civilization. This is a polite way of saying  that civilization cannot advance when  parasitic bureaucrats  play God through vain attempts  at controlling money. But this also means, for Bitcoin to be true,  it must succeed as energy money;  it must be the catalyst to advance our civilization.</p> <p>All Bitcoin would have to do is work.   Every day that it works is another day   that it has  not been proven false. We can dare to hope;  we can look for  criticisms; or  we can support Bitcoin's ascent as a true  form of energy money that redeems  civilization. The stakes are higher than we can imagine,   and what happens next,  for better or worse, is up to us.</p>"},{"location":"bitcoin-as-money/","title":"Bitcoin as Money","text":"<p>\u201cI don\u2019t believe we shall ever have a good money again before we take the thing out of the hands of government, that is, we can\u2019t take them violently out of the hands of government, all we can do is by some sly roundabout way introduce something they can\u2019t stop.\u201d</p> <p>~ Friedrich Hayek </p> <p>If Bitcoin is true,  it must be Hayek's \"something\"   that government can't stop. It must be a de-facto superior  money to USD, as well as to all fiat money. It must be so superior that it's ascent is  only a matter of when and not if -- this is  the only way Bitcoin could be considered true.</p>"},{"location":"bitcoin-as-money/#global-money","title":"Global Money","text":"<p>Money is the technology that makes known the  ever-changing perspectives of value of every  human being on earth. Additionally, money must store value over time,  and it must be transmittable over large distances,  anywhere that humans wish to transact.</p> <p>There has never been a true global money,  that is, a money that everyone on earth  agrees on as their   unit of account,  their  medium of exchange,  and as their   store of value.</p> <p>Such a technology has never existed,  least of all because such a global money  must be properly   decentralized and uncensorable.  Importantly, anyone who controls monetary technology  would have power over everyone else wishing to  transact with that money. A global money could only be possible if   no one controlled it.</p> <p>As such, Bitcoin can only be true if  no one can control  or limit who can use it. This means attempts to ban it must fail,  as well as attempts to subvert or control  its monetary policy.</p>"},{"location":"bitcoin-as-money/#gold-and-silver","title":"Gold and Silver","text":"<p>The closest to a global money was gold and silver.  One could travel with gold, and use it  in most places, provided it was not seized  or stolen.</p> <p>Kingdoms and empires fell,  but if their coins were in  gold, the monetary value of that gold was  preserved and spendable elsewhere. Wars were fought over gold,  and if you managed to hold onto your  gold, not a paper note but the gold itself,  that gold would hold its value over time.</p> <p>For example,  under the gold standard $20-USD was roughly an ounce of gold. An unskilled worker might earn only 25-cents per hour --  a mere $40 per month --  2-ounces of gold per month. At today's gold price this is  well over $30/hour.</p> <p>Gold-backed money provided a living wage  to even the lowest paid workers.</p> <p></p> <p>Unfortunately, gold cannot be transmitted  quickly nor cheaply over large distances. This limitation gives rise to an inevitable  system of credit,  and then to promisory notes  which then lead to fractional reserve,  and stey-by-step to pure fiat;  money that is backed by-- what exactly?</p>"},{"location":"bitcoin-as-money/#petrodollar","title":"Petrodollar","text":"<p>Today, the world operates on a quasi-global  currency known as the USD, or more aptly,  the   petrodollar. It began after   1971,  after a sovereign debt default which  ended what was left of the gold standard.</p> <p>For all its faults,  the   petrodollar  system makes the USD a stable global reserve currency which  is why you can freely exchange  your USD to Canadian dollars or Euros or Yen  or Yuan. Almost anywhere on earth you go,  you can probably find an ATM that will   allow you to withdraw the local currency  (at a relatively stable exchange rate). Despite the many problems of fiat money,  this innovation was itself revolutionary,  allowing decades of economic growth  on a global scale.</p> <p>The dirty secret was that this economic growth  hid the seigniorage of central bankers  that has inadvertantly bankrupted  every country on earth,  strip mined capital,  transformed stockpiles of wealth into an unsustainable  mountain of debt that can never be paid back  (it is money backed by debt afterall).</p> <p>And of course, the not-so-secret secret,  this system requires  continuous war over oil.</p> <p></p> <p>The petrodollar system depends on two critical elements,</p> <ol> <li>US military dominance</li> <li>US relations with oil-rich nations (like Saudi Arabia)</li> </ol> <p>In other words, if Saudi Arabia and other oil-rich nations should fall,  the USD petrodollar would collapse overnight. Similarly, if the US military was not the de-facto  dominant power on earth, then the USD would collapse  (hyperinflating against stronger money). Likewise, if the US government was to collapse,   so too would the USD petrodollar system. This bizarre web of dependencies  is what it means today to be  the global reserve currency.</p> <p>Unlike gold and silver, the petrodollar  depends entirely on the US government, the US Treasury,  the Federal Reserve, the US military, the Saudi government,  and a stable relationship between the US and the Saudis.</p>"},{"location":"bitcoin-as-money/#fiat-interregnum","title":"Fiat Interregnum","text":"<p>While fiat is (by definition) legally enforced as a medium of exchange,  it fails as a store of value, distorting price signals,  and ultimately failing as a reliable unit of account. Fiat money inevitably creates a dual money system,  where weak \"currency\" is separated from monetary \"assets\"; in other words, the masses earn fiat while the wealthy store value in hard assets (gold, real-estate, equities, or even fine-art).</p> <p></p> <p>Bitcoin need not be adopted nor even accepted by the  fiat bureaucrats;  the truth of Bitcoin is not determined by fiat. For Bitcoin to be true, it need only to work. International settlements must work using   Bitcoin. And doing so will reveal the  impotence of the parasitic bureaucrats  that imagine themselves as in control. Bitcoin is true because it works,  and the consequences of that may not be  agreeable to most   (least of all to the beneficiaries of the fiat system itself).</p> <p>The fiat system produces bureaucratic  cruft, delusions of power that arise  from the noise of the system, obscuring  price signals and creating a class of   professional bureaucrats  whose job it is to pretend  to control money. Bitcoin doesn't make them obsolete,  it proves they have been impotent all along,  like court astrologers.</p> <p></p> <p>Under the gold standard, it wasn't the king  that gave value to money,   it was the gold.  The monetary value of gold was   all that mattered. Similarly, under a Bitcoin standard,  Bitcoin is all that will matter,  not its adoption by bureaucrats.</p> <p>In the long arch of history, the modern fiat system  is a mere blip as we transition from gold  to true global money. This blip of modern fiat was birthed in 1971   although didn't really  prove itself till a few years later. By the 1980s it was ostensibly working,   and it was uncontested until 2009,   until Bitcoin.  And in a sly roundabout  way, Bitcoin has risen into prominence as  an open source global money, poised to supplant  the USD petrodollar. And with every  decade of it working, it inches  closer to becoming the money of  international settlements,  the base layer behind all money.</p>"},{"location":"bitcoin-as-money/fixed-supply/","title":"Fixed Supply","text":"<p>Let's consider this classic chart that you may have seen  in various corners of the Internet.</p> <p>Weimar Gold Price from 1918 to 1923</p> <p> </p> <p>I've seen many versions of this chart,   and always felt there was a lot overlooked. Yes, it's a textbook example of fiat currency hyperinflation,  but let's dig a little deeper.</p> <p>We can find the raw   Weimar Inflation Data  online, and using this we can plot the classic  hyperbolic price of gold shown above. Additionally, we can track things like the  all time high (ATH)  and changes to that ATH. We can scale this out to get  a better look at the volatility in the gold price over time. For example,</p> <p></p> <p>This gives us two distinct stories.  We know the story of the gold price.  Inflationary paper money will inevitably end this way. However, the volatility is an often overlooked story -- as something as stable as gold became volatile.</p> <p>There was extreme volatility in the price of gold,  as well as in real estate and other hard assets. For well over a year the price was dropping,   crashing to less than 50% of its all-time-high (ATH). And then every time there was a new ATH,   it was followed for months on end of a painful  bear market.  And then the process would repeat. The frequency of these painful cycles increased,  as did the volatility.</p> <p>The people of Germany in 1921 lacked the benefit  of hindsight that we have looking at this classic  story of a currency collapse. Instead, they lived through massive uncertainty,  holding gold through periods where it seemed to  be losing value. And then other periods where  the number would go up-and-up,  only to crash once again -- until finally,  the German Papiermark itself crashed, hyperinflated  into oblivion.</p> <p>A fixed supply is not only important, but critical.  And as all fiat currencies have demonstrated,  inflation is impossible to avoid. In the early  days it can be tamed and even reduced, but   eventually it grows along with all the consequent  problems of fiat money.</p>"},{"location":"bitcoin-as-money/fixed-supply/#is-a-fixed-supply-feasible","title":"Is a Fixed Supply Feasible?","text":"<p>A fixed supply is not possible through wishful thinking  nor central planning. These attempts have all failed,  and continue to fail.</p> <p>Gold and silver were more successful as money than other  metals simply because their supply was more limited.  And yet, the inflation rate of gold  (the increase in supply) has historically hovered  around 2%. That means every year there is 2% more gold than  the previous year.  A gold standard means 2% annual inflation.</p> <p>At present, Bitcoin's inflation rate is already less than gold,  and as such, Bitcoin  is the least inflationary monetary asset  the world has ever known.</p>"},{"location":"bitcoin-as-money/fixed-supply/#how-is-it-possible","title":"How is it Possible?","text":"<p>Many Bitcoiners will tell you to read the code.</p> <p>And yes, the code at the moment will  fix the supply  to just under 21 million.</p> GetBlockSubsidy <p>Every 210,000 blocks (roughly every 4 years)  the block subsidy (new Bitcoin mined) is reduced in half,  and it started at 50. You can calculate 50 times 210,000 to arrive at 10.5 million,  exactly half of 21 million. Afterwards, the block subsidy  was \"halved\" to 25, then to 12.5, then 6.25, then 3.125, and so on.</p> <p>This \"halving\" process will contiue until  the year 2140 when the final fraction of a Bitcoin is mined,  at which point mining will operate only on transaction fees.</p> <p><pre><code>CAmount GetBlockSubsidy(int nHeight, const Consensus::Params&amp; consensusParams)\n{\n    int halvings = nHeight / consensusParams.nSubsidyHalvingInterval;\n    // Force block reward to zero when right shift is undefined.\n    if (halvings &gt;= 64)\n        return 0;\n\n    CAmount nSubsidy = 50 * COIN;\n    // Subsidy is cut in half every 210,000 blocks which will occur approximately every 4 years.\n    nSubsidy &gt;&gt;= halvings;\n    return nSubsidy;\n}\n</code></pre> The <code>&gt;&gt;=</code> operator in the code is a bit shift right,  which has the effect of halving a number, e.g.,</p> <pre><code>50, 25, 12.5, 6.25, 3.125, 1.5625, ...\n</code></pre> <p>But this doesn't answer the question.</p> <p>How can I know that this fixed supply won't change in the future?  How do I know we're not one pull-request away from inflationary money? How do I know that the future supply of Bitcoin won't   be controlled by incompetent bureaucrats?</p> <p>Well, it's open-source code.</p> <p>Try modifying it  and see what happens.  Create your own pull-request to change this function. Now, obviously such a change won't be approved,  but what if it was? Let's say the supply cap was  changed -- would that be the end of Bitcoin?</p> <p>Such a change would break consensus rules,  and would be considered a hard fork,  that is, the original software would reject   all new blocks on this new version,  and it would require all the miners and nodes  to upgrade.  A conscious choice amongst every participant   in the Bitcoin network.</p> <p>Those that refused would just continue as they were,  running nodes, mining blocks, and transacting  Bitcoin based on the 21 million fixed supply. The developers that refused would continue  developing the original version and would enjoy  the support of everyone who wished to stay  on the original fixed supply version.</p> <p>This is, it turns out, exactly what has happened   many many times before. The so called altcoins  (or shitcoins) are the result of exactly these  kind of hard forks. Their adherents chose the   hard fork, and the market reacted accordingly.</p> <p>So far, against many challenges, Bitcoin's  fixed supply has proven true.</p>"},{"location":"bitcoin-as-money/in-the-year-2140/","title":"In the Year 2140","text":"<p>Most famously, this is the year (give or take) that the last Bitcoin will be mined. The Bitcoin supply schedule will officially hit its fixed limit of 20,999,999.9769 (ignnoring lost and unspendable Bitcoin).  Why not exactly 21-million? Well, it would take infinite halvings and infinite time for the halving logic to reach 21-million.</p> <p>More formally, an infinite halving schedule would have an asymptotic limit of 21-million (see the first equation below).  But there are only 33 block-subsidy eras (0 to 32), and the halvings will have a discrete rounding to the nearest satoshi. See the second equation, which better approximates the total possible Bitcoin supply.</p> <p> </p> <p>Each era is roughly 4-years, for a total of 132 years, such that the final era will have a block subsidy of only 1 satoshi, or 0.00000001 BTC. A single satoshi is not divisible on the base layer, thus, at block height 6,930,000 (in the year 2140) we will see the final block subsidy. From that point on Bitcoin mining will operate only on fees, which in practice will already have happened as fees will far outweigh such small block subsidies (when the coinbase reward will be dust without fees).</p> <p>While it\u2019s difficult to make predictions more than a century in the future, we can speculate based on what we do know and examine any pre-conditions for Bitcoin\u2019s survival \u2013 in other words, if Bitcoin will survive to the year 2140 and issue its final block subsidy, then what would have to be true?</p>"},{"location":"bitcoin-as-money/in-the-year-2140/#population-growth","title":"Population Growth","text":"<p>Global population growth is difficult to predict more than a century into the future, and advances in technology and adoption are even more speculative. That said, for some baseline numbers we can assume a global population increase over 10-billion, and sufficient agricultural advances to avoid the various doomsday predictions (which have historically been wrong every singly time) and arrive at a conservative estimate of 12-billion global population.</p> <p>Likewise we can assume advances in energy markets and access to technology, which are necessary for the mass adoption of Bitcoin. While there are many regressive scenarios one can speculate upon, most of these are not only detrimental to human flourishing but also to Bitcoin adoption itself. In other words, one needs a global information network and access to personal computing devices for Bitcoin to not only thrive but to survive. </p> <p>If there is any such regression in human civilization then it is unlikely Bitcoin will survive in a recognizable way into the year 2140 \u2013 so for the purposes of this exercise, we will assume humanity overcomes the various existential threats (external and self-imposed) and maintains a steady state of growth and human flourishing. We can consider this the baseline requirement for Bitcoin\u2019s survival (that we don\u2019t end up living in a post-apocalyptic dystopia).</p> <p>Prerequisite 1</p> <p>In order for Bitcoin to survive to the year 2140, human civilization must avoid any catastrophic collapse. Bitcoin depends on human flourishing, or rather, Bitcoin requires a symbiotic relationship with human civilization.</p>"},{"location":"bitcoin-as-money/in-the-year-2140/#mempool-fee-market","title":"Mempool Fee Market","text":"<p>Long before we get to the final satoshi, what we call mining will necessarily be operating on fees. As such, by the year 2140 the name \u201cmining\u201d will be too much of a misnomer and can more accurately be understood as \u201ctransaction processing\u201d, or \u201cproof-of-work hashing\u201d.</p> <p>Importantly, this means there must be sustained demand for transaction settlement, and this demand must be in excess of available blockspace. Consider the following,</p> <ul> <li>4000 transactions per block (average)</li> <li>144 blocks per day</li> <li>210-million transactions per year</li> </ul> <p>In order to operate solely on fees, there must always be more demand than the available supply, and it must be consistent over time. In other words, unless the mempool has in excess of 4000 transactions with sufficiently high fees then there\u2019d be no reason to do any PoW hashing. At present, the block subsidy motivates miners to continue hashing even if the mempool is empty.</p> <p>But in the year 2140, if the mempool fee market is too low or empty, miners would need to curtail their equipment and await sufficient transaction fees. This lull in activity, if prolonged, would have deleterious effects on the network difficulty, leading to a far more vulnerable network (risk of chain splits, censorship, and any of the effects of 51% attacks).</p> <p>We can conclude that the fee market must be stable 24/7 with demand continuously in excess of the supply of blockspace, which would be necessary to competitively bid up fees.</p> <p>Prerequisite 2</p> <p>In order for Bitcoin to survive to the year 2140, demand for blockspace (for transaction settlement) must be stable and continuously greater than supply, and this must be true every hour of every day.</p>"},{"location":"bitcoin-as-money/in-the-year-2140/#price","title":"Price","text":"<p>While this is impossible to predict even in the short term, BTCUSD is impossibly more impossible to predict in the long-term.  And how should we measure this? USD may or may not exist in the year 2140 (especially not with any sense of value that we understand today). </p> <p>We could try to measure the value in gold. Gold has proven a far more stable store of value over time than any fiat currency, so we will estimate our calculations based on BTCAUX (Bitcoin to ounces of gold). Furthermore, we will reflect back on the Mempool Fee Market and determine any pre-conditions for Bitcoin\u2019s survival into the year 2140 based on fees (as priced in gold).</p> <p>At present, with block subsidies contributing to block rewards, we can earn about 80-100 ounces of gold per block. As we know mining is sustainable (and profitable) with this kind of reward today, we can assume that in the year 2140 we should see similar values earned per block, albeit entirely in fees.</p> <p>As there are roughly 4000 transactions in a block, this means an average transaction fee of 0.02 to 0.025 ounces of gold per transaction. This is about $50 in today\u2019s USD, which seems reasonable as a future minimum. In other words, we should expect a roughly 50x increase in BTC value relative to today\u2019s price as a baseline minimum for Bitcoin to be alive into the year 2140.</p> <p>Prerequisite 3</p> <p>In order for Bitcoin to survive to the year 2140, then the value (purchasing power) must be roughly 50x or more of its current price as measured in gold.</p> <p>To be clear, this is not a prediction of future price activity, this is a speculation that the Bitcoin price MUST increase at least 50x relative to gold if it is to survive without block subsidies.</p>"},{"location":"bitcoin-as-money/in-the-year-2140/#sovereigns-and-scale","title":"Sovereigns and Scale","text":"<p>At present, global fiat is not dependent on precious metals or any hard asset that is in demand outside of any one monetary sovereign (usually a nation state with its own fiat money). The existing global fiat system has tenuous dependencies on USD as the global medium of exchange for crude oil (the so-called \u201cpetrodollar\u201d system). And separately there exists global foreign exchange (forex) markets where fiat currencies are traded, arbitrages are sorted, and prices are discovered.</p> <p>Unlike a gold standard, where the exchange rate could be settled based on the precious metal content of coins, global forex requires a vastly more complicated system that reduces the number of financial sovereigns (that is, the number of nation states that can create their own fiat). Even now without a gold standard, there are far more mints (public and private) creating gold coins and bullion than there are sovereign nation states with their own fiat money. All one needs is gold. This is because the value of gold depends only on its demand, with very little seigniorage possible, and no forex market necessary.</p> <p>Bitcoin takes this to an extreme of eliminating seigniorage entirely. If Bitcoin survived into the year 2140, there will be no new Bitcoin and no opportunity for seigniorage. Additionally, blockspace will be constrained to roughly 210-million transactions per year. And while this is easily enough to absorb the 50x increase in value (as measured in gold) discussed previously, is this enough to cover a global demand of 12-billion people?</p> <p>In other words, could Bitcoin become a victim of its own success, as blockspace itself becomes too scarce, necessitating secondary layers that fail to offer the assurances one finds with on-chain settlement? Put simply, how could Bitcoin scale globally? And how does this compare to fiat?</p> <p>The short answer is no, it does not scale. On-chain transactions (final international settlement) clearly cannot scale to a global population of 12-billion. With only 210-million transactions per year possible, base-layer transactions will effectively be limited to a population of tens-of-millions maybe a hundred million max. Scaling beyond that will require secondary layers such as lightning, but even lightning necessitates on-chain transactions. In fact, any secondary layer will by definition require on-chain transactions in order to achieve the security and backing made possible by the base layer.</p> <p>Ultimately, if there are 12-billion people looking to use Bitcoin, only a small minority of millions (say 50 to 100-million people) will be able to do so on the base layer. While this sounds unfair, it's important to contrast this with fiat. Those millions of people making on-chain transactions are themselves financial sovereigns.</p> <p>Meanwhile, the number of fiat sovereigns is limited to the number of fiat currencies, which is under 200. Not thousands, not millions, and in fact only a handful of fiat currencies cover nearly all the value (USD, EUR, CNY, JPY, etc). This produces a defacto global oligarchy of central banks in a winner-take-all game where weaker fiats are absorbed into stronger fiats (e.g., so-called \u201cdollarization\u201d). Ultimately, the fiat game is not scalable globally over time.</p> <p>Contrast this with Bitcoin where anyone who transacts on-chain is the equivalent of a financial sovereign, able to provide liquidity into any secondary layer. Importantly, if Bitcoin is to survive and flourish into the year 2140, then secondary layers must be available to all without necessitating on-chain transactions. That is, an existing lightning channel must itself be scalable to multiple participants rather than be limited to a single user (as it is now).</p> <p>Prerequisite 4</p> <p>In order for Bitcoin to survive to the year 2140, secondary layer channels (such as lightning channels) must allow for multiple participants per channel, in other words, multiple private keys per channel.</p> <p>There are no technological barriers to achieving such a world of tens of millions of financial sovereigns, however, these secondary layers must never supplant or weaken the demand for base layer transactions sufficient to maintain the security of the network. In other words, if secondary layers provided sufficient savings and liquidity for everyone, then why use the base layer, why bother paying transaction fees for on-chain transactions?</p> <p>For Bitcoin to survive, financial sovereigns must have advantages not available to users of secondary layers, and these advantages must be sufficient to sustain the continuous demand for blockspace.</p> <p>In practice, a sovereign controls the liquidity, say, in a lightning channel. And even if multiple participants could share the same channel, those participants could not provide their own liquidity and benefit from 2nd layer transaction fees the way the sovereign can. The incentives for 2nd layer fees must be sufficient to encourage the far more costly on-chain transactions. There must be continued competition amongst Bitcoin users to become one of the financial sovereigns, iterating over time such that the continuous demand is met to keep proof-of-work hashing incentivized.</p> <p>Prerequisite 5</p> <p>In order for Bitcoin to survive to the year 2140, there must be fierce competition and incentives for users of secondary layers to become users of the base layer (financial sovereigns).</p>"},{"location":"bitcoin-as-money/in-the-year-2140/#culture-war","title":"Culture War","text":"<p>Ultimately, secondary layers will be a ripe target for fractional reserve schemes and fiat. For example, an existing nation state may choose to back their fiat currency with Bitcoin but then ban or limit their own citizens from transacting in Bitcoin (exactly as the US did during the Bretton Woods era). In this situation, even under a global Bitcoin standard, fiat currencies will very likely survive.</p> <p>The very pattern that led to global fiat could easily be repeated even after the abject failure of global fiat. The USD isn't the first fiat monetary system, and it's unlikely to be the last. As long as there are people willing to work for fiat while hard money exists, then fiat money will remain.</p> <p>Prerequisite 6</p> <p>In order for Bitcoin to survive to the year 2140, there must be sufficient global demand for hard money and a forcible rejection of fractional reserve and fiat.</p> <p>Unfortunately, if prerequisite 6 was already met, we would still be on a gold standard and Bitcoin would never have existed. The more nuanced flavor of this prerequisite is that Bitcoin itself must incentive exactly this cultural shift to anathematize fractional reserve and fiat money. Human nature on this matter has already spoken.</p> <p>God help us.</p>"},{"location":"bitcoin-as-money/medium-of-exchange/","title":"Bitcoin as a Medium of Exchange","text":"<p>You often hear money referred to as currency,  that is, the movement of money in  exchange for goods and services --  this is money as a medium of exchange. Buying a pizza or a coffee, selling  a car, all are examples of using money as  a medium of exchange.</p> <p>This is an important area where Bitcoin has  a distinct advantage and a   perceived disadvantage  compared to traditional forms of currency  such as gold and silver coins. This is also an area where fiat,  for all its faults,  has proven superior to gold. Simply put, using  fiat payment rails for small purchases  is often more usable  than any alternative. Importantly, this perceived advantage of   fiat as a medium of exchange hides  the fact that those seemingly   quick and easy payments  are sitting atop an outdated  and painfully inefficient  system of final settlement.</p>"},{"location":"bitcoin-as-money/medium-of-exchange/#final-settlement","title":"Final Settlement","text":"<p>Money as a medium of exchange   for small payments is very different  than final settlement. Bitcoin is unparalleled in its ability  to perform final settlement. As a digital money, Bitcoin is extremely  advantageous in that it can be transacted  anywhere on earth in any arbitrary amount. You don't need to look for exact change, and  you don't need to mail a check. With Bitcoin  you send a transaction and wait for final  settlement. The ability to attain final settlement  anywhere on earth in any amount  and without any trusted intermediaries  or authority is unprecedented, and is   why Bitcoin -- if it is true -- is  the most superior form of money   to ever exist. This is also why Bitcoin may inevitably  become the money of international settlement.</p> <p>However, because Bitcoin is fully decentralized and  trustless,   relying on transaction fees and   block time,  this poses a perceived disadvantage;  you must wait for new blocks in   order to reach final settlement.  This wait  plus transaction fees makes Bitcoin  seemingly impractical for small  purchases such as a cup of coffee. Or rather, trying to achieve final  international settlement for the   purchase of a cup of coffee is  quite the overkill.</p> <p>Neither gold nor fiat  provide final settlement for a cup  of coffee. Gold lends itself to a system of credits  and typically relied on a  bimetal monetary system  where silver coins acted as a   medium of exchange. Fiat relies on outdated  banking cores,  and in practice takes weeks or months for   something as simple as a cup of coffee  to reach final settlement. The exception to this is cash on hand,  promissory notes, which  reach final settlement  the moment two trusted parties transact. Cash payments are quite efficient but  must be done in person, and require  trust (trust in the fiat currency itself,  and trust that the promissory note in question  is not a counterfeit).</p> <p>There is no known completely trustless  medium of exchange, that is,  not until Bitcoin over the  lightning network.</p>"},{"location":"bitcoin-as-money/medium-of-exchange/#lightning-network","title":"Lightning Network","text":"<p>Bitcoin, like the Internet itself,  offers a layered architecture. Final settlement  is guaranteed on the base layer, and  payment networks such as the  Lightning network  are built on top of the base layer. You can put some Bitcoin into a  lightning channel through a base layer  transaction, and you can use that  to buy your coffee in a fast  and highly scalable payment network. Think of this as petty cash, like   spending from a gift card, only  faster and with verifiable payments.</p> <p>Meanwhile the base layer is used only  for final settlement. And yet Lightning  offers its own verifiable  settlements. It can do this because  it is built on the Bitcoin network  as a 2nd layer, gaining the security  and stability of the base layer. Bitcoin on the Lightning network  is backed by transactions on the base layer. The movement of Bitcoin on the   Lightning network  simply shifts the balances between owners.</p> <p>E.g., if you start with 0.5 Bitcoin  on the Lightning network  and spend 0.1, and separately  someone pays you 0.05, then your balance  of 0.45 Bitcoin can be settled on  the base layer. Closing a Lightning  channel requires a base layer transaction. In fact, if you have an open Lightning  channel, then you have a guaranteed transaction  that could be made on the base layer to  close that channel. That guaranteed base-layer transaction is  why lightning payments can settle instantly. If you start with a guaranteed 0.5 Bitcoin,  and you spend 0.1, your original  \"guaranteed 0.5 Bitcoin\" transaction  is replaced by one with 0.4 Bitcoin.</p> <p>Lightning network is merely a protocol keeping track  of the guaranteed transactions that could  be made on the base layer. So while base-layer  settlement is slow, waiting for 3 or more  confirmed blocks, Lightning settlement is  instant, and that instant settlement is  backed by the guaranteed transaction  that could be made on the base-layer.</p>"},{"location":"bitcoin-as-money/medium-of-exchange/#bitcoin-as-currency","title":"Bitcoin as Currency","text":"<p>In practice, the capacity of the Lightning  network, that is, the total amount of Bitcoin  in all Lightning channels, represents the  circulating supply of Bitcoin as a currency,  as a medium of exchange. Because of the decentralized nature of  the Lightning network, it is impossible  to know how much Bitcoin is being used in  private Lightning channels. However, the public (discoverable) channels  have seen steadily growing adoption and  capacity.</p> <p>And importantly, despite the scaling limitations  of settlement on the base-layer,  Lightning transactions  are infinitely scalable, easily handling  millions or theoretically even billions   of transactions per second.</p> <p>Lightning demonstrates the importance of  a layered architecture as well as  the importance of Bitcoin's continuous  development. Before there was Lightning, Bitcoin  was simply not a viable  medium of exchange. Now it offers the  most advanced and scalable   medium of exchange that the world  has ever seen.</p>"},{"location":"bitcoin-as-money/monetary-policy/","title":"Monetary Policy","text":""},{"location":"bitcoin-as-money/monetary-policy/#bitcoins-monetary-policy","title":"Bitcoin's Monetary Policy","text":"<p>The following equation contains the   entirety of Bitcoin's monetary policy:</p> <p></p> <p>If you calculate the above summation, it is  approximately 21-million.</p> asymptotic limit <p>Technically, the total supply of Bitcoin will be capped at  20,999,999.9769. This is because there are only 32 halvings until   the block subsidy will be zero.</p> <p>If you were to replace the 32 with infinity, then the above equation would equal 21-million  as an asymptotic limit. That is, it would take infinite time and infinite decimal places  to get to 21-million.</p>"},{"location":"bitcoin-as-money/monetary-policy/#monetary-equation","title":"Monetary Equation","text":"<p>The equation (Bitcoin's monetary policy)  breaks down as follows:</p> <p>There are 33 block-subsidy eras (0 to 32),  each lasting  exactly 210,000 blocks. This means each era is roughly 4-years,  for a total of 132 years till the final  Satoshi is issued.</p> <p>Each era halves the block-subsidy, and  after 32 halvings the subsidy would result  in a number too small to represent in Satoshis,  hence the subsidy will be zero.</p> <p>At that point (block 6,930,000 in the year 2140),  there will have been 20,999,999.9769 Bitcoin  block subsidies, and from then  on Bitcoin mining will operate only  on fees (which in practice will have  already happened as the prior era subsidy  will have already been a single Satoshi).</p> <p></p>"},{"location":"bitcoin-as-money/monetary-policy/#supply-over-time","title":"Supply over Time","text":"<p>One of the reasons Bitcoin's ledger can be  referred to as a   timechain  is because we know the future supply schedule,  e.g., we know the final Satoshi will be  issued in the year 2140. This is an often overlooked point. The issuance of Bitcoin is not dependent on  its value. Let's repeat that:</p> <p>Issuance of Bitcoin is not dependent on its value.</p> <p>Imagine if the spot-price of gold or silver jumped  up to over $1-million.  That is, an ounce of silver would fetch more than  $1-million. You might go looking for old silver dollars. And how do you think this would effect silver mining?</p> <p>This is so fundamental as to be a law of nature. Increased demand will result in more production. And yet if Bitcoin price goes to $1-million  or more, the issuance of new Bitcoin will  remain on schedule. Issuance of Bitcoin depends on time. Let's repeat that:</p> <p>Issuance of Bitcoin depends on time.</p> <p>What would happen if, tomorrow,  the price of Bitcoin went up to $1-million? Mining would be very profitable. The hashrate would skyrocket. And yet, issuance of new Bitcoin would  stay on schedule. This is due to the difficulty adjustment.</p>"},{"location":"bitcoin-as-money/monetary-policy/#difficulty-adjustment","title":"Difficulty Adjustment","text":"<p>Every 2016 blocks there is a difficulty  adjustment to maintain a 10-minute average block time. That is, if the average time between each  of those 2016 blocks  is less than 10-minutes,   the difficulty will increase. If the average is more than 10-minutes,  the difficulty will decrease. For this reason, while the time between blocks  can vary,  the average remains 10-minutes.</p> <p>Without a doubt, this is   Satoshi Nakamoto's   greatest innovation. Unlike all prior attempts at digital money,  this is why Bitcoin worked,  and continues to work. This is why Bitcoin is not and never was  tulip mania. If tulip prices increase, so too will tulip farming,  because tulips are not a scarce asset.</p> <p>Increases in the valuation of Bitcoin will  lead to more mining   as it becomes more profitable,   yet those increases will in turn  lead to a difficulty adjustment such that  the increased mining does not alter  the supply schedule. The difficulty adjustment is why  Bitcoin's monetary policy will always follow a  rather predictable future supply schedule.</p> <p>This seemingly benign difficulty adjustment  is what makes Bitcoin the scarcest asset the  world has ever known. Or rather, the coalescence   of a decentralized ledger,  proof-of-work issuance with a  difficulty adjustment, and  enforced through a consensus protocol --  all of this in harmony  is what make Bitcoin the scarcest  and most uncorruptible   asset that has ever existed. </p>"},{"location":"bitcoin-as-money/money-and-state/","title":"Money and State","text":"<p>There is no more important problem to solve than the separation of money from state.</p> <p>Power over money is power over human choice. If a state had complete power over money  then there would be no limit to that state's   power over those governed. Controlling what people can and cannot buy,  you would barely need law enforcement;  power over money would be sufficient enforcement  of all human behavior and action. Even crimes of passion would become quite  difficult if one couldn't buy food or water or  transportation without permission.</p> <p>Complete power over money would offer  total totalitarianism. Such power would render  us into something less than slaves,  including the people managing the money. The system itself would need to be all powerful,  requiring us to be obedient  (in action, speech, and thought)   to the monetary principalities that   emerge from our own base instincts. Worse, we would know this system is corrupt  and evil, but we would be unable to speak  out against it.</p> <p>Historically, such totalitarianism has proven  impossible, collapsing under its own  tyrannical fiat. As monetary technology increases --  with all the obvious benefits to humanity --  so too do we increase  abuses of power by the state. The desire  from the state to wield complete  monetary surveillance and control  -- as futile and nihilistic as this may prove --  will become irresistible and is in many  ways a self-perpetuating existential  crisis from the state itself  (as monetary technology renders  much of the state's bureaucratic controls  useless to the interests of the people). We can either limit monetary technology  to slow the state's destructive path,  which puts our civilization on a dead end,  or we separate money from state   -- freeing money from the corrupting  influence of the state itself.</p>"},{"location":"bitcoin-as-money/money-and-state/#church-and-state","title":"Church and State","text":"<p>An often overlooked consequence  of the establishment clause of the  first amendment of the United States   is that rather than liberating politics from  the corrupting influence of churches,  the opposite was true.</p> <p>Churches, not politics, were set free.</p> <p>This may run contrary to conventional  wisdom, to the facade of enlightenment  thinking that we arrogantly ascribe,  but think about it: has the  political class become less corrupt   as they separated themselves from religious  institutions? Or have the churches lessened their  own corruption as they separated  from the state, and become increasingly   benign places of worship? There is much to be criticized when looking  at modern churches, such as their  shallow banality with no more sacredness than  the strip-malls where they reside,   but the  inquisition  they are not.</p> <p>To the degree a church has been separated from  state, that church has been freed of the  corrupting influence of the state. In fact, it was state-controlled money that was  most often  the corrupting influence,  not the church nor even the state. Separating money from human control, from  oligarchs and autocrats, is the challenge  we face.</p> <p>\"I care not who controls a nation\u2019s political affairs, so long as I control her currency\"</p> <p>-- Mayer Amschel Rothschild</p>"},{"location":"bitcoin-as-money/money-and-state/#human-nature","title":"Human Nature","text":"<p>One cannot separate human nature from religion  nor from money. There have been religions and money  as long as there has  been humans. The concepts of a store of wealth, of  scarce and beautiful artifacts,  what we can call  proto-money,  have existed in every ancient culture. Primitive forms of money are as universal as  primitive, usually   animistic,  religions.</p> Fiat Money and Ancestor Worship <p>Look at the design of paper money and coinage. Founding fathers, kings and queens, and even the most secular and supposedly  \"enlightened\" money designs are ostensibly a form of ancestor worship.</p> <p></p> <p>These animistic tokens functioned well-enough for primitive economies, but are being replaced by digital money, stripped of their animistic nature. </p> <p>And rather than become a source of liberation, digital money has become a system of control, and not by mythological archetypes or even the pretense of a functioning religious system, but by mundane bureaucratic policy makers with unchecked power, parasitically feeding on the the people (people who don't even know the names of their would-be tyrant bureaucrats).</p> <p>Religious beliefs, whether secular or traditional,  provide a moral framework and a language  with which to communicate what are  otherwise transcendent concepts   (such as truth, goodness, or meaning in life sufficient  to bear the weight of life's suffering). We cannot escape religion,   just as we cannot escape money.</p> <p>Without a functioning religious belief,   we inevitably fall into a   crisis of meaning. And without a functioning money,  we inevitably fall into servitude and debt,  and eventually into starvation. We cannot escape the very human need  for money.</p> <p>But what we can do, is separate money  from the state. That is, to set money free from the  corrupting influence of the state. To once and for all end the corrupting  power of seigniorage --  to relegate money to its proper place,  and not as a source of power and worship.</p>"},{"location":"bitcoin-as-money/money-and-state/#money-and-state_1","title":"Money and State","text":"<p>What is the ultimate fate of modern fiat,  specifically,  what is the fate of  the petrodollar system known as USD? Of the hundreds of  fiat currencies in the world;  of all the unprecedented  hyperinflation  events occurring around the globe;  the lynchpin of this entire  damnable fiat money experiment  is the USD petrodollar.</p> USD, a brief history <p>The USD was once backed by gold. The very definition of USD was a measure of gold. It was worth roughly $20/ounce. You can still find \"double eagle\" gold coins, roughly one ounce of gold, with the words, \"twenty dollars\", printed very clearly on the coin. Paper notes, meanwhile, were gold certificates (redeemable for gold).</p> <p></p> <p>In 1933, private gold was seized by the federal government through executive order 6102. A twenty dollar bill was no longer a \"gold certificate\" but instead a Federal Reserve note. International settlements still happened in gold, but the USD was debased to $35/ounce (extracting wealth from the American people to pay off western war debts). Later, during the Bretton Woods era (starting in 1944), the $35/ounce rate was guaranteed for all international settlements, which continued the legacy of the gold standard, albeit not available to the people of the US.</p> <p>The Bretton Woods system ended in 1971 with the Nixon shock, and shortly after -- in 1974 -- the petrodollar system emerged. Fiat-funded economists proclaimed that the price of gold would drop, thinking that this would remove the monetary premium of gold. And despite the opposite happening, despite wealth transfers from productive workers to cantillon insiders, despite grotesque abuses of power and corruption, despite continuous war in oil-rich countries, despite health epidemics brought about by inflating the price of quality food, despite all the evidence of how disastrous this system has been and continues to be, not a single person was ever held to account for their role in this abject evil.</p> <p>The fate of the existing  fiat USD  seems obvious, as  fiat systems inevitably   hyperinflate into oblivion. In the US  we are at the brink of hyperinflation  despite a shallow cover up. But in the end, people want to eat,   feed their families, be healthy,   live productive lives that offer a   future that is worth their present suffering,   oh and of course not   die in a gulag or concentration camp.  Freedom is a necessity,   and without it systems fail.  This includes the current leaders.  They can't but live in the world too,   and act out the very human desire for  freedom and flourishing. What made civilization possible was not  systems of control,   but freedom to live good lives,   freedom and opportunity to build your own life,  a life that is worth living.</p> <p>The solution to these problems (of money and state),  can not be solved by the state. There are no political solutions to problems  born of political interventions. The solution can only be a new form of money,  superior to fiat money,  and superior to gold. Bitcoin has all the properties necessary  to be the solution. And while the truth of Bitcoin  may take several generations to fully prove,  there is no more important problem for us to solve.</p>"},{"location":"bitcoin-as-money/store-of-value/","title":"Bitcoin as a Store of Value","text":"<p>Most people first learn about Bitcoin  as a risky investment,  a speculative gamble on future wealth. They buy Bitcoin hoping to get rich,  thinking in terms of fiat money  (such as a USD unit of account). Later they might realize that Bitcoin's  fixed supply  makes Bitcoin a store of value,   a superior store of value. In fact, Bitcoin's early adoption is  arguably due to its  role as a long-term store of value.</p> <p>As people increasingly look to Bitcoin  as a store of value,   rarely do those same people  think of Bitcoin as a   unit of account. Bitcoin  is not necessarily any stronger  as a store of value  than it is as a   unit of account,  quite the contrary. As powerful of a store of value as Bitcoin  might be, it is fundamentally a  unit of account.</p> <p>Digital scarcity in a trustless and   completely transparent network provides  a global unit of account, and the  clearest signal  possible for price discovery. It is a delightful   (and arguably necessary) side effect  that Bitcoin is also a superior  store of value.</p>"},{"location":"bitcoin-as-money/store-of-value/#encountering-bitcoin","title":"Encountering Bitcoin","text":"<p>In the future -- if Bitcoin is true --  people will first encounter  it as a unit of account,  that is, as prices in the market. And if they participate in the market  they will experience Bitcoin as a  medium of exchange. And then lastly,  when they save for the future,  then and only then  will they experience  Bitcoin as a store of value. Speculative gambles will still exist,  including as priced risks known as \"investments\",  but money itself is not a speculation,  it is a unit of account,  a medium of exchange,  and lastly a store of value. This may all seem odd and overly simplistic,  but it is the inevitable  consequence of Bitcoin being true.</p> <p>Today, we approach Bitcoin somewhat  backwards, starting with a  store of value. We do this  because we live under fiat,  and fiat is a broken  store of value. The price of Bitcoin in fiat  is extremely volatile,  which is not a reflection of Bitcoin  but rather the speculative  nature of fiat-minded individuals  desperate to play the fiat game. In other words, they're trying to store  value in fiat by buying and selling Bitcoin,  trying to time the market,  which does not and can not work. Similar things happened with the gold price  in the dying days of the Weimar Republic. The volatility of the gold price was  not a reflection of gold, but of the  hyperinflating money,  the inevitable death throws of fiat money.</p> <p></p> <p>During the final years of the Weimar Republic  the price of gold was extremely volatile. Was this a reflection of the volatility of  gold? Was gold failing as a store of value? Clearly no, the currency hyperinflated   until it collapsed, leaving gold as the only  store of value. And only afterwards can markets emerge  with proper price discovery. The effects of fiat all tend to follow this  same pattern, even USD.</p> <p>The only way to store value in  a fiat system is by rent seeking  parasitism, such as buying houses  with cheap debt and renting  to people who cannot  afford to buy a house. A process that is as morally corrupt  as it is unsustainable.</p>"},{"location":"bitcoin-as-money/store-of-value/#overcoming-fiat","title":"Overcoming Fiat","text":"<p>If you naively attempt to store value in fiat,  it will lose its value over time. If you need to move large amounts of fiat  from one country to another,  it will likely be confiscated or unjustly taxed. This is because there are many competing  fiat currencies and fiat voices (so-to-speak). Fiat money is inextricably bound to politics  and cultural norms. It is afterall only an expression  of those who speak it into power.</p> <p>Simply put, fiat cannot function as   a store of value. This is why fine art  has become so corrupted, why real estate  and equities are over inflated. People cannot store  wealth using fiat money, so they seek  to preserve wealth through other  means, typically malinvesting  (investing in index funds not as a priced risk,  but as a malinvested store of value). The only successful store of value under  fiat is rent-seeking with privileged  access to the money printer  (to cheap debt).</p> Equities (vs gold) <p>The snake-oil salesmen of \"modern monetary theory\" would have you believe that economic growth depends on inflationary money; after all, they claim you can store value in productive index funds such as the S&amp;P 500.</p> <p>Here is a comparison of the S&amp;P 500 to itself (but priced in gold) since the year 2000.   This is an inverse way of showing that gold, completely unproductive and boring, has outperformed equities as a store of value; and that real wealth has decreased in the last few decades. The perceived volatility of hard assets like Bitcoin are in actuality a reflection of the volatility in fiat (and its inability to properly price assets).</p> <p>Bitcoin -- if it is true -- is a superior store of value  to fiat and even to gold  (the most effective store of value the world has ever known). Over time Bitcoin will gain adoption and value,   and it can do this while being   transferable anywhere on earth, unmolested. Neither gold nor fiat nor real-estate nor even fine-art  can function as a better store of value than Bitcoin.</p> Fiat Volatility <p>Bitcoin is often criticized as being \"too volatile\". However, even as measured in fiat, Bitcoin is by far the highest-performing asset of all time. And considering that 80% of all USD was created in the last 5 years, one may want to consider that it is fiat volatility that is confusing price signals -- after all, the Bitcoin supply has stayed fixed and predictable, with growing adoption.</p> <p>For better or worse, Bitcoin price movement is a slow process of price discovery -- as those who understand the fundamentals of money would never sell Bitcoin for fiat, and ultimately Bitcoin finds its way into stronger hands, sending its fiat price higher and higher. The weaker money will be overproduced to satisfy the demand for the stronger money.  </p>"},{"location":"bitcoin-as-money/unit-of-account/","title":"Bitcoin as a Unit of Account","text":"<p>This is the most important quality of money. Don't let the benign name, unit of account,   fool you. In the future this will be people's first encounter  with Bitcoin, as a unit of account.</p> <p>A unit of account is -the- measure of value,  the measure of value that all human beings  can agree upon such that our subjective  and continuously changing perception of  value can be rendered knowable. In other words, this is the price in a market.</p> Bentleys and Cristals <p>There is a peculiar practice amongst some Wall Street types  when dealing with large sums of money.</p> <p>It is difficult to intuitively  understand  a \"billion dollars\", or hundreds of millions  of dollars, let alone the quadrillions of  dollars of  unfunded liabilities tied up in derivative  schemes.</p> <p>As a result, an investor may refer to  Bentleys, or bottles of Cristal,  or other high value items, as more  convenient units than dollars.</p> <p>I'm not going to sweat over this 50 Cristal client when there's 5 Bentleys on the other line.</p> <p>In this case Bentley and Cristal are being  used in the abstract as units of account.</p>"},{"location":"bitcoin-as-money/unit-of-account/#fiat-unit-of-account","title":"Fiat Unit of Account","text":"<p>Fiat money is a terrible  unit of account. This is because you must  \"adjust for inflation\", or append the date,   or both. And everything in fiat is relative with no absolute  unit to measure against (not even bottles of Cristal). It is all fiat all the time.</p> <p>Fiat unit of account is like a ruler that arbitrarily changes length; much like the imperial unit of length, the \"foot\"  (which was historically based on the length of a person's foot). Although in fairness at least the length of a foot  never inflated to be larger than the earth   (inflationary fiat currency can make no such claim).</p> <p>this old $20 gold coin cost $,1500 last year, but should have been $455 if adjusted by CPI, but right now it's $2,200 because of actual inflation.</p>"},{"location":"bitcoin-as-money/unit-of-account/#bitcoin-as-the-standard","title":"Bitcoin as the Standard","text":"<p>Due to it's fixed supply Bitcoin is a superior  unit of account. Interestingly, it operates as  a potentially deflationary unit of account. That is, goods and services  could get cheaper over time as measured in  Bitcoin. But only as a result of actual  economic growth.</p> <p>On one hand this presents similar  math problems  that we see with inflationary  money, but only with respect to   Bitcoin's early adoption,</p> <p>my house was 12 Bitcoin in 2022, which is now the price of the entire neighborhood.</p> <p>The key difference is that any amount of Bitcoin  is an exact fraction of all the Bitcoin that  will ever exist.  1 Bitcoin is  1 out of 21-million, always.</p> <p>It's like using real-estate as a unit of account,  except it's fungible, infinitely divisible,  and the value won't go down  because of bad schools in your neighborhood.</p> <p>As Bitcoin adoption increases,   the perceived value of Bitcoin will increase. And yet even now the price of goods and services in Bitcoin  send a clear signal of what people are willing  to pay based on a truly scarce resource.</p> <p>Price signals in fiat are very messy, but they  become very clear in Bitcoin.  Spending Bitcoin  is difficult for Bitcoiners, as it should be  with money that operates well.</p> <p>However, there is a pesky unit bias. In addition to having  trouble understanding \"billions of dollars\",  we have a similar difficulty understanding  fractions,</p> <p>this costs 0.00000190 Bitcoin</p>"},{"location":"bitcoin-as-money/unit-of-account/#sats-as-the-standard","title":"Sats as the Standard","text":"<p>There are exactly 100 million Satoshis, or Sats, in a Bitcoin. This is the smallest unit on the   timechain. This is not the smallest possible unit of Bitcoin;  one could use  millisats or picosats.  In fact, there is no end to the divisibility  of Bitcoin.</p> <p>That said -- if Bitcoin is true -- then Sats are the standard.</p> <p>this costs 190 Sats</p> <p>Imagine a \"100-Sat Shoppe\" or \"99-Sat Store\" where  everything is 99 Sats. This could start as the equivalent of a dollar store,  or a 100-yen store in Japan.</p> <p></p> <p>Now imagine rather than prices rising over time  due to inflation, or lowering the quality of  merchandise like at the dollar store,  the opposite happens under Bitcoin.</p> <p>When the BTCUSD price reaches a million, then the  100-Sat Shoppe would resemble a dollar store.  But as the global economy grows, the 100-Sat Shoppe  would offer higher end goods, or bulk quantities  of lower end goods, all to justify 100 Sats;  eventually, perhaps a Sat Shoppe opens where everything is  only 1 Sat.</p> <p>a Sat earned is a Sat saved</p> <p>And even then, as the economy  continued to grow,  the quality of goods at a Sat Shoppe  would increase to justify the hefty price tag   of a full Satoshi.</p>"},{"location":"criticisms/","title":"Criticisms","text":"<p>There is a lot of criticism of Bitcoin --  a lot  -- especially from journalists and so-called   experts,  and yet despite this abundance of criticism,   it seems impossible   to find critics that understand  Bitcoin, let alone demonstrate  their understanding.</p> <p>In practice, if the critics were right,  Bitcoin should have been dead years ago. In fact, it has been declared  dead,  many,  many  times. And yet despite this, the quality of the criticism  hasn't improved even as Bitcoin has succeeded. The criticism has become incessant  noise with very little signal.</p> <p>There is no informed criticism. The more one learns about Bitcoin, the more one supports Bitcoin.</p> <p>This of course suggests  that the critics are ill-informed,  lazy, and intellectually dishonest  (being so unabashedly uninterested  in the pursuit of truth).  It would even suggest that most of the media functions as  propaganda defending the status quo, and  accepting without question the dictates of power.</p> <p>However,  this also presents a significant weakness of  Bitcoin.  Lack of competent criticism   poses a serious risk,  especially for something as important as money,  including the   separation of money and state.</p> <p>The biggest risk to Bitcoin is its lack of competent cr\u00edtics.</p> <p>E.g., what if Bitcoin proves to be dangerous,  leading to a dystopian future,  how would you stop it?  Could you stop it?</p> <p>And interestingly, for Bitcoin to succeed  it needs to be unstoppable.  The powers  against it are great. So the question, </p> <p>\"is Bitcoin true?\"</p> <p>This question can better be asked,</p> <p>is Bitcoin   sufficiently true that its  dominance is inevitable,  and is this a good thing?</p> <p>This alone suggests a better critique than any  of the tired tropes found in otherwise  reputable media outlets --  Bitcoin cannot be just \"the best sound money\",  it must be ungovernable, completely  unstoppable by any centralizing power. With that in mind, and  in order to provide better criticism,   potentially even constructive criticism,  we will steel-man the  common critiques as well as explore  reasonable and valid criticisms of Bitcoin. And in all cases we will tackle the strongest  version of each argument, completely   avoiding the ill-informed noise  you find amidst most Bitcoin critics.</p>"},{"location":"criticisms/bitcoin-not-perfect/","title":"Bitcoin is not Perfect","text":"<p>This is one of the most common themes of critique,  especially when a critic is engaged in debate with a Bitcoiner. Once you see the pattern you'll see it everywhere. The critic simply claims that a percieved weakness  is more important and relevant  than it actually is. Here are some of the most common examples of this strategy:</p> <ul> <li>criminals use Bitcoin</li> <li>mining uses a lot of electricity</li> <li>it's not fairly distributed</li> <li>the price is too volatile</li> <li>the fixed supply prevents emergency funding</li> </ul> <p>The problem with the above arguments   is that none of them would disprove Bitcoin  (even if the claims were valid -- they are not, but that's irrelavant). This form of argument is a kind of trap,  similar to   Bulverism,  where the critic  simply distracts with unrelated noise,  explaining why something is wrong without actually showing a critical flaw.</p> <p>For example, Bitcoin can be true AND used by criminals,  and still have a volatile fiat price,  and be unfairly distributed,  and so on -- the question of whether  Bitcoin is true is irrelevant to all of those concerns.</p>"},{"location":"criticisms/bitcoin-not-perfect/#bitcoin-fixes-everything","title":"Bitcoin fixes -- everything?","text":"<p>In the spirit of steelmanning a more useful critique,   we can examine the inverse of this argument,  that Bitcoin is or should be perfect. What many would call hopium,  naive Bitcoiners act as if  Bitcoin is the panacea to fix all of society's ills. And even more dangerous is to  hold Bitcoin to an impossible standard and refuse or resist  adoption till it becomes perfect.</p> <p>Perfect is the enemy of good <sup>*</sup></p> <p>It is important to remember that Bitcoin is not, and need not be, perfect. Bitcoin only needs to be true,  sufficiently true that it cannot be stopped or centralized.</p>"},{"location":"criticisms/bitcoin-not-perfect/#good-enough","title":"Good enough?","text":"<p>To push this criticism into steelman territory,  let's consider that there does exist a set of   necessary conditions for Bitcoin  to survive now and in the future. If not perfect,   it must be good enough. But what does that mean for Bitcoin to be good enough?</p> <p>Bitcoin requires a sufficiently  advanced civilization with electricity, computers,  and a global network. Bitcoin will also need self-interested developers,  and self-interested users,  and self-interested miners --  all to preserve the value and decentralization  of the network. While this does exist now, there is no reason  to believe this will persist into the future. Adopting Bitcoin is very much an act of faith -- Faith that civilization can and should persist,  that human progress will and should continue,  and that a universal unit-of-account is beneficial towards these ends.</p> <p>To not believe in the above (with sufficient faith, beyond just rational self-interest)  is to bow to a form nihilism that not even Bitcoin could survive. In other words, Bitcoin depends on human civilization to survive and flourish. If humans cannot make it, then neither can Bitcoin.</p> <p>However, even with faith in human civilization,  there are some very difficult compromises  that Bitcoin has faced, and will continue to face. Most concerning is privacy and decentralization. Bitcoin is not perfectly decentralized,  and it is not perfectly private. Compromises were made.</p>"},{"location":"criticisms/bitcoin-not-perfect/#imperfect-privacy","title":"Imperfect privacy","text":"<p>In order to provide full transparency and  full auditability of its supply, Bitcoin  is not fully private nor anonymous  -- it is pseudonymous. In other words, sending and receiving Bitcoin  is like writing under a pseudonym. You can create as many wallets   (each with as many addresses) as you like. Bitcoin gives you the tools for privacy,  but it guarantees nothing; you could  disclose your addresses allowing others to surveil   your Bitcoin. As a result, it is not and never can be as  private as cash.</p> <p>Privacy is even a problem amongst Bitcoiners. For example, there are many fanatic Bitcoiners  that simply do not use lightning payment  rails out of concern for privacy;  they do not run private lightning channels  and learn how to secure their nodes --  instead, they continue to use fiat  payment rails   (with a kind of blindspot to the privacy problems with fiat)  and they will say \"more work needs to be done for lightning adoption\". And while this is true -- more work is always needed --  we do not wait for others to do the work.</p> <p>If you're capable of informed criticism, then you're capable of contributing to a BIP</p> <p>Ultimately, there is no perfect privacy,  there is only a cultural attitude to value  and fight for privacy (or not). Bitcoin provides us with sufficient tools  for privacy, but the rest is up to us. Cryptography provides us an asymmetric advantage  to favor privacy, but  we cannot expect any cryptographic  system to guarantee privacy if we  ourselves don't value it.</p>"},{"location":"criticisms/bitcoin-not-perfect/#imperfect-decentralization","title":"Imperfect decentralization","text":"<p>Bitcoin compromises decentralization  in order to maintain a fully auditable  fixed supply with no conflicts -- an undisputed ledger. Specifically, the consensus rules solve  any disputes in the ledger  through proof-of-work consensus. In a conflict (divergent timechains)  the chain with the most proof-of-work  will win, the other chain will lose  (erasing those transactions).</p> <p>Most of the whitepaper  was dedicated to this exact problem,  the famed  51% attack:  if anyone could  achieve 51% or more of the total  network hashrate (the work in proof-of-work)  then they could control the network. They could use this power for good or evil,  but it's centralized either way. This is why the security of the network  depends on the enormous cost (in terms of money and ingenuity)  of a 51% attack over a given number of blocks.</p> <p>Mining benefits from  economies of scale  and as such we did see larger and larger mining companies  with early signs of monopolization --  right up until they went  bankrupt. Fortunate to the health of the network (but not to the miners),   mining is zero sum  and it has so far proved impossible to monopolize.</p> <p>diseconomies of scale within Bitcoin mining must always be greater than its economies of scale</p> <p>There is no guarantee that there  will never be a mining monopoly --  and while this is not necessarily a risk to the  fixed supply, this is a severe risk to  transaction processing. If you want a transaction in the ledger  you go through miners,  and if mining was ever monopolized,  there would be a centralized  point-of-control of who could  (and could not)  transact on chain. A miner with a majority of the hashrate  could simply ignore all other miners,  knowing full well it will always win  any divergent timechains, meaning  its mempool selection would be the  only one that matters.</p> <p>This would effectively  prove Bitcoin false. Because it would be centralized,  the monopoly miner would be the sole arbiter   for all international settlements. They could set any premiums they  wanted on transaction fees. They could censor any/all transactions. They could push people to  second layer payment rails that  they control (as they could censor  all competition), giving them  full control over currency. And they could do all this without  breaking consensus rules. Eventually, even the power of seigniorage  could be gained (on a secondary layer)  and the system would   become yet another bloated fiat monetary system.</p> <p>Only time will tell whether  the game theory behind Bitcoin  is sufficient to ensure decentralization. And perhaps it will come down to a small  group of zealots that understand this  problem and build their own decentralized  mining infrastructure. Whatever happens will happen, and it should  be clear that Bitcoin is far from a sure thing,  but it is ours to lose if we don't pull this off.</p>"},{"location":"criticisms/cantillon/","title":"Cantillon Bubbles","text":"<p>This is a very misunderstood  problem --  specifically, Bitcoin's  price inflation problem. In practice, Bitcoin is deflationary money,  such that under a Bitcoin standard  prices should decrease over time,  leading to more purchasing power  for savers.</p> <p>However, this assumes the supply  of circulating coins remains  constant in every market,  but in practice there  is likely to be  supply shocks  and what can be called  Cantillon bubbles.</p>"},{"location":"criticisms/cantillon/#what-is-a-cantillon-bubble","title":"What is a Cantillon Bubble?","text":"<p>The  Cantillon Effect  typically refers to fiat money  and seigniorage granted  to insiders. The Cantillon effect can not exist  under a Bitcoin standard. However, while this is true in  absolute terms over the entire  Bitcoin network,  local markets can and will  suffer supply shocks,  price inflation, and  cornered markets.</p> <p>the markets can remain irrational longer than you can remain solvent.</p> <p>The deleterious effects of Keynesian  economics are not only possible  under a Bitcoin standard but  also very likely. And while such effects  cannot sustain indefinitely,  the threat and the risk is  still there. Even worse, every attempt at such  market manipulations  will likely correspond  with attempts at fractional  reserve and seigniorage.</p> <p>Ultimately, this is an ethical  problem. Bitcoin  provides an asymetric advantage  to savers, but there will always  remain a threat from  self-interested parasites  looking to gain the value  of others' honest labor. This is the definition of criminality,  and is a problem that Bitcoin  does not fully \"fix\", but rather  can only make such criminality  more costly   (but certainly not impossible).</p>"},{"location":"criticisms/cantillon/#how-does-it-work","title":"How does it work?","text":"<p>Imagine an efficient local economy with  a small circulating supply --   let's say 1 Bitcoin on average  with 10-20 Bitcoin in people's savings. Prices are in sats and traded over  lightning with very few on-chain  transactions  (just periodic settlements). Wages are paid, food and fuel is  purchased with regular predictability. People are happy.</p> <p>Then, one day, an outsider brings  in 50,000 Bitcoin into this market. They could buy every business and  control the entire supply chain. The influx of new Bitcoin would inflate  prices in this local market,  leading to a mini-bubble,  all based on the whims of this  very wealthy  outsider.</p> <p>An efficient market hypothesis  will predict that prices will  stabilize over time as the   new Bitcoin finds its way  into the strongest hands. However, unlike gold, Bitcoin  can be transferred anywhere  on earth with relative ease. The inflated local economy  may even attract foreign  investors -- further  exacerbating the price inflation.</p> <p>Every local market would be vulnerable  to these Cantillon bubbles,  and worse,  those most susceptible to   \"paper Bitcoin\"  (fractional reserve schemes)  would likely be targetted   by grifters looking  to extract wealth. An unscrupulous financier   would push for fractional  reserve schemes in any these  local economies. Many honest people will  likely fall victim to  various \"paper Bitcoin\" scams.</p> <p>In practice, as long as there's  someone willing to take the bait,  this problem will persist. Localized supply shocks and price  inflation will happen with  exactly the same problems we see  with fiat. The notable difference is that  the scammers under a Bitcoin standard  will need to be more competent  to pull off their grift than  modern central bankers  (at the very least, they will know they're criminals).</p>"},{"location":"criticisms/cantillon/#what-can-be-done","title":"What can be done?","text":"<p>Technically, nothing about Bitcoin  will prevent this -- and because of the  decentralized nature it will be impossible  to adequately regulate. What can be done, and this may likely  prove itself out over time,  is a wiser civilization where  all individuals know that  they must save in Bitcoin   (proper self custody). There are no guarantees, and  it may take several generations  for civilization to advance itself  and to put \"fractional reserve\"  in the same category as \"snake oil\".</p> <p>Ultimately, Bitcoin presents  all of humanity --  our entire global civilization --  with a game that's ours to lose.</p>"},{"location":"criticisms/deflation/","title":"Deflationary Spiral","text":"<p>A deflationary spiral  is simply deflation (lowering of prices)  due to prior deflationary pressure. Many would-be critics will claim  that Bitcoin cannot succeed because  it is deflationary by nature and  would create a deflationary death spiral.</p> <p>These kind of criticisms tend to  be poorly thought out  (and unfounded   by empirical evidence),  mostly naive rationalizations  to justify the continued  non-sustainable debt cycle  of fiat-funded economics. However, in a debt-backed economy, like  our current USD petrodollar,  any kind of deflation is in-fact deadly  due to the cost of the debt  increasing.</p>"},{"location":"criticisms/deflation/#debt-backed-money","title":"Debt-backed Money","text":"<p>Debt-backed money like the USD petrodollar is essentially an IOU</p> <p>The modern USD is an \"IOU\"  from the Federal Reserve,  a promise that they'll  provide value in the future  -- yet that future never comes. They just print more money  (expand their balance sheet)  to manage  the ever-increasing debt.</p> <p></p> <p>Debt management becomes difficult  if not impossible  in a deflationary environment,  which is why  inflation is the necessary tool  of central banks managing  debt-backed money via fiat. If your money is based on debt,  and you can increase the supply  at will (lowering the value of your debt)  then all that is needed is to  maintain inflation   (literally by fiat)  without destroying  confidence in the currency.</p> <p>Strong money, like Bitcoin,  is effectively the antithesis  to debt-backed money --  punishing debt and rewarding  saving. And yes, deflationary spirals  are indeed a threat to debt-backed money --  but not to Bitcoin. Bitcoin is effectively  non-compatible  with debt-backed money.</p>"},{"location":"criticisms/deflation/#great-depression","title":"Great Depression","text":"<p>The most common example of a deflationary spiral   is the  Great Depression,  somehow confusing deflation  based on economic contraction  with deflation based on economic growth. But even so, was deflation the cause of the  Great Depression?</p> <p>The displaced farmers were not  sitting on stockpiles of gold,  refusing to spend because  the value of their savings  was increasing. The displaced farmers had no savings,  they were starving as  their livelihoods were replaced  by tractors and industrialization. Any gold they had would have been  spent on food (leading to price  inflation as their savings  became liquid).</p> <p>Blaming the Great Depression on deflation  should be considered  too stupid and detached  from reality to take seriously. However, we can still attempt  to steel-man this issue  and discuss the potential  disadvantages of a   strong money  (specifically, a deflationary currency).</p>"},{"location":"criticisms/deflation/#price-deflation","title":"Price Deflation","text":"<p>Deflation from economic depression  is not the same as deflation from  economic growth. This should be obvious, but our current  economic models somehow -- conveniently  for those benefiting from inflation --  miss this point entirely.</p> <p>Obviously, deflation due to economic  contraction is bad. Prices shrinking because no one  has money to spend -- this is bad.</p> <p>However, prices dropping because of  economic growth -- such as the price  of consumer electronics over the last  few decades -- this is good, very good. This is the good kind of deflation that never  gets mentioned by fiat-funded academics  (this is what fueled our economy  over the last few decades).</p> <p>Price deflation very clearly increases  economic activity, and during times  of economic growth this should be  encouraged. This is, in fact, exactly what a  strong money like Bitcoin encourages. Bitcoin is deflationary only  due to economic growth.</p> <p>When there is an economic contraction,  Bitcoin behaves the opposite -- prices  will inflate as there is simply less  goods being produced (constraining supply). Yet what happens when there is a surplus  of goods during an economic downturn?</p> <p>This is unfortunately what happened during the  Great Depression. The farmers didn't return to their small   family farms after the recovery. Their jobs and homesteads were replaced  by tractors. Industrialization is what displaced those  farmers, leading to a surplus of workers  and not enough jobs.</p> <p>The \"recovery\" happened when those displaced  farmers found new jobs in factories. Pretending that money printing would  have solved this phenomenon is foolish. Printing money during an economic depression  does not solve the cause of the depression,  it merely enriches the recipients of the  printed money and  leads to the problems of fiat money.</p> <p>However, what would have happened  had Bitcoin existed during the  Great Depression? Let's imagine that the farmers would still have been  displaced. Unemployment would have still been high. A surplus of goods would still have  occured, leading to reduced prices,  the bad kind of deflation.</p> <p>Overall, Bitcoin does not seem to help  in these situations, and it does  not pretend to. What Bitcoin does is provide protection  to your savings should overzealous  central planners try to \"fix\" an economic  contraction through debasement of your savings. Central planners believe they can help  (by spending money that's not theirs),  and yet  all they can do is make things worse and  rationalize their failings into absurd  narratives -- such as pretending  world wars and depopulation  are good for an economy.</p>"},{"location":"criticisms/deflation/#the-ugly-truth","title":"The Ugly Truth","text":"<p>What Bitcoin can do during an economic  contraction is send clear price signals. We may not like the signal, but printing money  to obscure the truth is a far worse option. Reality is not made by fiat, which is  exactly what fiat money aims to do.</p> <p>Bitcoin, during the Great Depression,  would have revealed that the price  of manual labor on a farm was no  longer sufficient to sustain a family,  nor was a small family farm sufficient to  sustain a family. We know this in hindsight, but  how useful would this have been  to those farmers? Having known earlier would have  saved many families from the degradation  of pretending otherwise,  of pretending that reality is controlled  by politicians.</p> <p>Whether we like it or not,  Bitcoin will reveal the true price  of money itself, as well as the true price of  food during a depression. Bitcoin offers truth, the rest --  as always --  is up to us.</p>"},{"location":"criticisms/environment/","title":"Environmental Impact","text":"<p>This is perhaps the most common criticism  of Bitcoin, alleging that Bitcoin mining  is damaging the environment. You'll find many \"scientific\"  reports showing that  Bitcoin's carbon footprint is larger than,  say, the   Netherlands. Or that Bitcoin creates more \"e-waste\" than the  Netherlands.</p> <p>Why is the Netherlands the benchmark for how much electricity a technology is morally allowed to consume?</p> <p>The problem with these arguments is that  they're entirely disingenuous and   false. Bitcoin mining operates on electricity --  electricity -- as in, zero emissions. Truth is, Bitcoin mining is consuming far  less electricity than electric vehicles,  phones, televisions, washing machines, and  pretty much all consumer electronics  (all of which also use more electricity than  the Netherlands).</p> <p>Mining equipment does not require   cobalt  nor any rare earth metals  found in electric vehicles,  smartphone batteries,  and other consumer electronics. As such, and unlike these other   technologies,  there is no slavery in the Bitcoin  supply chain. There is no strip mining and environmentally  destructive practices that leave large  patches of earth uninhabitable. And Bitcoin's \"e-waste\" is demonstrably benign  compared to smartphones, solar panels,  and especially electric vehicles. To pretend otherwise is either shamefully  naive or unscrupulously evil.</p> <p>It all seems a bit odd to focus on  the ethics of Bitcoin mining  while ignoring, say,  rampant child slavery  in Congo's cobalt mines  (which you personally support  when buying an iPhone or Android),  or the overthrow of  Bolivia's government  to maintain access to cheap lithium,  or any of the disastrous  strip mining operations  necessary to make modern batteries. There are real concerns with the  environmental impact of modern technology  and the morality of supply chains --  focusing on Bitcoin is  demonstrably wrongheaded  and hypocritical.</p> <p>The very devices critics use to complain about Bitcoin's energy usage are far more guilty of environmental damage and  morally repugnant supply chains than Bitcoin mining.</p> <p>Disingenuous arguments aside,  is there environmental impact  from Bitcoin and Bitcoin mining,  and if so, is the benefit of Bitcoin  worth this environmental impact?</p>"},{"location":"criticisms/environment/#monetizing-electricity","title":"Monetizing electricity","text":"<p>Bitcoin mining directly monetizes   compute power. If you have a cheap source of electricity,  and access to affordable  ASICs,  then you can make money mining Bitcoin. This simple set of incentives is unlike  any in human history -- the business  of Bitcoin mining is pure engineering,  literally revenue earned directly from  engineering. All other businesses require indirect  means of revenue generation, typically in  the form of customers or clients paying you  money. In this case, it's direct --  if you create and propagate blocks,  then you earn money. Bitcoin miners have no clients, no invoices,  no accounts receivable. They either mine blocks, or they perish.</p> <p>This unique set of incentives monetizes  any and all  electricity sources -- favoring  sources that were otherwise not monetizeable. For the first time in human history,  power need not be generated to support  existing human settlements, but instead,  humans are directly monetizing power  for profit. This is why we're seeing off-grid mining,  where the miners are finding and developing  sources of electricity that are otherwise  not monetizable to the existing grid.</p> <p>This includes  flared gas,  abandoned coal,  and  excess hydro, wind, and solar. As a result,  Bitcoin mining  can be done in environmentally positive  ways that increase  grid stability, as well as increasing the  reach of the grid itself. However, the economic game theory of Bitcoin  is zero sum and adversarial. Profitable electricity sources can and will  be rendered unprofitable over time,  potentially leading to abandoned facilities  and ghost towns.</p>"},{"location":"criticisms/environment/#boom-to-bust-and-back","title":"Boom to bust (and back)","text":"<p>Like the small towns that would appear  and prosper during a gold rush  only to be abandoned later,  Bitcoin mining will have this same  effect at power generation facilities. However, unlike gold mining, where gold  can be strip mined, leaving the town  in ruins,  Bitcoin mining cares only about  ongoing electricity generation. Given cheap enough electricity,  the miners will come.</p> <p>While this sounds more stable than gold mining,  in practice, the miners will leave as easily  as they come. Imagine a small town forming around a   hydro-electric powered   Bitcoin mining facility. Tens of thousands of machines, and  hundreds of jobs  arrive at this location. A local economy forms, and for awhile  things are good -- until  there's a cheaper source of electricity  and those same miners move. Perhaps some miners stay, but due to the  cost disadvantage, they will likely  go bankrupt  in a few years.</p> <p>The only way for this town to  survive the zero sum  Bitcoin mining game  is to offer  cheap enough electricity. Perhaps the small town expands the hydro-electric  facility and even sells electricity  at a loss -- all in the hopes of  revitalizing the local economy. And maybe this works for a time,  but eventually, they'll likely  be priced out,  because mining is still zero sum.</p> <p>In this process of boom and bust,  what are the environmental impacts? It's easy to focus on the success stories,  and there will be many,  but what about the failures? Will mining not incentive reopening coal plants  only to abandon them in far more reckless  means than would have happened otherwise?</p> <p>For every environmental success of   Bitcoin miners cleaning up  toxic coal from a previously abandoned  coal plant or consuming gas that would have been flared,  are we not simply creating that  same problem all over again due to the adversarial  nature of Bitcoin mining economics? The incentives are entirely on finding  cheap enough power to mine and propagate blocks. There are no incentives to do so cleanly --  unless of course the will and want  is there to do so.</p>"},{"location":"criticisms/environment/#will-and-want","title":"Will and want","text":"<p>For a civilization that is currently  in the midst of continuous war  over oil,  and a global slave  labor campaign to strip mine  the earth for batteries  and solar panels -- completely  lacking the self awareness to  recognize the abject evil  and environmental damage this is causing --  I am not left with much hope  that our modern civilization  is in any position to fix  any of the environmental issues  that we proclaim to care about;  let alone the comparatively benign  effects Bitcoin mining.</p> <p>I have no doubt that many people  will pretend to be virtuous  while turning a blind eye  to the despicable evils that  power their electric vehicles  and modern living standards. Attempting to make Bitcoin a scapegoat  is unfortunately inevitable,  pretending Bitcoin is the problem  rather than their own support  of child slavery and human rights abuses  in cobolt mines, or the strip  mining that leaves the land uninhabitable. Perhaps, in a wiser and more  contemplative future-civilization  we will take these issues seriously  and work to solve them.</p>"},{"location":"criticisms/inequality/","title":"Inequality","text":"<p>While there is a lot of bad faith criticisms  about inequality and Bitcoin,  this is an area that deserves  nuanced exploration. Inequality presents a moral claim,  and it might be helpful  to suss out the moral claims  from the technical claims  and understand them as such. It is not useful to employ moral arguments  when pursuing technical truth  -- if Bitcoin is true,  it's not because it's good or bad,  it's because it's true.</p> <p>In other words, if Bitcoin  turned out to be morally reprehensible,  resulting in a catastrophic end for civilization,  would that make it false? No, it would still (obviously) be true. Importantly, knowledge of such immorality   would do nothing to stop it, much like  knowledge of the problems of fiat don't fix the problems of fiat.</p> <p>However, knowledge of the morality  of Bitcoin can help guide us as  individuals seeking truth in order to   live moral lives, and aim towards  a good future.</p>"},{"location":"criticisms/inequality/#technical-claims","title":"Technical Claims","text":"<p>Bitcoin may lead to more inequality</p> <p>Compared to what? Definitely not fiat. The fixed supply of Bitcoin prevents  Cantillon  insiders from enriching themselves  through seigniorage. Fiat is unconstrained and the supply is  controlled by the dictates of those in power.</p> <p>Since 1971,  since the start of global fiat,  inequality has only increased. We are now at a level of inequality  never before seen in the world,  greater inequality than  even the famed \"guilded age\". Whatever may be true of Bitcoin's  inequality, this claim that  Bitcoin could lead to more inequality  than fiat is demonstrably false.</p> <p>Bitcoin won't fix existing inequality</p> <p>How could it not? You can no longer arbitrarily inflate  the money supply and concentrate wealth. The only way to acquire   Bitcoin is through work,  producing  something others find valuable  -or-  confiscating wealth from others  (through taxation or by other means);  either way, this requires work.</p> <p>Under Bitcoin,   wealth isn't  subsidized through government grants  or easy money policies. However, we should consider that our  entire culture and modern society  has been corrupted by fiat and seigniorage. What are the ramifications  of sound money on a population that  grew accustom to fiat?</p> <p>It's clear that Bitcoin won't (and can't)  continue growing the existing inequality;  but it's not clear that it reduces  the level of  inequality. It's possible that a Bitcoin standard  will simply lead to  a similar level of inequality  but with wealth concentrated in different  places than politicians and central bankers. Perhaps all that it does is replace one  group of oligarchs with another.</p> <p>The claim that Bitcoin won't fix  existing fiat inequality  is most likely false,  but not definitively so --  only time will tell exactly  what inequality  will look like   under a Bitcoin standard.</p>"},{"location":"criticisms/inequality/#moral-claims","title":"Moral Claims","text":"<p>The technical claims about Bitcoin's inequality  range from definitely false to most likely false. It's difficult to find a reasonable scenario  where inequality under a Bitcoin standard  continues as it is under fiat. However, we can steel-man this argument and  explore the moral issues inequality would  pose under a Bitcoin standard and what,  if anything,  could be done about it.</p> <p>Inequality is bad</p> <p>Is it even possible not to have inequality? Perfect equality, what would that even mean? We live in a universe of unequal distributions, specifically  Pareto distributions. There is a natural distribution one can expect,  and to fight against this seems as wise as  fighting against mathematics.</p> <p>However, it is also clear that there  exists within our fiat system  extreme and (dare we say)  unnatural levels of inequality. In other words,  wealth inequality beyond a Pareto distribution. In practice, when inequality breaks  the social order, stratifying a single  society into multiple societies, this  is clearly beyond a \"natural distribution\". Further, the destructive influence of this  kind of cultural disintegration can most  certainly be considered morally wrong  (assuming the culture in question is  better than its disintegrated parts).</p> <p>Inequality beyond a natural distribution is bad</p> <p>This claim is difficult to argue against. Obviously if income inequality grew beyond a  natural distribution such that our civilization  disintegrates -- this would be very bad. In fact, this is exactly what we're witnessing  today in this ~50 year global fiat experiment. The wealth gap is accelerating such that the  top 0.01% are making the rest of the top 1%  feel like the bottom 99%. But worse, there are insufficient cultural  touchstones to unite society.</p> <p>In the interest of steelmanning this argument,  let's imagine that a Bitcoin standard  does nothing to fix this problem;  that the same extreme inequality we see  with fiat persists with Bitcoin. In this situation, Bitcoin will fail. Let's be clear, this would disprove  Bitcoin, rendering it false. A stratified civilization cannot  and will not sustain the level of  infrastructure and cooperation needed  for Bitcoin. Remember, Bitcoin requires electricity,  computers, and a global network.</p> <p>\"And if a house is divided against itself, that house will not be able to stand.\"</p> <p>Fortunately, the technical claim here is  most likely false. In fact, if inequality under a Bitcoin standard   returns to a more natural distribution,  then Bitcoin will have \"fixed\" this issue. Otherwise, and importantly for the survival  of our civilization, this issue must be  resolved;  if not by Bitcoin than something else.</p> <p>This would mean Bitcoin is  \"necessary but not sufficient\"  for the survival and flourishing  of human civilization.</p> <p>For many other reasons, this is perhaps  the most healthy view to take. Bitcoin does and can solve many important  problems, but it cannot succeed  without us choosing the right  path, the moral path --  that which is best for you and your family,  now and in the future, and simultaneously  what is best for those around you in your  community and in the broader culture,  now and in the future.</p>"},{"location":"criticisms/mining-zero-sum/","title":"Mining is Negative Sum","text":"<p>The Bitcoin mines. The dark underworld; The chaotic fringe;  Behold, the wasteland of rekt dreams and abandoned code. Fighting, hashing, surviving. The blood of martyrs cries out. Those who overcame death stand triumphant, for it cannot be otherwise. </p> <p>The game theory of Bitcoin is well regarded   as positive sum and incentivizing   cooperative behavior. It is a marvel of technology and economics,  resulting in the most sound money the  world has ever known. Yet this entire system sits atop an  adversarial and zero sum competition   known as mining.</p> <p>While mining can be better understood as  decentralized payment processing,   the market dynamics and incentives are  a cutthroat zero sum game. Worse still, an iterative version of this game  is negative sum.</p>"},{"location":"criticisms/mining-zero-sum/#the-bigger-they-are","title":"The bigger they are ...","text":"<p>Roughly every ten minutes a new block is found  (mined) which increases the total supply. Every 2016 blocks the network difficulty  adjusts to ensure that the issuance  is on schedule (one new block every ten minutes). And every four years the issuance is halved  (the famed \"halvings\"). This may seem simple in theory,  but in practice the difficulty adjustment  means that miners are in direct competition  with each other, and worse, the halvings   make this a negative sum game.</p> <p>For example, imagine a big mining farm  which mines ~10 blocks per day  (out of 144 daily average). They are profitable so they  invest in their business,  adding new fleets of machines  in order to double their hashrate. Once the new machines are online, this  big mining farm   doubles their hashrate and  mines ~20 blocks per day -- however, that  means that the daily average went  from 144 to 154. This results in a difficulty adjustment  that brings the daily average back to 144. Despite doubling their hashrate,  the higher difficulty means  they're only mining ~18 blocks per day,  and critically, all other  miners suffered equally.</p> <p>After the halving this miner finds themselves  losing money, ~18 blocks per day is not enough  to stay in business. They shut the machines off. The daily average drops from 144 blocks  to 126. The next difficulty adjustment will bring  the average back to 144   (lowering the network difficulty). Immediately, other miners see an increase   (as it's now less difficult to mine blocks). A miner that was receiving ~20 blocks per day would  now be mining ~23 blocks.</p> <p>This change might cause the  out-of-business mining farm to  get back into the game. They turn all their machines back on, and  sure enough, ~23 blocks per day --  until the next difficulty adjustment --  and then their daily average   drops back to ~18, hurting  everyone else in the process.</p> <p>The only chance for this beleaguered mining  farm to have any hope of survival is  if other miners drop out first. They take out loans, and relocate to find  cheaper energy. And in all their desperate moves, are they  prepared for the next halving? What about the next generation of mining  machines? Will they take out even more loans?</p>"},{"location":"criticisms/mining-zero-sum/#the-easier-they-fall","title":"The easier they fall","text":"<p>Unlike gold mining, Bitcoin miners are in  constant and direct competition with each  other, such that the fortune of one will  come at the expense of all others. And hurting one miner will directly benefit  all other miners. Miners that succeed will find  their profits dwindle over time even as overall mining revenue grows. Reserves will be tested and depleted as more  and more competition enters the space. And there will always be more. Such is the nature of any zero sum adversarial game.</p> <p>On one hand, this benefits decentralization,  as any attempt to monopolize mining will result  in inevitable attack and disintegration,  and the cost  of bureaucratic overhead will make the larger  miners suffer most. Mining, even if the value of Bitcoin was stable,  is like a continuous arbitrage opportunity  (finding cheap enough electricity to power advanced enough machines),  with profits that inevitably diminish through competition. This forces miners into survival mode, and as the weak  miners fail this will tip the surviving miners  into a moment of increased profitability,  which will attract  more entrepreneurs  and the cycle repeats, forever. Unlike saving in Bitcoin, which encourages   low time preference long-term thinking,   mining is a high time-preference, high risk game.</p> <p>Is such a cutthroat adversarial  zero sum game sustainable?  For an individual miner, the  answer is no. However, as long as people are able and  willing to try their hand at this competitive   game, then it will continue. Ugly and embattled, will it be sufficient? Time will tell.</p>"},{"location":"criticisms/mining-zero-sum/#the-tower-of-good-intentions","title":"The tower of good intentions","text":"<p>Most worrisome of all, is not the bad actors,  but the good-intentioned and honest miners. Honest and good-intentioned miners  would not break consensus rules  but for their own survival might ally  into a monopoly and  comply with regulatory agencies,  ignoring blocks from other miners  (the \"bad\" miners),   controlling the  mempool and transaction fees. With this level of control,  a good intentioned  monopoly would be the downfall of Bitcoin's  decentralization.</p> <p>To not get your transaction processed by the  monopoly mining pool is to risk it being  ignored and overwritten in a chain reorg. Despite their good-intentions, the monopoly  miner would lead to the same regulatory  capture as we see with fiat. Better if they had evil intent and broke  consensus by changing the supply, for then  it would result in a hard fork,  and users could choose which chain to store  their wealth.</p> <p>For Bitcoin to be true, any attempt at  monopolizing mining must fail. The adversarial zero sum game must be sustainable  and also sufficient to prevent   the centralization of mining,  even amongst those foolish enough  to bring their good intentions into  the adversarial world of mining. Ultimately, mining must remain a cutthroat  zero sum game.</p> <p>Therefore is the name of it called Babel;</p> <p>because the Lord did there confound the language of all the earth: and from thence did the Lord scatter them abroad upon the face of all the earth.</p> <ul> <li>Genesis 11:9</li> </ul>"},{"location":"criticisms/quantum-computing/","title":"Quantum Computing","text":"<p>This is one of the more interesting  and theoretical criticisms of  Bitcoin -- it usually goes like  this:</p> <p>advances in quantum computing will put millions of Bitcoin at risk, causing the price to drop to zero.</p> <p>Such statements make  for fun headlines  but are not quite grounded  in reality. And we've been seeing such headlines   for over a decade without any real  progress with quantum attacks on  Bitcoin's  elliptical curve cryptography  (always seems to be a few years out). The truth is there's very little  threat (for now),  and in fact   quantum computing  will most likely prove  beneficial to Bitcoin;  with Bitcoin providing incentives  for quantum computing breakthroughs. And this is assuming actual breakthroughs  in quantum computing, and not the  sleight-of-hand factorizations, reproducible on an abacus.</p> <p>Importantly,  people are concerned  with their own Bitcoin,  not hypothetical threats  to someone else's  Bitcoin  (which may  or may not be  vulnerable to a  \"quantum attack\"). In other words,  I want to know if my  Bitcoin is safe. The simple truth is,  Bitcoin is already   quantum resistant  with a small handful of exceptions.</p>"},{"location":"criticisms/quantum-computing/#quantum-resistant","title":"Quantum Resistant","text":"<p>If you don't reuse addresses with  known public keys, then your  Bitcoin is  quantum resistant. Not disclosing public keys  is the standard approach anyway,  recommended for privacy reasons. With most wallet software, and  especially with cold storage solutions,  you'd have to go out of your way   to make your Bitcoin vulnerable to  a theoretic quantum attack  (you'd need to disclose your public keys   that correspond to each UTXO).</p> <p>At present,  there are indeed vulnerable  coins to a theoretical quantum attack,  especially those that have not  moved since 2010. This is because early transactions  used P2PK  which reveals the corresponding  public key directly in the transaction. A quantum computer that breaks  Bitcoin's   elliptic curve  would (theoretically)  be able to generate  a private key from a corresponding  public key. However, the vast majority  of Bitcoin is stored using   addresses generated  from public keys --  hashing with  SHA-256  and then  RIPEMD-160. This double hash provides  quantum resistance.</p> <p>How many coins are (theoretically) vulnerable? That is, how many coins used P2PK? Most famously,  the million or so  coins of  Satoshi Nakamoto  are vulnerable to a quantum attack. If anyone had the means  to access these coins,  they would be wealthy  beyond measure.</p> Quantum Computing Today <p>We've been discussing theoretical quantum computing attacks on Bitcoin's elliptical curve, which would require disclosing the public key associated with a given UTXO to the quantum computer.</p> <p>However, even disclosing a private key would not help today's \"quantum computers\" because they lack the computing power to perform what a pocket calculator or abacus or even a trained dog is capable of performing. Until there is actual breakthroughs in quantum computing and it can perform as well as Raspberry Pi, all such attacks remain purely theoretical.</p>"},{"location":"criticisms/quantum-computing/#satoshis-bounty","title":"Satoshi's Bounty","text":"<p>A better, and more constructive,  way to view Bitcoin's relationship  with quantum computing is that  Bitcoin is effectively  offering an enormous  reward to whoever can  break Bitcoin's signing  algorithm. The prize? Millions of untouched   and most likely abandoned Bitcoin. Quantum computing \"experts\"  would not need to be  begging the  NSF  for grant money  in their fiat-funded universities,  nor promoting scammy  shitcoins. They  could be funding themselves;  they could be  the wealthiest people   on earth;  unless they're full of shit.</p> <p>This bounty is up for grabs. All you need to do is  develop a quantum computer  that breaks Bitcoin's  elliptical curve algorithm. If the price started  to decline due to the sudden  supply shock of millions  of new Bitcoin coming  into circulation --  don't worry --  there are millions  of Bitcoiners  that will anxiously  and happily  buy up those cheap  sats. Bitcoin will be fine,  and it will have successfully  funded advances  in cryptography and  quantum computing.</p> <p>Such advances in quantum computing  could be more usefully applied to  Bitcoin mining.</p>"},{"location":"criticisms/quantum-computing/#quantum-mining","title":"Quantum Mining","text":"<p>Bitcoin mining is entirely based on  SHA-256, which is itself quantum resistant. The best known approach would be  to use  Grover's Algorithm,  which (if given a sufficiently powerful quantum computer)  could reduce the search space from 2<sup>256</sup>  to 2<sup>128</sup>. This doesn't exactly break SHA-256,  but it means a brute force search time  could be reduced.</p> <p>It is possible that a powerful enough  quantum computer could mine Bitcoin  far more efficiently than modern ASICs. Like the progression of CPU mining  to GPU and then to ASICs,  quantum mining is a logical next step. Bitcoin's difficulty adjustment will  keep the supply schedule on time,  producing new blocks every ten minutes  on average.</p> <p>Between Satoshi's bounty and Bitcoin mining,  we are likely to see amazing advances  in quantum computing that have far more  interesting applications than just  reducing the search space for  a brute force SHA-256 exploit. If quantum computing ever proves itself,  it will be in large part thanks to Bitcoin  and the economic incentives that are  far superior to the farsical theatrics   of fiat-funded \"science\".</p>"},{"location":"criticisms/scalability/","title":"Scalability","text":"<p>This is one of my favorite critiques,</p> <p>Bitcoin only supports up to 7-transactions per-second. Do the math, that's not enough.</p> <p>In truth,   Bitcoin doesn't process any transactions  per-second, it processes blocks  (of transactions) every 10-minutes, on average. Blocks have a few thousand transactions,  hence \"up to 7 per-second\", I guess. And while this is true for base layer  transactions (final international settlement),  2nd-layer solutions like the  lightning network  can scale upwards to infinity.</p> <p>But a Bitcoin critic is not interested in  2nd-layer payment rails or any actual  engineering solutions to their criticism. The pattern of this criticism  is quite dumb and once you see it   it'll be hard to unsee. Take whatever perceived scaling limit  that is less than the population of humans,  and declare it as a fatal flaw in Bitcoin.</p> <p>ah hah, this is less than 8-billion people, Bitcoin can't be money.</p> <p>With this same logic,  fiat couldn't scale,  credit cards couldn't scale,  not even coins could scale -- there are only  2-billion US quarters, \"ah hah, this is less than 8-billion,  quarters can't be money\".</p> <p>Rarely will you find a nuanced  scaling criticism -- there are however,  some interesting critiques and thought  exercises to be found here.</p> <p>For example, how will lightning  channels scale globally?</p>"},{"location":"criticisms/scalability/#scalability-of-lightning-channels","title":"Scalability of Lightning Channels","text":"<p>Opening and closing a lightning  channel requires  base layer transactions. Can all humans on earth open   a lightning channel? Can we have 8-billion lightning channels?</p> <p>Truth is, under a Bitcoin standard not  every human will need to make base layer  transactions. And they don't need to open lightning channels. The world does not need a lightning channel  for every human. Only entities that we should call sovereigns  will need to do base layer transactions  and manage their own lightning channels. A lightning channel is effectively a  liquidity provider for payments.</p> <p>We see the same pattern with fiat, except with  fiat each sovereign has the power of seigniorage;  they can print as much money (liquidity) as they  desire. Sovereign fiat currencies compete with each other,  all trying their best to be the strongest  fiat -- print too much and you hyperinflate,  but print too little and you'll have no  seigniorage powers. Under a Bitcoin standard, no one has the power  of seigniorage. The fixed supply and  the end of  seigniorage is the entire value proposition  of Bitcoin.</p> <p>Under a Bitcoin standard,  sovereigns will compete,  and they will do so  fairly under the rules of a fixed global  money supply. If a sovereign lacks liquidity in their  lightning channels, that is, they can't pay you,  you simply go to a sovereign that can. This is more or less how the gold standard  functioned before it was corrupted by  fractional reserve paper money.</p>"},{"location":"criticisms/scalability/#sovereigns-and-scale","title":"Sovereigns and Scale","text":"<p>Importantly, Bitcoin supports  vastly more sovereigns than does fiat. In today's global fiat economy, there are  approximately ~200 different central  banks, each representing their own  financial sovereignty. Base layer transactions under fiat  happen infrequently between these  sovereigns, typically through  treasury bonds, where they buy and  sell each others debt. In practice there is only ~20 or so  sovereign currencies with real economic power,  and only 7-8 that actually matter. Most other fiat currencies  are typically backed by  those top 7-8 fiat currencies  (USD, EUR, JPY, etc).</p> <p>Under a Bitcoin standard, money  is decoupled from state,  and the power of seigniorage is no more. Anyone with sufficient Bitcoin to do base  layer transactions   (who could open and  close lightning channels) would be a  sovereign. This would include nation states,  corporations, family dynasties,  and even individuals  (see the   Sovereign Individual). If this seems bizarre, consider  that this is far more aligned  with the history of money and civilization  than our current ~50 year experiment in  global fiat.</p> <p>But how many sovereigns could exist  under a Bitcoin standard? Answering this is pure speculation,  but if we're only concerned with the  mathematics of global scale, let's imagine  a distant future where the very  idea of fiat money is a footnote  in history, an oddity of less advanced  people who pretended governments  could issue money. Let us imagine a Bitcoin standard. Let us imagine, the year 2140.</p>"},{"location":"criticisms/scalability/#in-the-year-2140","title":"In the year 2140","text":"<p>Let us continue from our earlier essay:  In the Year 2140. If Bitcoin has survived this long,  it will have proven itself true. The world will be a vastly different place,  with wonders far beyond our present  imagination. However, there are some things we can know  with relative certainty. For example, the last Satoshi  will have been mined. There will be zero inflation. What we today call \"mining\" will instead  be a global settlement layer, where sovereigns  compete in a zero sum game for transaction  fees.</p> <p>And with some degree of confidence, we can  predict that fiat money  will be a relic of the past. Money will be decoupled from nation states,  which, if they're still around, would be  far weaker and less influential than today.</p> <p>And, the easiest prediction of all:  Bitcoin will simply be known as \"money\".</p> <p>Let us now imagine a global population of  12-billion humans,  living in relative peace, though  always with the typical human dramas  that define humanity.</p> <p>USD as Unit of Account</p> <p>I've included USD in the below examples; which is a bit funny since USD is obviously not a great measure, however, these are wild speculations meant as a thought exercise in the mathematics of scale. Forgive me.</p> <p>Let's imagine that the market cap of money  stands at $300-trillion, the equivalent  of a $14.285-million BTCUSD. This is arguably much smaller than  one would expect in the year 2140,  but we'll start here  to set some baseline numbers for our  scaling calculation. We'll have the following values in sats,</p> <pre><code>1 sat = 0.1428 USD\n\n1 USD = 7 sats\n</code></pre> <p>Meanwhile, the transaction fees are averaging  1,000 sats,  which corresponds to $142 per-transaction. Each block has at least 3,000 transactions,  resulting in a block reward of $428-thousand.</p> <p>1,000 sats ($142) is the fee to go   from 2nd-layer savings to sovereign individual. In other words, this is the fee  to become a sovereign. As a sovereign individual, one is free to hire  their own team, investing in their own  infrastructure. Sovereigns either profit, sustain, or go bankrupt  (assets absorbed into other sovereigns). Competition amongst sovereign individuals  is zero sum on the base layer, but positive  sum in local environments as economies grow  and new sovereign individuals are created.</p> <p>Now let's assume the economy is much larger  by the year 2140. Let's assume a $100-million BTCUSD.  In other words,</p> <pre><code>1 sat = 1 USD\n</code></pre> <p>This means 1,000 sats  per-transaction fee is now $1,000. The cost of   becoming a sovereign individual is now  quite expensive, and will  grow continually more expensive as  the economy grows. This benefits families and multigenerational  wealth strategies while not precluding  individuals from joining the ranks  of financial sovereignty. Anyone could save and become a sovereign,  adding liquidity to a lightning channel  in order to run their own business.</p> <p>Each block would be worth about $3-million,  with network security at an all time high,  despite zero block subsidies  (it's no longer mining, just   international settlement).</p> <p>But is all this really scalable?</p> <p>There would only be approximately 160-million  transactions per-year.</p> <p>This equates to tens-of-millions of  financial sovereigns, out of billions of  people. Most individuals will not be sovereign. Many families and dynasties  will be sovereign. All individuals will be associated with  one or more sovereigns,  either by family or by work.</p> <p>Let's imagine there's only 50-million  sovereigns at any  given point in time. This would easily be scalable with base layer  transactions (using today's technology),  and there'd be  an average population of only 240-persons  per-sovereign  (and with a very high per-capita income). However,  under a Pareto distribution,   we could expect  80% of the population to be working  for the top 20%  of sovereigns, that is,  9.6-billion people in 10-million sovereigns,  averaging ~960 people per-sovereign,  with a long tail of 40-million sovereigns;  mostly family, individual,  and small business sovereigns. The largest sovereigns might have thousands  of people,  maybe even some with tens-of-thousands. The smallest, are just individuals.</p> <p>And due to the nature of the game  (the economic game), it's unlikely  a given sovereign would grow too large  (before disintegrating into smaller sovereigns). People would be free to work with different  sovereigns; you're working  for Bitcoin after all. Sovereigns need workers and people,  they're always hiring (otherwise why waste the  money on even being a sovereign).</p> <p>In any reasonable analysis,  this is far more scalable  (and far more fair)  than the ~200 or  so sovereign nation states  acting as totalitarian  regimes and slave labor coordinators for  billions of people. Bitcoin is an alternative to fiat debt slavery. And a natural distribution of sovereigns  avoids the entrenched oligarchies  we see in modern fiat.</p> <p>A Bitcoin standard, even with  the technology as is,  is already scalable enough to  replace fiat. This would also put an   end to our globalist oligarchy,   much like modernity was the  end of nepotistic monarchies.</p> <p>A future Bitcoin standard could   easily scale to  tens-of-millions of sovereign individuals  and dynasties,  where today's nation states   would either be relics  of a strange past, or economically  small players amidst   tens-of-millions of other sovereigns,   competing for wealth and resources like  everyone else.</p>"},{"location":"criticisms/surveillance/","title":"Surveillance","text":"<p>This is not a common criticism. it goes unnoticed in mainstream media,  and perhaps unsurprisingly it remains the  biggest risk to the truth of Bitcoin. For Bitcoin to be true, it must be sufficiently  unstoppable and decentralized, allowing anyone  -- even those we dislike, even those we loathe --  to use Bitcoin without fear of  financial censorship. Unfortunately, because Bitcoin is fully  auditable on the base layer  -- which is necessary to verify the fixed supply --  it is not perfectly private nor free  from potential censorship.</p> <p>Any digital currency will have this problem. By virtue of being digital it will be  as easy to surveil as the network itself. Unlike physical tokens such as coins,  a digital money will be traceable.</p> <p>While there are coin-mixing services which can  obfuscate the tracing of Bitcoin,  ultimately it's possible to know  where specific Bitcoin was once spent and  the path it took to get into your possession. It's all pseudonymous but the trace is still there. This could lead to the idea of tainted Bitcoin  (that is, your Bitcoin may or may not have once  touched illicit activity). Moreover, it would even be possible to whitelist  transactions and only allow approved  Bitcoin into a given market.</p> <p>For example, let's say the Bitcoin in your  possession was once used to finance terrorism  (according to some unaccountable bureaucrat),  and yet you had earned it honestly by  selling goods and services. Imagine those funds are seized,  because law enforcement held you liable for  being in possession of this Bitcoin. After such an event, or even knowing  such authoritarian overreach is possible,  you would likely comply with whitelists  in all future transactions, meaning you as  a business are faced with the impossible task  of vetting all your customers and scrutinizing  their payments, all to ensure the  risk of seizure from the authorities is  minimized.</p> <p>Whether we like it or not, we live in such  a system right now. But what -- if anything -- can be done? And at what level of censorship would  Bitcoin be rendered false? In both cases, the answer lies in the impossible  task of whitelisting money.</p>"},{"location":"criticisms/surveillance/#the-impossibility-of-whitelisting-money","title":"The Impossibility of Whitelisting Money","text":"<p>Money exists in order to solve  problems; such as  storing value  over time. More simply, money solves for uncertainty. We all attempt to store value over time  to reduce the  uncertainties of the future. Even in the simplest of circumstances,  prices may increase on items important to us;  and we store wealth to survive those kind  of supply shocks.</p> <p>Before modern economies we learned to  store food, drying meat and raising   livestock in order to manage uncertainty  (avoiding famine). As societies grew and evolved, the need  for a medium of exchange grew. And as history proves,  good money enabled societies to scale,  so not everyone needs to be  drying meats and raising   livestock in order to avoid a famine. Good money allowed specialization, artisans  and engineers and even the dreaded  central planners.</p> <p>But money is good only  to the degree there is trust in the money itself;  trust that the money will hold its value over  time, so rather than raise livestock one  can choose to hold money, knowing that   someone else will get rich raising livestock. The holder of the money creates a demand,  and markets are formed, more complex  societies emerge with more and more efficiency. The ascent of man is exactly this story,  humans flourishing with ever-increasing  efficiency and scale.</p> <p>But what if the money is not trusted? What if a central authority can decide  your money is no good? In this situation you're back to raising  your own livestock. This isn't a minor setback,  this puts us back to the earliest  stage of civilization, where  only small agrarian communities  could exist. There's a reason centrally planned  markets lead to starvation.</p> <p>Whether Bitcoin can survive or not rests  on this very basic question:  can markets function freely  in the information age  (where mass surveillance is the norm)? Or will the temptation for  surveillance and control  be too great? The outcome will decide the  fate of our civilization,  Bitcoin standard or otherwise.</p> <p>Ultimately, the very nature of money  precludes whitelisting and gatekeeping. Economic activities must remain  sufficiently free. And while there will always  be a need for legal trusts, that is,  legal arrangements where an entity  empowers their financial decisions  to someone else, the trustee,  society cannot function  if everyone is a trustor to  a centrally planned trustee. These centrally planned societies  fail  quite  spectacularly.</p>"},{"location":"criticisms/surveillance/#can-bitcoin-fix-this","title":"Can Bitcoin fix this?","text":"<p>No -- and let's not mince words --  this is a problem that  Bitcoin does not fix. Bitcoin can be part of the   solution -- but we must do  the work. Bitcoin is but a tool to our  advantage in fixing this problem.</p> <p>Think of this as a   great filter  and that Bitcoin is but  one of many necessary  conditions for humanity  to advance. Money is either free, or not. Markets can be free, or not. And if not, then we starve  our civilization back into  agrarian self-sufficiency  (this is the historic pattern afterall). Perhaps another gold standard  would emerge and humanity  would get yet another chance.</p> <p>But whether or not we make it  as a civilization depends  entirely on this very   basic existential problem. Do we assume responsibility  and allow  for a suffienctly free market  to produce and maintain  a good digital money? In other words, a money that  can survive and flourish in the  information age in spite of mass  surveillance?</p> <p>Bitcoin privacy tools exist,  using Bitcoin in ways to counter  surveillance exists, but  will they be widely adopted  enough for Bitcoin to succeed  in the face of authoritarian  overreach?</p> <p>Only time will tell, and our decisions  -- yours and mine -- will determine the outcome.</p>"},{"location":"criticisms/toxic-maxis/","title":"Toxic Maximalists","text":""},{"location":"criticisms/toxic-maxis/#toxic-maximalists","title":"\"Toxic\" Maximalists","text":"<p>This is a rather silly and disingenuous  criticism, although quite common. It usually goes like this,</p> <p>Bitcoin maxis are a toxic cult and this hurts adoption.</p> <p>This is clearly disingenuous because  no one  would use this line of reasoning  about other assets. Would you refuse to buy a house because a  real-estate maximalist was a jerk on the Internet? And more importantly, why would anyone care  about the opinions of Bitcoin maximalists,  as opinions clearly have  nothing to do with  whether or not Bitcoin is true. Either it will hold value, or it won't.</p> <p>If Bitcoin is true, it'll be adopted globally;  not  just by some worldviews and ideologies,  but by all worldviews and ideologies. This is because it's money --  something all humans  within this thing we call civilization  must contend with.</p> <p>As we explore this issue,  we can also ask the lesser relevant question,  are Bitcoin maximalists actually toxic?</p>"},{"location":"criticisms/toxic-maxis/#what-is-bitcoin-maximalism","title":"What is Bitcoin maximalism?","text":"<p>Being called a 'bitcoin maxi' is about as offensive to me as being called a 'heliocentric maxi' ~ Ross Stevens</p> <p>Let's first understand the terms. A Bitcoin maximalist (maxi)  is anyone who  saves in Bitcoin, and Bitcoin only. For those who view Bitcoin as an investment,  a maximalist is one who stores wealth only in Bitcoin. They believe Bitcoin is  the only viable monetary asset.</p> <p>For those viewing Bitcoin as a gamble,  a maximalist is all in. For the doomers, Bitcoin is a lifeline,  the only remaining hope for our civilization  they see as failing. For many, Bitcoin is an alternative to   stockpiling guns and survival gear  (although not mutually exclusive) --  in other words, fiat is failing,  the plans to save it are horrible, and  Bitcoin is our best hope for the continuation of civilization.</p>"},{"location":"criticisms/toxic-maxis/#what-is-toxic-maximalism","title":"What is toxic maximalism?","text":"<p>This label of \"toxic\" originally came from  shitcoin influencers  (altcoins to be euphemistic). Whether it was  FTX,  BlockFi,  or the  Bitcoin hard forks,  there has been an ongoing chorus  of criticism from Bitcoin maximalists  towards any perceived scam. And like any community made up of humans,  there will always be those who are polite,  and others who are not. Arguably, it was the less-than-polite  voices that earned the \"toxic\" label.</p> <p>The problem with this framing, of course,  is that the \"toxic\" maximalists have been  proven right,   again,  and again,  and again. Anyone listening to the \"toxic\" maximalists  would have come out clean from the labyrinth  of scammy muck that is our modern  economy.</p>"},{"location":"criticisms/toxic-maxis/#is-that-even-toxic","title":"Is that even toxic?","text":"<p>While there are of course bad actors  in any group, especially online,  outspoken criticism of an immoral  financial system is clearly not toxic. Calling out a scam is not toxic,  except maybe to the scammer. In almost every case where someone is  complaining of \"toxic maxis\", you  will likely find someone guilty  of promoting scams,  looking to benefit from  immoral financial schemes  (seigniorage, fractional reserve, and so on).</p> <p>As a general rule, avoid anyone who  is complaining about \"toxic maxis\" --  best case they're thin-skinned and immature;  worst case it's a scammer who's upset  they were exposed.</p>"},{"location":"criticisms/toxic-maxis/#maximalism-is-not-priced-in","title":"Maximalism is not priced in","text":"<p>Bitcoin maxis may seem like religious   zealots, but they have proven,  time and again, to be   the buyers of last resort. They are why Bitcoin will hold its value over  time, during bear markets and worse. Toxic or otherwise, Bitcoin maximalism is not  yet priced in.</p> <p>Bitcoin maxis are why the price will  never go to zero. There will always be maximalists   saving their life energy in Bitcoin. It is a reaction to both fiat and the failings  of gold, and unless there emerges a more  sound money, Bitcoin maximalists will  remain.</p> <p>In the worst case scenarios,  where all the investors disperse,  where the hype is dead,  there will still be Bitcoin maximalists  working and saving in Bitcoin,  buying any Bitcoin you have to sell. Even if it's banned, maximalists will still  be there -- in black and grey markets --  staying humble, stacking sats. Because of this, Bitcoin has a floor that   is far above zero,  and the only ceiling is as a  global unit of account,  a measure of the entire global economy. There are no fiat-priced highs where maximalists  will stop buying,  and no lows where they'll give up.</p>"},{"location":"criticisms/toxic-maxis/#maximalism-is-intrinsic-value","title":"Maximalism is intrinsic value","text":"<p>Eventually, as Bitcoin gains global adoption,  maximalists will just seem like everyday   \"savers\" -- it is only now during the  early adoption phase where Bitcoin is  considered a speculative investment that  \"maximalist\" is even a term. And while maximalists can seem like   idealistic zealots   (esecially to those uninformed  cynics who do not yet understand  the fundamentals),  they are what gives Bitcoin its value  during these critical moments of early adoption.</p> <p>The durability of any monetary asset depends  on a sustainable demand. This is why people are intuitively concerned  with \"intrinsic value\" on any speculative  investment. The very existence of Bitcoin maximalists  means that Bitcoin has defacto  intrinsic value and is already money  (the hardest money to ever exist), albeit  to a small subset of the population. Ultimately,  this subset is the buoy that gives Bitcoin  the needed (and growing) floor till it reaches  mass adoption.</p>"},{"location":"criticisms/toxic-maxis/#the-problems-with-maximalism","title":"The problems with maximalism","text":"<p>Despite the positive benefits of  Bitcoin maximalism, there is much  to criticize in this space,  especially as Bitcoin emerges   from a secular culture in the midst  of a meaning crisis with origins  far older than fiat.</p> <p>As we witness the failings of  modernism and the progressive ethos --  which has led to an absurd clown-world  of postmodern deconstructions of  logic, math, morality, and meaning --  it is tempting to ascribe deeper  purpose and even salvation to Bitcoin,  to deify Bitcoin as if it offers   personal redemption.</p> <p>It is no different, and equally mistaken,  to treat any worldly concern with sacred and  religious reverence --  whether it's politics,  activism,  movies,  or Bitcoin --  none of these will fulfill your  very human need for purpose,  let alone answer the fundamental  questions of life.</p>"},{"location":"criticisms/toxic-maxis/#bitcoin-doesnt-fix-everything","title":"Bitcoin doesn't fix everything","text":"<p>Bitcoin fixes one thing -- just one. Bitcoin fixes a problem of fiat,  specifically the problem of seigniorage. That's it. Bitcoin doesn't fix anything else.</p> <p>While the problems of seigniorage  and the failings of fiat run deep --  especially as it enables corrosive  and morally reprehensible bureaucrats   to centrally plan an economy  (into starvation and collapse) --  the underlying problems still exist,  and are not solved by the mere  existence of Bitcoin. Bitcoin won't provide a libertarian utopia. It won't eliminate central planners. It won't even remove fractional reserve.</p> <p>All of our problems (except seigniorage)  will still exist under a Bitcoin standard. Arguably, many of today's problems are  intractable and unsolvable because of  fiat. But even in this framing,   Bitcoin isn't fixing these problems,  Bitcoin just gives us a chance to fix them.</p>"},{"location":"criticisms/toxic-maxis/#bitcoin-is-not-a-religion","title":"Bitcoin is not a religion","text":"<p>Let's dispense with the modern myth that  we are not religious, that a secular  worldview is even a sustainable possibility. Humans are religious creatures. We seek meaning with which to make sense  of the world around us -- this is a religious  impulse and it's inescapable. A \"religious worldview\" is what you use to  make sense of  what is happening around you, with meaning  sufficient to overcome the suffering of life  -- there is no default worldview,  and pretending otherwise is a regression  inevitably into nihilism.</p> <p>And as we slide into nihilism,  it's tempting to  grasp onto anything that seems good and  attach to it as a religious worldview  that can make sense of the world. Bitcoin can seem to do this at first,  as so many confusing and illogical things  suddenly make more sense. The degradation of fine art makes more sense. The absurdity of central banks and politics  makes more sense. But this is because we're living under the  poisonous influence of fiat.</p> <p>Bitcoin may be the antidote to a  specific problem in our civilization,  but it can not make sense  of life nor provide purpose. In a healthy culture this would be obvious. Bitcoin is not -- and cannot be -- a religion.</p>"},{"location":"criticisms/toxic-maxis/#bitcoin-is-not-self-justifying","title":"Bitcoin is not self-justifying","text":"<p>Consider for a moment just how damaging are  the effects of fiat -- from the unhealthy diets  to the degenerate art -- the effects are  everywhere. Perhaps the worst effect is the  antihumanism of fiat-funded environmentalists  believing we shouldn't  have children, that we're polluting  the earth and should die out as  a species. These malthusian views are not only factually  wrong but abhorrently evil.</p> <p>Some Bitcoiners will disagree with  the above,  others will see it as self evidently true. Bitcoin does not give us an epistemology  nor an ethical framework   to know that malthusian views are evil. Nothing about being a Bitcoiner precludes  one from evil antihuman worldviews.</p> <p>Ulimately, Bitcoin cannot give us the framework  to determine if Bitcoin is true. Bitcoin cannot give us a worldview  that understands what truth is,  let alone that there exists universal truth.</p>"},{"location":"criticisms/toxic-maxis/#bitcoin-is-not-salvation","title":"Bitcoin is not salvation","text":"<p>There is an all too common view amongst  Bitcoin maxis that Bitcoin is redemptive,   that Bitcoin is salvation. This belief is understandable, and it is  backed by plenty of evidence -- people  learning about Bitcoin are also  improving their life, thinking about the  future and saving towards a better future. Bitcoiners are having children, lots of them. They're attending church. This certainly sounds like redemption.</p> <p>However, is Bitcoin the cause of this redemption? No, Bitcoin is not redemptive,  truth is redemptive. To the degree Bitcoin is true,  it will feel redemptive, as all truth does.</p> <p>Deifying Bitcoin as if it is salvation,  this will lead one astray --  an attachment onto this world that will  bring only suffering. Such attachment and suffering   lead into the same postmodern  relativism of our existing secular culture  (which birthed fiat). This in turn leads inevitably to nihilism.</p> <p>There is a way out of this inevitable nihilism,  and -- interestingly enough --  it is found in the unspoken presuppositions  from which we first asked: is Bitcoin true?</p> <p>To even ask this question precludes  the existence of truth, a universal truth,  a knowable truth. And we assume that pursuing  this knowable truth is   valuable, something that is good. Thus, there is an entire foundation of  epistemology,  ethics, mathematics, and meaning   implied in asking this question. And this is, by definition,  a religious worldview.</p> <p>Bitcoin requires this religious worldview. Otherwise it cannot make sense, because  without knowable universal truth,  then nothing will or can make sense. And yes this can make Bitcoin feel redemptive  -- but remember, it is only money,  it simply depends upon the same foundation  that our civilization was born upon  (despite the modern degeneracy of  moral and epistemic relativism).</p> <p>To know if Bitcoin is true, this requires  a deeper inquiry. It presupposes a religious worldview   that sufficiently makes sense of the world  as it really is, not as we wish it to be. Ultimately, Bitcoin is not your redeemer,  but if you found your way to Bitcoin  such that you   are saving for the future and starting a  family -- don't thank Bitcoin;  don't thank God for Bitcoin --  thank God for meeting you where you are, and offering you salvation.</p>"},{"location":"criticisms/why-is-it-not-worth-more/","title":"Why is it not Worth More?","text":"<p>If Bitcoin is true, then it should be worth more. Its value should be far greater, equal to the total amount of wealth on earth.</p> <p>To any such criticism, one must ask,  what should the price of Bitcoin be? And with what unit of account? That is, if Bitcoin should be worth more,  then we can only ask:</p> <p>more of what?</p>"},{"location":"criticisms/why-is-it-not-worth-more/#more-silver","title":"More silver?","text":"<p>Early on, Bitcoin was quick to challenge  the value of silver. In fact it has exceeded silver's market cap  more than once. That is, if a single Bitcoin could buy more than  83 kilograms of silver, then the value of  Bitcoin will be greater than silver.</p>"},{"location":"criticisms/why-is-it-not-worth-more/#more-gold","title":"More gold?","text":"<p>Estimates for the total supply of gold vary wildly,  but based on the most accepted estimates,  if a single Bitcoin could buy more than  321 ounces of gold, then the value of  Bitcoin will be greater than gold.</p>"},{"location":"criticisms/why-is-it-not-worth-more/#more-real-estate","title":"More real-estate?","text":"<p>Buy land, they're not making it anymore.</p> <p>Should Bitcoin be worth more than  the total value of all land on earth? It's certainly possible to theorize on  a price, a number of Satoshis per sqft,  such that Bitcoin would be more valuable  than all real estate. But this isn't exactly useful nor practical.</p> <p>Not all land is for sale, not in fiat nor gold  nor Bitcoin.  And the estimated market cap for real estate  (over $300 trillion)   is higher than the combined GDP of all  all nations on earth  (under $100 trillion). While we could price this at  $14.3-million per-Bitcoin, it's difficult to think  that there would still be a USD if Bitcoin  became so valuable.</p> <p>As is, all the money on earth (including  Bitcoin) falls short of the estimated value of all land. Even during the gold standard this was true. There is not (and never was) enough gold  to buy all the land on earth. This is necessarily true because there has never  been a single global unit of account  (not even gold), a money  that all people across all nations and  ideologies agree on as their store of wealth.</p> <p>Even more confounding, the total value of all  derivatives is measured in quadrillions of dollars,  significantly higher than all the land  and all the money on earth combined. Importantly, these kind of outlandish valuations  are a unique phenomena  that can only exist in fiat debt money.</p>"},{"location":"criticisms/why-is-it-not-worth-more/#more-fiat","title":"More fiat?","text":"<p>Total estimates of all fiat money are impossible to measure. We're at the mercy of every central bank and  nation state -- any one of which could inflate   their money supply overnight  (as they are wont to do). And because of this, it's impossible to  calculate the minimum value of Bitcoin  needed for it to exceed a given fiat currency  (let alone all of them).</p> <p>Perhaps the real question then is  -- if Bitcoin is true --  why has fiat not yet collapsed?</p>"},{"location":"criticisms/why-is-it-not-worth-more/#why-has-fiat-not-yet-collapsed","title":"Why has fiat not yet collapsed?","text":"<p>Every day that Bitcoin survives is another  day of Bitcoin being de-facto true,  that is, another day that no one has shown a single  counterexample and proven Bitcoin as false. And likewise, every day that fiat (USD, EUR, Yen, etc) survives  is another day that the de-facto truth of Bitcoin   has not been sufficient for Bitcoin to become   the world reserve currency and global  money.</p> <p>In other words, the adoption of Bitcoin may  have reached the point where it is de-facto  true, practically unstoppable,  least of all by the usual political  machinations of central planners and their  delusions of power;  and yet, as long as there is still a will and want  for fiat currency, someone willing to take a  job in exchange for fiat money,   then fiat will persist.</p> <p>Perhaps it will take centuries for all  fiat money to collapse. Or perhaps the EUR and USD will hyperinflate tomorrow. Should anyone think such a hyperinflation of  USD or EUR is impossible, look at the history of  fiat money and hyperinflation events. While not as predictable as the tides,   hyperinflation of fiat is as  inevitable as a tsunami.</p>"},{"location":"criticisms/why-is-it-not-worth-more/#true-value-of-bitcoin","title":"True value of Bitcoin","text":"<p>If Bitcoin is true,  its total value is the true value of money itself. This is because Bitcoin has no utility other than   as money.  Even gold has industrial uses,   meaning part of its value is separate   from its monetary premium.</p> <p>Bitcoin -- unlike gold, silver, and real-estate --  is pure monetary premium.</p> <p>Fiat money is also a pure monetary premium,  except its supply is theoretically infinite,  and through the   Cantillon effect  fiat has obscured if not broken price signals  in every market.</p> <p>Bitcoin -- if it is true -- will send clear  price signals into every market,  allowing those markets to function properly. And only then will we discover the true value of  fine-art,  real estate,  food futures,  derivatives,  government bonds,  and so on, until finally we know  the true value of money itself. Perhaps it will be far lower than the quadrillions  of dollars we see in unfunded liabilities  and derivatives. Whatever it will be, will be, and it will be   a cold hard truth revealing the value of  our civilization as it is, not as central   planners and politicians proclaim it to be.</p> <p>Money does not grow on trees.</p> <p>Whatever the value, Bitcoin is the most ethical  money to ever exist. Saving in Bitcoin is a way to opt-out --  opt-out of the fiat systems of control  and coercion,  opt-out of supporting endless wars,  opt-out of central planning, and yes, even  opt-out of the madness of modern art.</p> <p>Bitcoin is money you can save without  losing your soul. It is not a hedge -- its value can only  increase along with civilization itself. As such, using Bitcoin is a choice,  a choice in favor of   a better future.</p>"},{"location":"currency/","title":"Currency","text":"<p>Under a Bitcoin Standard,  currency is the exchange of Bitcoin  for goods and services, from   payments via secondary layers (such as the Lightning network), to  final international settlement on the base layer. And much like saving  in Bitcoin, spending in Bitcoin (via Bitcoin-backed currency) is incredibly powerful.</p> <p>Not only can one be a sovereign of their  own savings, they can be a true  financial sovereign --  a sovereign of their own business or sovereign family dynasty --  impossible with fiat, but made possible with Bitcoin, simply by opting-in  to sound money: getting paid in Bitcoin,  buying goods and services in Bitcoin,  and empowering local businesses  through liquidity (such as lightning channels). In other words, empowering sovereign commerce through Bitcoin.</p>"},{"location":"currency/#bitcoin-versus-fiat","title":"Bitcoin versus Fiat","text":"<p>Fiat-based currency does not and cannot allow for sovereign commerce. If your payment rails require trusted third parties, then those third parties will hold absolute power over whether you can or cannot transact. Fiat inevitably produces the Biblical mark of the beast, without which one cannot buy nor sell.</p> <p>Sovereign commerce necessitates truly peer-to-peer transactions that cannot be censored or controlled by any authority. As such, we are still very early. Technical and economic development remains in order to make Bitcoin-backed currency globally scalable. For now, sovereign commerce will look simultaneously antiquated (reminiscent of a gold standard) while also forward-looking (inevitable innovations that make sovereign commerce possible at global scale).</p> <p>In short, we're not there yet, but like with Bitcoin itself, it is inevitable.</p> future inevitable <p>For Bitcoin-backed sovereign currency to scale globally, several architectural layers become necessary:</p> <ul> <li> <p>layer-2+ liquidity channels, such as the lightning network (which solves transaction scaling)</p> </li> <li> <p>layer-2+ non-custodial wallets (which must solve pseudonymous user scaling) -- this must:</p> <ul> <li> <p>allow unlimited creation of cryptographic wallets (such as hierarchical deterministic wallets) which can effectively collect and lock funds from existing liquidity channels, however,</p> </li> <li> <p>closing channels must not impede any locked funds in use on the network. In other words, funds must be spendable independently of the liquidity source. E.g., if a channel paid 100 sats to X, and the channel is later closed, then X must be able to spend those 100 sats on other channels.</p> </li> <li> <p>funds must be collectable into an on-chain transaction should the owner decide to do so, e.g., to create their own liquidity channel to send and receive from -- effectively making them financial sovereigns in their own right.</p> </li> </ul> </li> </ul>"},{"location":"currency/#sovereignty-levels","title":"Sovereignty Levels","text":"<p>Imagine a local community of workers. They could be unbanked in the fiat world.  They could be farmers, fishermen -- any small and relatively self sufficient community. Imagine they have some Bitcoin and occasionally they trade outside. Now imagine they experience fiat hyperinflation. There are countless real-world examples of exactly such communities, and many in our future. How could they establish sovereign commerce?</p> <ul> <li> <p>Level 1: Custodial -- Start with custodial apps and exchanges to hold and send Bitcoin, ideal for beginners. Relies on third parties, vulnerable to censorship, prompting self-custody shifts.</p> </li> <li> <p>Level 2: Physical Tokens -- Use devices like OpenDime for physical \"digital cash\" trades without internet. Simple for local swaps, but limited to in-person, leading to digital tools.</p> </li> <li> <p>Level 3: On-Chain Payments -- Control keys in non-custodial wallets for direct peer-to-peer sends. Achieves personal sovereignty, but high fees limit scalability, needing layers.</p> </li> <li> <p>Level 4: Lightning Payments -- Open Lightning channels for fast, cheap micro-payments. Scales daily commerce, requires liquidity management, evolving to networks.</p> </li> <li> <p>Level 5: Merchant Networks -- Integrate Point-of-Sale and full nodes, accepting payments via Lightning Network, and eventually into cold storage. Builds business ecosystems with shared liquidity, expanding to global reach.</p> </li> <li> <p>Level 6: International -- Use full Lightning with LSPs for cross-border trades. Enables global commerce, but onboarding barriers hint at future ease.</p> </li> <li> <p>Level 7: Inevitable Future -- Advanced L2+ solves global liquidity for billions in self-custody. Realizes global sovereign commerce, inevitable under Bitcoin Standard.</p> </li> </ul> <p>Before diving in and learning about  sovereign commerce, let's  understand the terms.</p>"},{"location":"currency/understand-the-terms/","title":"Understand the Terms","text":""},{"location":"currency/understand-the-terms/#understand-the-terms","title":"Understand the Terms","text":"<p>While saving in Bitcoin involves new concepts that don't otherwise exist in traditional economic models (such as a cryptographic ledger or UTXO sets), Bitcoin commerce is well aligned with traditional economics. The goal is simply to make and receive payments. For businesses, it means selling goods and services -- getting paid in Bitcoin. For customers, it means paying for goods and services -- as easily as you would pay in cash.</p> <p>If you're coming from a fiat mindset, that is, commerce within fiat currency, Bitcoin commerce might seem odd at first, but you'll find it similar to traditional (pre-fiat) business models. This is because most of those traditional business models developed under a gold standard (a sound money standard).</p> <p>As a result, you may find commerce under a Bitcoin standard to be intuitive and simple, almost naive, with none of the complex financialization one finds in modern fiat. There are however some new concepts, in particular new technical concepts that are worth understanding. We will describe and help demystify these new concepts, especially those necessary for understanding commerce in Bitcoin.</p>"},{"location":"currency/understand-the-terms/#on-chain-transactions","title":"On-Chain Transactions","text":"<p>Bitcoin's base layer handles direct peer-to-peer transfers recorded on the blockchain. These provide final, immutable settlement -- final international settlement -- but come with trade-offs: fees can be high for small amounts, and confirmations take time (about 10 minutes per block). Suitable for large transfers or channel settlements, but inefficient for frequent micropayments, necessitating Layer-2 solutions.</p>"},{"location":"currency/understand-the-terms/#multisig-addresses","title":"Multisig Addresses","text":"<p>Addresses requiring multiple signatures to spend funds, often 2-of-2 for shared control in channels or wallets. Enhances security by needing consensus from parties, used in payment channels to prevent unilateral spends.</p>"},{"location":"currency/understand-the-terms/#time-locks","title":"Time-Locks","text":"<p>Mechanisms to delay spending: CheckLockTimeVerify (CLTV) sets an absolute future time or block height; CheckSequenceVerify (CSV) enforces relative delays after confirmation. Essential for safe channel updates, allowing time to contest invalid states.</p>"},{"location":"currency/understand-the-terms/#hash-values-and-secrets","title":"Hash Values and Secrets","text":"<p>Cryptographic tools where a secret (unguessable number string) hashes to a fixed output. Used in Hashed Time-Locked Contracts (HTLCs) for atomic routing: payments succeed only if the secret is revealed, ensuring secure, conditional transfers across channels.</p>"},{"location":"currency/understand-the-terms/#bearer-instruments-eg-opendime","title":"Bearer Instruments (e.g., OpenDime)","text":"<p>Physical tokens like OpenDime act as \"digital cash\" -- load Bitcoin, seal, and transfer without on-chain broadcasts. Verified via USB, they enable private, local trades but require eventual on-chain settlement for reuse.</p>"},{"location":"currency/understand-the-terms/#wallets","title":"Wallets","text":"<ul> <li>Custodial Wallets: Third-party services (e.g., exchanges) hold keys and manage funds. Easy for beginners but vulnerable to censorship or loss, as users don't control assets.</li> <li>Non-Custodial Wallets: Users hold keys (e.g., Electrum, Sparrow). Provide full control and sovereignty, supporting hierarchical deterministic (HD) setups for unlimited addresses without reuse risks.</li> <li>Cold Storage: Offline wallets for long-term holding, minimizing online exposure while allowing secure receives.</li> </ul>"},{"location":"currency/understand-the-terms/#payment-channels","title":"Payment Channels","text":"<p>Off-chain setups for repeated transactions between parties. Funded via an on-chain multisig \"opening transaction,\" updated with unbroadcast \"commitment transactions\" using time-locks and secrets to deter cheating. Bidirectional versions enable back-and-forth payments, forming the basis for networks like Lightning.</p>"},{"location":"currency/understand-the-terms/#point-of-sale-pos-systems","title":"Point-of-Sale (POS) Systems","text":"<p>Tools like BTCPay Server for merchants to accept Bitcoin/Lightning payments, routing directly to wallets or cold storage. Enable sovereign commerce by avoiding intermediaries, with integration for invoices and automatic settlements.</p>"},{"location":"currency/understand-the-terms/#full-nodes","title":"Full Nodes","text":"<p>Software (e.g., Bitcoin Knots) that validates the entire blockchain independently. Essential for sovereignty: verifies rules, transactions, and balances without trusting others. Merchants or liquidity providers run nodes for reliable network participation.</p>"},{"location":"currency/understand-the-terms/#lightning-network","title":"Lightning Network","text":"<p>Lightning is a Bitcoin payment network (proposed in this 2016 whitepaper). It allows virtually unlimited scaling of Bitcoin payments and is built on top of the Bitcoin network as a second-layer network. In other words, the base-layer network has no visibility into Lightning payments but only provides final settlement of Lightning channels.</p> <p>In effect, Lightning is a network of channels between peer-to-peer Bitcoin nodes. Each channel provides liquidity between two nodes: a balance on each side. Lightning routes payments through the channels, allowing users anywhere in the network to send and receive Bitcoin anywhere else on the network (provided there is sufficient liquidity in the channels).</p> <p>There are plenty of great resources to understand the implementation details of the Lightning Network, and while still very early, it has seen widespread early adoption.</p> <p> </p> Lightning Network Map -- each line is a channel"},{"location":"currency/understand-the-terms/#public-channels","title":"Public Channels","text":"<p>The above is a map of all public Lightning channels. A public channel is simply a routable channel connected to the broader Lightning network. This is a peer-to-peer network that routes payments anywhere. Another way to think about it, these are the channels that are not otherwise hidden. Public channels (and nodes) are discoverable on sites such as 1ml, amboss.space, or through LnRouter.</p> <p> </p> LnRouter -- exploring public nodes <p>Importantly, anyone can use the Lightning Network, and anyone with a node (a Bitcoin full node with Lightning software) can join. To join, simply request to open a channel with one of the nodes on the network. The moment you have at least one open channel, your node will be discoverable by others. Additionally, a well-connected node could potentially earn sats by routing payments.</p>"},{"location":"currency/understand-the-terms/#private-channels","title":"Private Channels","text":"<p>A private channel is simply a channel between two nodes that is not otherwise discoverable. Private channels (and entire private networks) can easily be created for situations where all participants wish to remain private. For example, payments between nation states or business entities wishing to remain private.</p> <p>Importantly, maintaining privacy requires an implicit trust amongst all participants in a private network. Should one of the nodes create a routable channel to the public Lightning Network, this would (depending on the software and configuration) make this formerly private network part of the public network.</p>"},{"location":"currency/understand-the-terms/#liquidity-and-routing","title":"Liquidity and Routing","text":"<p>Liquidity is the available balance in channels: outbound for sending, inbound for receiving. Insufficient liquidity can block routes. Routing uses interconnected channels and HTLCs for secure, atomic paths\u2014payments complete fully or fail. Challenges include balancing channels and fees; watchtowers monitor for fraud during offline periods.</p>"},{"location":"currency/understand-the-terms/#lightning-service-providers-lsps","title":"Lightning Service Providers (LSPs)","text":"<p>Services that provide inbound liquidity by opening channels to users, often for a fee. LSPs (e.g., via wallets like Phoenix) simplify onboarding for newcomers, enabling receives without manual channel management, while maintaining non-custodial control.</p>"},{"location":"currency/appendix/bitcoin-script/","title":"Appendix 1: Bitcoin Script","text":"<p>Bitcoin Script is a stack-based scripting language used in Bitcoin transactions to define the conditions under which outputs (UTXOs) can be spent. It's not Turing-complete (to prevent loops and ensure predictability), making it secure for a decentralized network. Scripts are executed by Bitcoin nodes to validate spends, with the stack processing operations (opcodes) from left to right. Beginners can think of it as a simple lock-and-key system: the scriptPubKey (locking script) in an output sets the puzzle, and the scriptSig (unlocking script) in the input solves it.</p> <p>This appendix progresses from basics to advanced concepts, with examples demonstrating key features.</p>"},{"location":"currency/appendix/bitcoin-script/#basic-concepts","title":"Basic Concepts","text":"<p>Bitcoin Script operates on a stack (last-in, first-out data structure). Opcodes manipulate the stack: pushing data, performing arithmetic, or verifying conditions. A script succeeds if the final stack top is non-zero (true) and no errors occur.</p> <ul> <li>Data Types: Numbers (integers), booleans (true/false), byte arrays.</li> <li>Common Opcodes:</li> <li>Data Push: <code>OP_PUSHBYTES_&lt;n&gt;</code> or shortcuts like <code>OP_1</code> (pushes 1).</li> <li>Arithmetic: <code>OP_ADD</code>, <code>OP_SUB</code>, <code>OP_MUL</code>.</li> <li>Crypto: <code>OP_HASH160</code> (RIPEMD-160 of SHA-256), <code>OP_CHECKSIG</code> (verifies signature).</li> <li>Control: <code>OP_IF</code>/<code>OP_ELSE</code>/<code>OP_ENDIF</code>, <code>OP_EQUALVERIFY</code>.</li> </ul> <p>Scripts are limited to prevent abuse (e.g., max 10,000 bytes pre-Taproot).</p> Simple Equality Check <p>This script checks if two numbers on the stack are equal. <pre><code>OP_2 OP_3 OP_EQUAL  // Pushes 2 and 3, checks if equal (false, script fails)\n</code></pre> If executed with <code>OP_2 OP_2 OP_EQUAL</code>, it succeeds.</p>"},{"location":"currency/appendix/bitcoin-script/#standard-transaction-types","title":"Standard Transaction Types","text":"<p>Bitcoin uses templates for common scripts, evolving for efficiency and privacy.</p> <ul> <li>Pay-to-PubKey-Hash (P2PKH): Legacy standard; spend by providing pubkey and signature matching the hash.</li> <li>Pay-to-Script-Hash (P2SH): Hides complex scripts behind a hash; redeem by revealing the script and satisfying it (e.g., for multisig).</li> <li>SegWit (P2WPKH/P2WSH): Improves scalability; witnesses (sigs) separated, reducing fees.</li> <li>Taproot (P2TR): Combines key/spend paths; Schnorr sigs for efficiency/privacy.</li> </ul> P2PKH Locking Script <p>Locks to a pubkey hash; spender must provide matching pubkey and sig. <pre><code>OP_DUP OP_HASH160 &lt;pubkeyHash&gt; OP_EQUALVERIFY OP_CHECKSIG\n</code></pre></p> P2SH Redeem Script (2-of-3 Multisig) <p>Redeem script for 2-of-3 multisig, hashed in P2SH output. <pre><code>OP_2 &lt;pubkey1&gt; &lt;pubkey2&gt; &lt;pubkey3&gt; OP_3 OP_CHECKMULTISIG\n</code></pre></p>"},{"location":"currency/appendix/bitcoin-script/#advanced-features","title":"Advanced Features","text":"<p>As Bitcoin evolves, Script gains sophistication for complex conditions.</p> <ul> <li>Multisig: Requires m-of-n signatures (e.g., <code>OP_CHECKMULTISIG</code>).</li> <li>Timelocks: <code>OP_CHECKLOCKTIMEVERIFY</code> (CLTV, absolute, e.g., after block height) or <code>OP_CHECKSEQUENCEVERIFY</code> (CSV, relative, e.g., after confirmation).</li> <li>Hashlocks: Locks to a hash preimage (secret); used in Lightning HTLCs.</li> <li>Covenants: Proposed (e.g., <code>OP_CHECKTEMPLATEVERIFY</code>); restrict spends to specific templates.</li> <li>Taproot Enhancements: Key aggregation with Schnorr, script trees for hidden conditions.</li> </ul> Hashlock + Timelock (HTLC) <p>For atomic swaps or Lightning: spend with secret or refund after timeout. <pre><code>OP_IF OP_HASH160 &lt;hash&gt; OP_EQUALVERIFY OP_CHECKSIG OP_ELSE &lt;time&gt; OP_CHECKLOCKTIMEVERIFY OP_DROP OP_CHECKSIG OP_ENDIF\n</code></pre></p> Taproot Key Spend <p>Simple Taproot output; spend with Schnorr sig. <pre><code>OP_1 &lt;32-byte tweaked pubkey&gt;\n</code></pre></p> <p>Script's limitations (no loops) ensure security but restrict flexibility. Soft forks add opcodes (e.g., Taproot in 2021). Future proposals like <code>OP_CAT</code> or covenants could enable advanced L2s, scaling to billions while keeping non-custodial.</p> <p>For hands-on, test on regtest or signet networks.</p>"},{"location":"currency/appendix/coinjoin/","title":"Appendix 2: CoinJoin","text":"<p>CoinJoin is a privacy-enhancing technique for Bitcoin transactions, allowing multiple users to combine their payments into a single collaborative transaction. Proposed by Gregory Maxwell in 2013, it breaks the heuristic link between inputs and outputs by mixing funds, making it harder for chain analysis to trace ownership. It's non-custodial -- users retain control of their keys and sign only their parts -- and relies on a coordinator to facilitate without holding funds. This fosters fungibility, countering surveillance in Bitcoin's transparent ledger.</p> <p>This appendix explains CoinJoin technically, from basics to advanced, with examples of transaction structures and processes.</p>"},{"location":"currency/appendix/coinjoin/#basic-concepts","title":"Basic Concepts","text":"<p>CoinJoin operates by aggregating inputs from multiple participants into one transaction with multiple outputs, ideally of equal denominations to maximize mixing. The goal is to obscure which input owns which output, defeating common ownership heuristics.</p> <ul> <li>Coordinator: A server or peer that organizes the mix, collecting blinded inputs/outputs and constructing the transaction. Users unblind and sign only after verification.</li> <li>Denomination: Fixed output amounts (e.g., 0.1 BTC) to create indistinguishable coins.</li> <li>Blinding: Users blind their outputs (using Chaumian signatures in some implementations) to prevent the coordinator from linking inputs to outputs.</li> <li>Atomicity: The transaction either fully succeeds or fails; no partial execution to avoid theft.</li> </ul> <p>CoinJoin doesn't create new coins but reshuffles existing ones for privacy.</p>"},{"location":"currency/appendix/coinjoin/#how-it-works","title":"How It Works","text":"<p>The process involves several steps to ensure trustlessness:</p> <ol> <li>Announcement: Users signal interest to the coordinator, specifying amounts and denominations.</li> <li>Input Registration: Participants provide inputs (UTXOs) and blinded output addresses.</li> <li>Transaction Construction: Coordinator builds the joint transaction with mixed inputs/outputs.</li> <li>Blame Round: If invalid, identify and exclude faulty participants.</li> <li>Signing: Users receive the tx, unblind, verify (no changes, their outputs present), and sign their inputs.</li> <li>Broadcast: Coordinator or users broadcast the fully signed transaction.</li> </ol> <p>Success requires all signatures; failure reverts without loss.</p>"},{"location":"currency/appendix/coinjoin/#advanced-features","title":"Advanced Features","text":"<p>Implementations enhance CoinJoin for usability and security:</p> <ul> <li>Whirlpool (Samourai): Zero-link mixes with fixed denominations; post-mix spending tools to avoid re-linking.</li> <li>Taproot Integration: Schnorr signatures enable larger, more efficient mixes with better privacy.</li> <li>Defenses: Against sybil attacks (fees, proofs), DoS (blame mechanisms), and analysis (equal outputs, multiple rounds).</li> </ul> <p>Future: CISA for cross-input aggregation, reducing fees.</p> <p>Samourai Whirlpool</p> <p>Samourai Wallet's developers were arrested in 2024. They are mounting a  legal defense.</p> Simple CoinJoin Transaction Structure <p>Three users (A, B, C) each contribute 0.1 BTC inputs, mixing into three 0.1 BTC outputs (plus change if uneven). <pre><code>Inputs:\n- A: 0.1 BTC (UTXO1)\n- B: 0.1 BTC (UTXO2)\n- C: 0.1 BTC (UTXO3)\n\nOutputs:\n- 0.1 BTC to new addr X (could be A's, B's, or C's)\n- 0.1 BTC to new addr Y (could be A's, B's, or C's)\n- 0.1 BTC to new addr Z (could be A's, B's, or C's)\n</code></pre> Observers can't link which input owns which output.</p> CoinJoin Process (Simplified) <p>Users connect to coordinator, submit blinded outputs. <pre><code>1. User blinds output: hash(pubkey + blinding factor)\n2. Coordinator signs blinded hashes.\n3. User unblinds signature, verifies tx with equal 0.1 BTC outputs.\n4. Signs input if valid.\n</code></pre> Ensures coordinator can't steal or link.</p> <p>Challenges include coordinator centralization (mitigated by decentralization in JoinMarket), analysis attacks (countered by multiple mixes), and fees (reduced via Taproot). Regulatory scrutiny (e.g., on mixers) persists, but non-custodial nature protects users.</p> <p>Future: Script enhancements (covenants) for efficient mixes, L2 integration for scaling privacy.</p>"},{"location":"currency/sovereignty/","title":"Sovereignty Levels","text":"<p>In today's economy, dominated by global fiat, true sovereignty has vanished. Even the wealthiest and most productive are reduced to debt slaves where wealth flows not from value creation but from proximity to the money printer. Central banks, propped up by government alliances and their organs -- including the military -- create money from nothing, fueling a bureaucracy riddled with bad actors. Parasitic networks of NGOs and so-called aid organizations exploit this, siphoning resources from society into a maze of inefficiency and ideology, blind to their harmful influence. These are modern courtiers serving an empty throne, as destructive as ancient idols. This is the grim reality of fiat: a world of pawns to dehumanizing systems.</p>"},{"location":"currency/sovereignty/#bitcoins-promise","title":"Bitcoin\u2019s Promise","text":"<p>Bitcoin offers a way out. It enables financial sovereignty for anyone willing to seize the opportunity. Bitcoin\u2019s scarce on-chain resources will support tens of millions of true sovereigns -- entities free from intermediaries, competing for control over their wealth. Unlike fiat\u2019s fraudulent central banking, Bitcoin\u2019s decentralized, peer-to-peer nature fosters a sound money standard, echoing the simplicity of gold but built for a digital age. While future innovations may scale this freedom to billions, today\u2019s intermediaries and their antihuman incentives still bind most to this broken system.</p>"},{"location":"currency/sovereignty/#sovereignty","title":"Sovereignty","text":"<p>The sovereignty levels are a roadmap to breaking free. They chart a clear path from fiat dependency to uncensorable, global commerce under a Bitcoin standard. Each step -- starting with basic access and advancing to seamless, worldwide transactions -- equips you with the tools to reclaim full financial independence.</p> <ul> <li>Escape Fiat Control: Fiat systems thrive on censorship and inflation, stripping you of autonomy. These levels show you how to opt into sound money, where no third party can freeze or devalue your wealth, offering security in unstable economies.</li> <li>Empower Practical Freedom: From simple physical trades with tools like OpenDime to scalable Lightning payments, you\u2019ll learn to transact peer-to-peer, mirroring traditional economies without fiat\u2019s complexity. This offers resilience for individuals and communities alike.</li> <li>Build Lasting Wealth: Progressing through merchant networks to international trade, you can create sovereign businesses or family dynasties, immune bureaucratic overreach. These levels make that tangible, not theoretical.</li> <li>Prepare for the Inevitable: Bitcoin\u2019s evolution promises a future where billions can self-custody without barriers. By mastering these steps now, you\u2019re not just adapting -- you\u2019re shaping a decentralized economy that values diligence over privilege.</li> </ul> <p>Bitcoin isn\u2019t just a currency; it\u2019s a opting out of a system that enslaves. The sovereignty levels are your guide, step by practical step. Explore them to understand how to wield Bitcoin\u2019s power, secure your future, and contribute to a world of true financial freedom.</p>"},{"location":"currency/sovereignty/level-1/","title":"Level 1: Custodial","text":"<p>Starting your journey with Bitcoin as a currency begins with custodial access \u2014 the simplest way to dip your toes into Bitcoin commerce. Using third-party services like exchanges (e.g., River Financial, Swan Bitcoin) or custodial wallets (e.g., Wallet of Satoshi), you can buy, hold, send, and receive Bitcoin without managing keys or hardware. It's like using a digital bank for Bitcoin, perfect for beginners to experiment with payments or remittances.</p> <p>We'll start with ease over sovereignty. You're relying on intermediaries, mirroring fiat systems, with risks of censorship or loss. Think of it as a training ground: learn Bitcoin's flow as a currency, then move toward self-custody to escape fiat-like controls.</p>"},{"location":"currency/sovereignty/level-1/#how-it-works","title":"How It Works","text":"<ul> <li>Setup: Create an account on an exchange or custodial wallet app, often requiring identity verification (KYC). Deposit fiat via bank transfer or card, or receive Bitcoin directly.</li> <li>Payments: Send Bitcoin to addresses for purchases or receive it for sales, often with built-in Lightning support for fast, cheap transactions. On-chain transactions take time to confirm (about 10-minutes per block) but provide final international settlement.</li> <li>Examples: A local merchant accepts BTC via Wallet of Satoshi for quick sales, or a freelancer receives remittances through River.</li> </ul>"},{"location":"currency/sovereignty/level-1/#strengths","title":"Strengths","text":"<ul> <li>Ease of Use: No technical setup \u2014 use a smartphone or laptop to start buying or selling instantly.</li> <li>Fast Onboarding: Ideal for testing Bitcoin as a currency, with Lightning enabling near-instant micropayments (e.g., coffee purchases).</li> <li>Accessibility: Connects you to Bitcoin's economy without needing hardware or software expertise.</li> </ul>"},{"location":"currency/sovereignty/level-1/#weaknesses","title":"Weaknesses","text":"<ul> <li>No Control: You don\u2019t hold your keys, so the service controls your Bitcoin. Funds can be frozen, censored, or lost due to hacks or platform failures.</li> <li>Privacy Loss: KYC requirements expose personal data, unlike Bitcoin\u2019s pseudonymous potential.</li> <li>Fiat-Like Risks: Mirrors the vulnerabilities of banks \u2014 subject to terms of service, outages, or regulatory shutdowns.</li> </ul>"},{"location":"currency/sovereignty/level-1/#choosing-a-reputable-service","title":"Choosing a Reputable Service","text":"<p>Many services are unreliable or outright scams. Experienced Bitcoiners know \"crypto\" platforms often fail. Always check the following:</p> <ul> <li>Withdrawal Support: Must allow transfers to self-custody; otherwise, you hold an IOU, not Bitcoin. Selling for fiat is taxable in the US.</li> <li>Bitcoin-Only: Avoid platforms offering other cryptocurrencies \u2014 security risks increase with complexity.</li> <li>Future-Focused: Seek services with Lightning integration or Bitcoin-centric features for reliability.</li> <li>No Yield Scams: Steer clear of promised returns or vague yield products signaling insolvency risks.</li> </ul>"},{"location":"currency/sovereignty/level-1/#recommended-services","title":"Recommended Services","text":"<ul> <li>River Financial: Bitcoin-only exchange with an amazing tech stack, reliable through market cycles, and easy for buying/sending Bitcoin.</li> <li>Swan Bitcoin: Bitcoin-focused, encourages self-custody, with recurring buys transferable to your wallet, ideal for commerce beginners.</li> <li>Wallet of Satoshi: Simple mobile app for custodial Lightning payments, perfect for instant transactions.</li> </ul> <p>Custodial access is a low-friction start to using Bitcoin as a currency, but it\u2019s not true sovereignty. Once comfortable sending and receiving, shift to higher levels for hands-on, trust-minimized trades without internet reliance, setting the stage for greater independence.</p>"},{"location":"currency/sovereignty/level-2/","title":"Level 2: Physical Tokens","text":"<p>Sometimes you want to transfer Bitcoin privately and completely offline \u2014 physical Bitcoin bearers make this possible. Devices like OpenDime (a USB stick) or Satscard (an NFC card) act as \"digital cash,\" loaded with sats and passed hand-to-hand. Imagine a local community of businesses \u2014 farmers, artisans, and shopkeepers \u2014 settling periodically or just one-time trades: a farmer loads an OpenDime with Bitcoin earned from sales, hands it to a supplier for goods, who verifies it offline via USB or NFC. No apps, no KYC, just trust-minimized exchange, echoing gold settlements in traditional economies.</p> <p>This approach emphasizes privacy and simplicity for offline commerce, avoiding the surveillance and delays of online transactions. It's ideal for unbanked areas and privacy-conscious groups, but it's a specific tool, not the endgame of sovereignty.</p>"},{"location":"currency/sovereignty/level-2/#how-it-works","title":"How It Works","text":"<ul> <li>Setup: Acquire a device (e.g., OpenDime from Coinkite), load it with Bitcoin via any wallet, and seal it to make it tamper-evident.</li> <li>Transfers: Hand the device to the recipient, who verifies the balance and integrity offline (USB for OpenDime, NFC for Satscard). The bearer now controls the funds without broadcasting.</li> <li>Settlement: For reuse or larger trades, \"unseal\" to access the private key and sweep funds on-chain, but this is one-time per device for true bearer status.</li> <li>Examples: A local merchant passes a loaded Satscard to a supplier for inventory, settling quarterly, without fees or confirmations.</li> </ul>"},{"location":"currency/sovereignty/level-2/#strengths","title":"Strengths","text":"<ul> <li>Ease and Simplicity: No software or internet needed for transfers \u2014 just plug in or tap to verify, easier than gold coins.</li> <li>Privacy: Fully offline, no transaction records on-chain until swept, perfect for discreet local settlements.</li> <li>Trust-Minimized: Tamper-evident design ensures integrity, enabling peer-to-peer commerce without intermediaries.</li> </ul>"},{"location":"currency/sovereignty/level-2/#weaknesses","title":"Weaknesses","text":"<ul> <li>Physical Limitations: Restricted to in-person handovers; can't scale for remote or high-volume trades.</li> <li>Risk of Loss/Theft: Like cash, if lost or stolen, funds are gone \u2014 no recovery without backups.</li> <li>One-Time Use: Devices like OpenDime become spendable only after unsealing, requiring new ones for repeated use; eventual on-chain settlement exposes to fees and delays.</li> <li>No Scalability: Unsuitable for micropayments or global commerce; verification requires compatible hardware.</li> </ul>"},{"location":"currency/sovereignty/level-2/#reputable-bearer-instrument","title":"Reputable Bearer Instrument","text":"<p>Focus on Bitcoin-only, secure devices from trusted makers. Avoid \"crypto\" gadgets with added risks. Key criteria:</p> <ul> <li>Tamper-Evident: Ensures no prior access to keys.</li> <li>Offline Verification: Must confirm balance without Internet.</li> <li>Bitcoin-Only: Steer clear of multi-asset support for security.</li> </ul>"},{"location":"currency/sovereignty/level-2/#recommended-instruments","title":"Recommended Instruments","text":"<ul> <li>OpenDime: Coinkite's USB \"Bitcoin stick\" \u2014 load, seal, and pass like a bill. Affordable, simple verification.</li> <li>Satscard: Coinkite's NFC card for tap-based transfers, reusable until spent, with strong privacy features.</li> </ul> <p>Physical tokens offer a private, offline way to use Bitcoin as currency, but their limits push toward digital control. Next, let's explore Level 3 for non-custodial, direct peer-to-peer sends with full key ownership.</p>"},{"location":"currency/sovereignty/level-3/","title":"Level 3: On-Chain Payments","text":"<p>Non-custodial on-chain payments enable direct peer-to-peer transactions without intermediaries, exactly as Bitcoin was intended to be used. This is a critical step towards personal sovereignty, sending and receiving Bitcoin securely. For example, a local merchant might pay a supplier directly with BTC for monthly inventory, or a freelancer could receive client payments, all recorded immutably on-chain. This mirrors traditional commerce under a gold standard but with digital precision.</p> <p>This level is about true control over payments, free from custodial risks, but it comes with trade-offs: on-chain fees and confirmation delays make it less practical for small and frequent payments. It\u2019s a critical step toward financial independence.</p>"},{"location":"currency/sovereignty/level-3/#how-it-works","title":"How It Works","text":"<ul> <li>Setup: Install a non-custodial wallet (e.g., Electrum or Sparrow). Generate a seed phrase to secure and back up your keys, ideally with metal backups for durability. Store it offline safely. See Savings for details.</li> <li>Payments: Send Bitcoin to any address or receive payments to your wallet\u2019s unique addresses, managed via hierarchical deterministic (HD) setups for privacy. Transactions are broadcast to the Bitcoin network for confirmation.</li> <li>Settlement: On-chain transactions confirm in ~10 minutes per block, providing final international settlement but with fees that can be costly for small amounts.</li> <li>Examples: A local merchant sends BTC to a supplier for goods, or a family receives remittances directly, avoiding custodial freezes.</li> </ul>"},{"location":"currency/sovereignty/level-3/#strengths","title":"Strengths","text":"<ul> <li>Full Control: You manage your own transactions; no third party can censor, freeze, or interfere with your payments \u2014 true sovereignty.</li> <li>Security: Cold storage protects against hacks, unlike custodial services.</li> <li>Privacy: HD wallets generate new addresses per transaction, enhancing anonymity compared to custodial KYC.</li> </ul>"},{"location":"currency/sovereignty/level-3/#weaknesses","title":"Weaknesses","text":"<ul> <li>Responsibility: Losing your seed phrase means losing access to your Bitcoin \u2014 no recovery without backups.</li> <li>High Fees: On-chain fees make small payments (e.g., coffee) impractical.</li> <li>Confirmation Delays: Waiting ~10 minutes per block isn\u2019t ideal for instant commerce, unlike Lightning.</li> <li>Learning Curve: Managing transactions and software requires more effort than custodial apps.</li> </ul>"},{"location":"currency/sovereignty/level-3/#reputable-software","title":"Reputable Software","text":"<p>Focus on Bitcoin-only, secure software from trusted providers. Avoid multi-asset wallets with added risks. Key criteria:</p> <ul> <li>Non-Custodial: You must manage your own private keys and transactions.</li> <li>Open-Source: Code transparency ensures security (e.g., Electrum\u2019s audited codebase).</li> <li>Bitcoin-Only: Avoid complexity and vulnerabilities of \u201ccrypto\u201d wallets.</li> <li>Backup Support: Seed phrase compatibility for recovery across devices.</li> </ul>"},{"location":"currency/sovereignty/level-3/#recommended-wallets","title":"Recommended Wallets","text":"<ul> <li>Electrum: Open-source software wallet, lightweight, with HD support and strong security for desktops or mobiles.</li> <li>Sparrow: User-friendly desktop wallet with advanced features and transaction controls, ideal for commerce transactions.</li> </ul> <p>On-chain payments grant true control for Bitcoin as a currency, but high fees and delays limit daily use. Next, advance to Level 4 for fast, low-cost micropayments via non-custodial Lightning wallets, scaling your capabilities.</p>"},{"location":"currency/sovereignty/level-4/","title":"Level 4: Lightning Payments","text":"<p>Non-custodial Lightning payments allow for fast, low-cost Bitcoin transactions for everyday commerce, completely aligned with your on-chain sovereignty. Using wallets like Phoenix or Blue Wallet, you open payment channels on the Lightning Network -- a second-layer network atop Bitcoin -- to send and receive sats instantly with minimal fees. For example, a local merchant might accept BTC for daily sales at a market, or a freelancer could pay suppliers globally, all without waiting for blockchain confirmations. This mirrors the speed of cash but with Bitcoin\u2019s security and global reach.</p> <p>This level scales your ability to use Bitcoin as a currency, ideal for frequent, small payments. However, managing channels requires some setup and liquidity knowledge. For key management details, see the saving section.</p>"},{"location":"currency/sovereignty/level-4/#how-it-works","title":"How It Works","text":"<ul> <li>Setup: Install a non-custodial Lightning wallet (e.g., Phoenix or Blue Wallet). Generate a seed phrase to secure and back up your keys, ideally with metal backups for durability. Store it offline safely. See saving section for details on seed words, metal backups, and protocols.</li> <li>Channels: Fund a channel by sending an on-chain transaction to create a shared balance with a counterparty. Update the channel as needed by agreeing on new balances off-chain.</li> <li>Payments: Send or receive sats by entering an amount or scanning a QR code/invoice in your wallet. Payments route through the network and settle instantly.</li> <li>Examples: A merchant accepts BTC for goods via Phoenix, or a freelancer pays international invoices instantly through Blue Wallet.</li> </ul>"},{"location":"currency/sovereignty/level-4/#strengths","title":"Strengths","text":"<ul> <li>Speed and Cost: Near-instant transactions with negligible fees, perfect for micropayments like buying coffee or streaming sats.</li> <li>Sovereignty: Non-custodial wallets ensure you control your keys and funds, avoiding third-party risks.</li> <li>Scalability: Lightning supports high transaction volumes off-chain, all while preserving Bitcoin\u2019s base-layer security.</li> </ul>"},{"location":"currency/sovereignty/level-4/#weaknesses","title":"Weaknesses","text":"<ul> <li>Setup Complexity: Opening channels requires on-chain transactions, which incur fees and delays, plus basic understanding of liquidity.</li> <li>Liquidity Management: You need inbound/outbound liquidity to send/receive, which can be tricky without Lightning Service Providers (LSPs).</li> <li>Online Requirement: Wallets must be online to route payments, though watchtowers can monitor for fraud when offline.</li> <li>Early Stage: Lightning is still developing, with occasional routing failures or software bugs.</li> </ul>"},{"location":"currency/sovereignty/level-4/#choosing-a-reputable-wallet","title":"Choosing a Reputable Wallet","text":"<p>Focus on Bitcoin-only, non-custodial Lightning wallets from trusted providers. Avoid multi-asset wallets with added risks. Key criteria:</p> <ul> <li>Non-Custodial: You must manage your own keys and transactions.</li> <li>Open-Source: Transparent code ensures security (e.g., Phoenix\u2019s audited codebase).</li> <li>Bitcoin-Only: Avoid complexity and vulnerabilities of \u201ccrypto\u201d wallets.</li> <li>Lightning Support: Must integrate seamlessly with the Lightning Network, ideally with LSP compatibility.</li> </ul>"},{"location":"currency/sovereignty/level-4/#recommended-wallets","title":"Recommended Wallets","text":"<ul> <li>Phoenix: Open-source mobile wallet with built-in LSP for easy channel setup, ideal for quick payments.</li> <li>Blue Wallet: User-friendly wallet blending on-chain and Lightning, with HD support for seamless commerce.</li> </ul> <p>Lightning payments scale Bitcoin as currency for daily use. Next, advance to Level 5 to build business ecosystems with point-of-sale systems and shared liquidity.</p>"},{"location":"currency/sovereignty/level-5/","title":"Level 5: Merchant Networks","text":"<p>Merchant networks elevate Bitcoin commerce to a business level, enabling seamless acceptance of payments through non-custodial point-of-sale (POS) systems and full nodes. Using tools like BTCPay Server, merchants can accept Bitcoin and Lightning payments directly into their own wallets or cold storage, bypassing intermediaries. For example, a local shop might process daily BTC sales at a market, or a small business could settle international supplier invoices instantly via Lightning, all while running a full node for independent verification. This mirrors traditional merchant systems under a gold standard but with Bitcoin\u2019s global, uncensorable reach.</p> <p>This empowers businesses and communities to build sovereign ecosystems with shared liquidity, ideal for frequent transactions and local commerce networks. However, it requires technical setup and ongoing maintenance. For key management details, see the saving section.</p>"},{"location":"currency/sovereignty/level-5/#how-it-works","title":"How It Works","text":"<ul> <li>Setup: Install a non-custodial POS system (e.g., BTCPay Server) and a Bitcoin full node (e.g., Bitcoin Knots) on dedicated hardware. Generate a seed phrase to secure and back up your keys, ideally with metal backups. Store it offline safely. See saving section for details on seed words, metal backups, and protocols.</li> <li>Node Operation: Run a full node to validate transactions independently, without trusting third parties.</li> <li>Payments: Accept Bitcoin via on-chain or Lightning channels by generating QR codes or invoices through the POS system. Funds route directly to your wallet or cold storage, with Lightning enabling instant, low-fee transactions.</li> <li>Examples: A local shop uses BTCPay Server to accept BTC for goods, or a cooperative runs a node to settle community trades via Lightning.</li> </ul>"},{"location":"currency/sovereignty/level-5/#strengths","title":"Strengths","text":"<ul> <li>Sovereignty: Direct control over payments and keys eliminates reliance on custodial services, ensuring no censorship or freezes.</li> <li>Flexibility: Supports both on-chain (for large settlements) and Lightning (for daily micropayments), fitting diverse business needs.</li> <li>Community Resilience: Nodes and shared liquidity foster local ecosystems, ideal for inflation-hit regions or unbanked communities.</li> </ul>"},{"location":"currency/sovereignty/level-5/#weaknesses","title":"Weaknesses","text":"<ul> <li>Technical Complexity: Setting up and maintaining a full node and POS system requires hardware and technical know-how.</li> <li>Liquidity Management: Lightning channels need sufficient inbound/outbound balance, often relying on Lightning Service Providers (LSPs) for ease.</li> <li>Ongoing Maintenance: Nodes require regular updates, storage (hundreds of GBs), and reliable internet.</li> <li>Cost: Initial hardware and channel-opening fees can be significant, though offset by long-term savings.</li> </ul>"},{"location":"currency/sovereignty/level-5/#reputable-solution","title":"Reputable Solution","text":"<p>Focus on Bitcoin-only, open-source tools from trusted providers. Avoid multi-asset or proprietary systems with added risks. Key criteria:</p> <ul> <li>Non-Custodial: You control keys, transactions, and node operations.</li> <li>Open-Source: Transparent code ensures security and community auditing.</li> <li>Bitcoin-Only: Avoid complexity and vulnerabilities of \u201ccrypto\u201d platforms.</li> <li>Lightning Support: Must integrate seamlessly with Lightning for scalable payments.</li> </ul>"},{"location":"currency/sovereignty/level-5/#recommended-solutions","title":"Recommended Solutions","text":"<ul> <li>BTCPay Server: Open-source POS platform for Bitcoin and Lightning, customizable for merchants, with direct wallet integration.</li> </ul> <p>Merchant networks empower businesses to scale Bitcoin as a currency with independent infrastructure. Next, advance to Level 6 for global trade using advanced Lightning setups.</p>"},{"location":"currency/sovereignty/level-6/","title":"Level 6: International Lightning","text":"<p>Scaling beyond local merchant networks, international Lightning involves operating a distributed Lightning hub across multiple geographic regions, effectively acting as a sovereign Lightning Service Provider (LSP). Using node software like LND or CLN on geographically distributed full nodes, you manage a network of channels, providing liquidity and onboarding tools for international partners, employees, and/or contractors. For example, a global business might run nodes in Europe, Asia, and the Americas, acting as a sovereign international payment system.</p> <p>This assumes an international business with multiple locations, focusing on distributed node management, liquidity provisioning, and simple onboarding for non-custodial wallets. It demands expertise in multi-region setup and integration.</p>"},{"location":"currency/sovereignty/level-6/#how-it-works","title":"How It Works","text":"<ul> <li>Setup: Deploy Lightning node software (e.g., LND or CLN) on multiple Bitcoin full nodes across multiple geographic regions (e.g., one in the US, one in Europe, one in Asia) for redundancy and low-latency routing.</li> <li>Channels: Establish and fund a network of Lightning channels across your nodes, peering strategically with international hubs. Integrate with external LSPs (e.g., ACINQ or Lightning Labs Pool) for supplemental liquidity, ensuring non-custodial access where you provide funds and partners control keys.</li> <li>Payments: Facilitate global sends/receives, and onboard employees/contractors with simple non-custodial wallets (e.g., provide seed setup guidance and initial channel liquidity), enabling instant Lightning transfers.</li> <li>Examples: A multinational firm runs distributed nodes to pay contractors in Asia via integrated LSP channels, or a dynasty offers staff non-custodial wallets for seamless international remittances.</li> </ul>"},{"location":"currency/sovereignty/level-6/#strengths","title":"Strengths","text":"<ul> <li>Distributed Resilience: Multiple nodes across regions ensure uptime and efficient global routing, reducing single-point failures.</li> <li>Sovereign Scaling: Act as an LSP for your network while integrating external ones, maintaining non-custodial control for all participants.</li> <li>Onboarding Ease: Provides simple tools for employees/contractors to join with their own wallets, fostering a sovereign payment ecosystem.</li> </ul>"},{"location":"currency/sovereignty/level-6/#weaknesses","title":"Weaknesses","text":"<ul> <li>High Complexity: Managing multi-region nodes, peering, and LSP integrations requires advanced technical skills and infrastructure.</li> <li>Capital and Costs: Funding channels across nodes ties up Bitcoin, plus potential hardware expenses.</li> <li>Maintenance Overhead: Constant rebalancing, monitoring, and updates for distributed nodes; geographic diversity adds coordination challenges.</li> <li>Regulatory Considerations: International operations may face varying laws, though Bitcoin's decentralization helps mitigate risks.</li> </ul>"},{"location":"currency/sovereignty/level-6/#choosing-a-reputable-solution","title":"Choosing a Reputable Solution","text":"<p>Focus on Bitcoin-only, open-source Lightning implementations for distributed operations. Avoid proprietary or multi-asset tools. Key criteria:</p> <ul> <li>Non-Custodial: Supports key control for all network participants, including onboarded users.</li> <li>Open-Source: Transparent code for security and customizability (e.g., LND\u2019s audited codebase).</li> <li>Bitcoin-Only: Avoid complexity and vulnerabilities of \u201ccrypto\u201d platforms.</li> <li>Multi-Node Support: Tools for distributed management, LSP integration, and easy onboarding.</li> </ul>"},{"location":"currency/sovereignty/level-6/#recommended-solutions","title":"Recommended Solutions","text":"<ul> <li>LND (Lightning Network Daemon): Go-based implementation for robust multi-node operations, ideal for international liquidity and peering.</li> <li>CLN (Core Lightning): Flexible, modular Lightning node software, supporting advanced LSP integrations for global merchant networks.</li> </ul> <p>International Lightning lets you operate a distributed, sovereign LSP for global commerce, but its demands foreshadow simpler innovations. Next, advance to Level 7 for barrier-free, universal Bitcoin payments.</p>"},{"location":"currency/sovereignty/level-7/","title":"Level 7: Inevitable Future","text":"<p>Bitcoin as a universal currency will enable billions of people to buy and sell as easily as they do with cash, no custodians, no intermediaries -- a seamless, privacy-preserving system where everyday users transact, all backed by Bitcoin's security. Imagine an employee working for a sovereign business getting paid sats directly into a non-custodial Lightning wallet like Zeus or Phoenix -- the wallet handles everything, surviving channel closures through off-chain notes or automatic swaps, without the user ever needing on-chain transactions. This fulfills Bitcoin's promise of sound money for all, where most people save and spend in non-custodial wallets, without running nodes or balancing channels, instead just working and stacking sats.</p> <p>Bitcoin's existing adoption demands inevitable advancements as a currency, solving the \"last-mile\" problem (providing inbound liquidity to new users) and ensuring wallets remain non-custodial and resilient to closures. Missing pieces like better covenants and federated models will be developed, making Bitcoin the default currency.</p>"},{"location":"currency/sovereignty/level-7/#how-it-will-work","title":"How It Will Work","text":"<ul> <li>Setup: Users install a simple non-custodial wallet (e.g., future versions of Phoenix or Zeus), generating a seed phrase for backup, or leveraging a secure and private account from a trusted family member. No channel funding required \u2014 they simply connect to an employer's LSP or mint for automatic liquidity.</li> <li>Payments: Receive sats from work or direct sales, all by sharing a wallet invoice. Send and receive as easily as cash.</li> <li>Sovereignty: A motivated individual saves enough Bitcoin to justify an on-chain transaction, taking their first step into becoming a sovereign.</li> </ul>"},{"location":"currency/sovereignty/level-7/#strengths","title":"Strengths","text":"<ul> <li>Simplicity: Users get paid and spend without complexity \u2014 LSPs/mints abstract channels, wallets survive closures via ecash or swaps.</li> <li>Non-Custodial Resilience: Funds remain accessible and spendable even if channels close, with user-held keys ensuring true control.</li> <li>Universal Access: Enables saving/spending in layer 2+ wallets for most, scaling to billions without nodes or liquidity management concerns.</li> </ul>"},{"location":"currency/sovereignty/level-7/#current-gaps","title":"Current Gaps","text":"<ul> <li>Inbound Liquidity: New users can't receive without channels; LSPs help but are often semi-custodial \u2014 there is a lack of non-custodial LSP standards.</li> <li>Channel Closures: Force-closing a channel in high-fee environments risk funds becoming inaccessible to normal users; splicing and \"justice transactions\" mitigate, but not seamless for all.</li> <li>Privacy Leaks: Routing metadata exposes info; blinded paths needed for full anonymity.</li> <li>User Experience: Many wallets are semi-custodial; true non-custodial wallets like Phoenix/Breez exist but require education \u2014 and are definitely not intuitive.</li> </ul>"},{"location":"currency/sovereignty/level-7/#current-proposals","title":"Current Proposals","text":"<p>Future protocols will enable simple, resilient non-custodial wallets:</p> <ul> <li>Channel Splicing: Add/remove funds without closing channels, reducing on-chain needs and surviving closures gracefully. </li> <li>Fedimint/Cashu: Mints issue blinded notes backed by BTC; users hold ecash in wallets, spendable off-chain, independent of closures \u2014 federated for trust minimization.</li> <li>Ark/Statechains: Off-chain scaling with shared UTXOs or transferable ownership; no user channels, funds survive via unilateral exits or off-chain transfers.</li> <li>Advanced LSPs: Non-custodial LSPs (e.g., ACINQ) provide liquidity swaps; ensuring payments flow with minimal user intervention.</li> </ul> <p>Bitcoin is best understood as the inevitable global currency, where billions transact non-custodially without complexity, leaving the complexity to the true financial sovereigns.</p>"},{"location":"pow/","title":"Proof-of-Work","text":"<p>Bitcoin transactions are processed through  a highly competitive system of  proof-of-work hashing, aka mining. This is also, coincidentally, how Bitcoin  is issued and how issuance stays on  a fixed supply schedule -- which is how the total supply of Bitcoin will remain fixed, forever.</p> <p>While most people will be  saving  and  spending in Bitcoin,  very few will be involved  in mining, and far fewer will be successful. Ultimately, the mechanism that guarantees  final international settlement (mining) is a highly competitive (and adversarial) zero sum game.</p> <p>For those foolish enough to play this game  -- and for some it's more a matter of fate than want --  the only way to be successful is a  combination of competence, luck, and  by far the most important: a ridiculous   work ethic.</p> <p>Proverbs 10:4</p> <p>Always poor is he who works with an indolent hand, but the hand of the diligent brings wealth</p> <p>If you're looking for passive income or an exciting investment opportunity,  Bitcoin mining is most certainly not  for you. However, if honest hard work is just your kind of game, well then -- welcome to the  arena. Proof-of-work hashing is what gives Bitcoin its security, and what allows for final international settlement. And while it is adversarial and zero-sum, it is open to everybody. Anyone can attempt to find and propagate blocks. In fact, to truly gain your own financial sovereignty, then mining your own blocks guarantees you can settle your own on-chain transactions.</p>"},{"location":"pow/#sovereignty-levels","title":"Sovereignty Levels","text":"<ul> <li> <p>Level 1: Network Reliance -- Run a full node and independently validate blocks, securing your own setup without mining.  Simple for individuals or communities in shaky economies, but transaction settlement depends on others.</p> </li> <li> <p>Level 2: Lottery Mining -- Use a low-power ASIC like BitAxe connected to a solo pool (e.g., solo.ckpool.org or public-pool.io). Affordable and low-energy for self-sufficient hashing.</p> </li> <li> <p>Level 3: Small Farm -- Run a snall farm of ASICs aimed at a solo pool to boost your block-finding odds and build community strength. Good for families mining independently.</p> </li> <li> <p>Level 4: Sovereign Pool -- Host your own stratum server linked to your own node for a fully private solo pool. Can also filter transaction spam from your node's block templates.</p> </li> <li> <p>Level 5: Enterprise Scale -- Set up mid-sized mining farm with sufficient hashrate to see a block every few months.</p> </li> <li> <p>Level 6: Industrial Scale -- Manage massive minng farms with sufficient hashrate to see blocks every week or even daily.</p> </li> <li> <p>Level 7: Inevitable Future -- Emerging tech makes hashrate seamless from any device, barrier-free for everyone. Delivers true sovereignty worldwide.</p> </li> </ul> <p>Before diving-in and daring to test your fate in the Bitcoin mining arena, you may want to first  understand the terms.</p>"},{"location":"pow/understand-the-terms/","title":"Understand the Terms","text":""},{"location":"pow/understand-the-terms/#understand-the-terms","title":"Understand the Terms","text":"<p>Mining is perhaps the most confusing  metaphor within all of Bitcoin. It can be better understood as   transaction processing, allowing  for final international settlement --  as well as   for issuance, ensuring that the  supply schedule stays on its predetermined  course. Unfortunately, there's no one word to adequately  describe all of that, hence the circumlocutions  necessary to describe what   Bitcoin \"mining\" really is.</p> <p>For these reasons, we've called this section  Proof of Work. Because for better or worse, the entirety  of Bitcoin mining, international settlement  processing, whatever you want to call it --  all rests on top of what is known as a  proof of work consensus mechanism.</p> <p>We will attempt to demystify proof of work  and provide a clear and technically accurate  understanding of how mining works.</p>"},{"location":"pow/understand-the-terms/#hashing","title":"Hashing","text":"<p>Despite how often it is said,  Bitcoin mining is not concerned with  solving complex math problems. Bitcoin mining is just hashing. The \"proof\" in proof of work is simply  a hash that proves  a certain amount of hashing (that is, work)  was done. The important part is not the math function,  the important part is the proof of work.</p> what is a hash? <p>A \"hash\" refers to the output of a  hash function,  which is a math function that takes  input of any size and maps it to a   fixed-sized output. A good hash function should be deterministic,  with uniformly distributed output,  and be non-reversable  (that is, you cannot determine what   the input was if you only have the   output).</p> <p>A hash function can certainly be considered a \"complex math function\" (not exactly a \"math problem\"), but that is decidedly not the point of Bitcoin hashing -- the point is proof of work.</p> <p>The output set of a hash function   (that is, the set of all possible outputs)  can be  small (useful for data indexing) or  extremely large (useful for cryptography). Bitcoin mining uses  SHA-256.</p>"},{"location":"pow/understand-the-terms/#sha-256","title":"SHA-256","text":"<p>SHA-256 is a hash function that  maps any input into a number somewhere between  0 and 2<sup>256</sup>. This set of numbers is so large it's on the scale  of atoms in the universe. It's so astronomically large that the chance  two human-generated  inputs mapping to the same output  (what would be known as a collision)  is considered so infeasible as to be  impossible. And in fact there are exactly zero known  collisions in SHA-256  and finding a collision would  likely take beyond the heat death of the  universe to discover.</p> <p>That said, what if instead of a collision,  you just wanted to find an input whose  SHA-256 output was  smaller than a target number? If it's a very large target number, say   2<sup>255</sup> then this would be trivial  (50% of all inputs would produce  a hashed output smaller than that, basically  a coin toss). But if it was a very small target number, then it  would be extremely difficult to find any  input that produced a hashed output  that was smaller.</p> For example <p>Let's look at some example SHA-256 outputs,</p> <p><pre><code>1 =&gt; 6B86B273FF34FCE19D6B804EFF5A3F5747ADA4EAA22F1D49C01E52DDB7875B4B\n2 =&gt; D4735E3A265E16EEE03F59718B9B5D03019C07D8B6C51F90DA3A666EEC13AB35\n3 =&gt; 4E07408562BEDB8B60CE05C1DECFE3AD16B72230967DE01F640B7E4729B49FCE\n</code></pre> <pre><code> three =&gt; 8B5B9DB0C13DB24256C829AA364AA90C6D2EBA318B9232A4AB9313B954D3555F\n Three =&gt; 926F52D1C1E19C0C58A7D39BF234A0D239352F5ACFA26C73989D9C3845614999\nThree? =&gt; F9DCE11BE6E27EA81231A766A4210EAA05D51E4C5F5F79C8FD0133274201D543\n</code></pre></p> <p>Each output is a hexadecimal representation of a number (that is, a very large base-16 number). Notice that small changes in the input  produce radically different outputs. In fact, there's no way to predict where in the 2<sup>256</sup> output set a given input will land (other than to perform the SHA-256). And as expected, exactly 50% of those outputs are less than 2<sup>255</sup>.</p> <p>Also notice that none of these output numbers are particularly small. For comparison, let's look at the SHA-256 output of the Bitcoin genesis block,</p> <p><code>00000000839a8e6886ab5951d76f411475428afc90947ee320161bbf18eb6048</code></p> <p>Notice the leading zeros. This number is clearly much smaller than the previous SHA-256 outputs. In this case the target was </p> <p><code>00000000FFFF0000000000000000000000000000000000000000000000000000</code></p> <p>And indeed the SHA-256 output of the genesis block is smaller than this target.</p> <p>Compare this to a more recent block hash, block 772244,</p> <p><code>000000000000000000032c4341255c7b108f3982b71b6e734d25b89bb9b1cc41</code></p> <p>By looking at the leading zeros it is obvious that this number is considerably smaller than the genesis block (and thus more work was required to find an input that  produced such a small SHA-256 output). In fact, the probability of guessing an input with a SHA-256 output that small is so small that you're more likely to be struck by lightning every day of the week at noon.</p> <p>This simple observation  is the basis  of Bitcoin mining. Importantly, finding input whose  SHA-256 hash output  is smaller than a target  can only be done  through a brute force search;  and thus the very existence of  such an input  would prove a certain amount of  brute force work  was done.</p> Other hash functions <p>In addition to SHA-256, Bitcoin makes use of other hash functions; in particular  RIPEMD-160, used in conjunction with SHA-256 to generate Bitcoin addresses.</p> <p>However, within Bitcoin mining  proof of work, it is entirely a game of SHA-256 hashing.</p>"},{"location":"pow/understand-the-terms/#hashrate","title":"Hashrate","text":"<p>As the name implies, hashrate is  simply the number of SHA-256  hashes per-second happening  in order to successful discover  a new block. There are great real-time  visualizations  of hashrate over time. Hashrate across the entire Bitcoin  network is estimated based  on the time between blocks  and the current network difficulty. In general, the faster you are  producing valid blocks for  a given difficulty, the  more hashrate you have.</p> <p>Importantly, hashrate is the  measure of total work being  done. From a protocol perspective,  we only care about  hashrate, and not the  physical energy consumed  by the miners to produce   that hashrate. Energy usage (e.g, in Watts or Joules-per-Terahash-second)  is entirely dependent on the   mining devices themselves. And this simple inflection  point of Watts to Hashrate  is where the realm of  abstract mathematics  unites with our physical  world. This is ultimately why  Bitcoin has value, because  producing Bitcoin takes real  energy in the real world  (measured in Watts),  and it does so through  a fixed and known  supply schedule.</p>"},{"location":"pow/understand-the-terms/#asics","title":"ASICs","text":"<p>Application-Specific Integrated Circuit or  ASIC  is nothing new, and in Bitcoin mining this  refers to a specific chip that calculates  SHA-256  hashes (and nothing else). However, an \"ASIC\" can also refer   to the mining device itself  (which has hundreds  of ASIC chips).</p> <p>Initially, Bitcoin mining happened on  CPUs, and then GPUs. And due to economic incentives mining moved to  FPGA  chips and then eventually to modern ASICs. At every step of this evolution the incentives  are pointing to the maximum amount of  hashrate for the minimum amount of  electricity consumption.</p> <p>It is difficult to know what the next  evolution of Bitcoin mining technology  will be. It might be quantum ASICs  powered by clean nuclear energy. It might be highly decentralized  commodity ASICs producing hash  from geothermal energy. Whether it be advances in  quantum computing,  or advances in energy production,  Bitcoin mining will be incentivizing  much needed innovation.</p>"},{"location":"pow/understand-the-terms/#difficulty","title":"Difficulty","text":"<p>Difficulty is the measure  of how difficult it is to find  a valid block. Every  2016  blocks the difficulty will be adjusted  to match a 10-minute average time  between blocks. In other words, if blocks are  coming in faster than every  10-minutes, the difficulty  will increase; if blocks  are coming in slower,  the difficulty will decrease.</p> <p>The formula for difficulty is based  on the target number discussed  above. Specifically,</p> <pre><code>difficulty = difficulty_1 / target\n</code></pre> <p>And <code>difficulty_1</code> is the highest possible target allowable in Bitcoin  (in other words the lowest allowable difficulty), <pre><code>difficulty_1 = 00000000FFFF0000000000000000000000000000000000000000000000000000\n</code></pre></p> <p>Note that as difficulty increases  the target number decreases  (that is, it becomes more difficulty  to find a SHA-256 hash less  than the target).</p>"},{"location":"pow/understand-the-terms/#network-difficulty","title":"Network Difficulty","text":"<p>Network difficulty refers to  the difficulty across  the entire Bitcoin network. That is, the difficulty needed  to find a valid block. When Bitcoin was first released  in 2009  the network difficulty was 1.0,  and this number slowly increased  as more participants joined  and started mining. By 2012 the difficulty  was over a million  (that is, over a million times more difficulty).</p> <p>In the age of ASICs, the  network difficulty has  grown astronomically large,  and  continues  to grow. For example, block 772244 (mentioned above)  has a difficulty of 37,590,453,655,497.09  (over 37-trillion). This corresponds to a hashrate  of over 250 exahash --  that is, over 250-quintillion  SHA-256 hashes per-second.</p> <p>To put this into perspective,  if we attempted to log all of  the quintillions of hashes  per-second  then we would exhaust  all know storage space  (all cloud storage,   all personal computers,   all mobile devices)  in only a few seconds. Bitcoin's global hashrate is now so large  it has outgrown our  current (and otherwise impressive)  global data storage capacity.</p>"},{"location":"pow/understand-the-terms/#session-difficulty","title":"Session Difficulty","text":"<p>Typically, session difficulty refers to the  specific difficulty assigned to a miner. While the network difficulty is used to  find a valid block, the session difficulty  is a way to find valid shares that act as  a proof of work for an individual miner  (or a pool of miners). For example, a modern ASIC might use a  session difficulty of 65,536 and generate  valid shares every few seconds.</p> <p>A share is simply a block  that meets the session difficulty  (but not necessarily the  network difficulty). These shares are themselves a  proof of work, specifically it is  proof that a given miner did work.</p>"},{"location":"pow/understand-the-terms/#share-difficulty","title":"Share Difficulty","text":"<p>A valid share must meet the session difficulty,  which just means its SHA-256 hash is  smaller than the target  computed from the session difficulty. In other words,  every share will have its own difficulty which  is greater than the session difficulty. And if the share difficulty is greater than  the network difficulty then that share  is a block!</p>"},{"location":"pow/understand-the-terms/#luck","title":"Luck","text":"<p>Luck is a measure of -- you guessed it -- luck. Specifically, the luck of finding a   valid block in  a given period of time. It's similar to the probability of finding  a block given a specific amount of hashrate. Technically, luck is simply the following  formula given shares between two blocks,</p> <pre><code>sum(session_difficulty) / network_difficulty\n</code></pre> <p>In other words, if luck is 1.0 (100%) then you  mined a block when your own proof of work  was equal to the current network difficulty. If your luck measure was greater than 1.0  then this is bad luck  (meaning you did more work for that  one block than implied by the current network difficulty). And if your luck was less than 1.0  then this is good luck  (meaning you found a block before doing  all the work implied by the network difficulty). In practice, the luck between any two blocks  will vary, sometimes good and sometimes bad luck. However, the average luck over time  should convergence  on 100% (by definition).</p> <p>Over a period of N blocks, luck is simply,</p> <pre><code>sum(session_difficulty) / (N * network_difficulty)\n</code></pre> <p>In a perfectly efficient and error-free system,  luck will converge on 100% as N gets larger. And if luck is greater than 1, even by a small  fraction, say, 1.02 (102%), then that denotes  bad luck -- meaning you didn't mine as many  blocks as you should have for the hashrate  you produced. Imagine you did the work for 102 blocks  but were rewarded 100 blocks. This might just be legitimate bad luck. But over time, let's say you earned 1,000 blocks  with a luck of 102%, meaning you missed 20 blocks --  this is persistent bad luck, and is  not statistically feasible, and thus  is a sign something is wrong with your miners  (block withholding, rejected orphaned blocks,  compromised firmware, etc).</p>"},{"location":"pow/understand-the-terms/#blocks","title":"Blocks","text":"<p>Ultimately, the entire goal of Bitcoin mining  is to find and propagate blocks. Finding a block means finding a valid block  whose SHA-256 hash is less than the  current network difficulty target. More specifically, the hash of the  block headers  must meet this difficulty,  and the block itself must  be valid  (otherwise the nodes   in the Bitcoin network   will reject this block).</p>"},{"location":"pow/understand-the-terms/#block-headers","title":"Block headers","text":"<p>A block header is composed of a small  number of fields that when input  into a SHA-256 will produce a  hash that is less than the target   (computed from the network difficulty).</p> <ul> <li><code>version</code> -- a 4-byte field used to track version, and (since BIP-9) is used to signal for soft forks (backwards compatible upgrades to the protocol)</li> <li><code>timestamp</code> -- a 4-byte field containing the Unix timestamp; must be greater than the average of the previous 11-blocks and less than 2-hours past the current network-adjusted timestamp </li> <li><code>difficulty</code> -- a 4-byte compressed representation of the current network difficulty</li> <li><code>nonce</code> -- number used only once, a 4-byte number used by miners in order to test different hashes</li> <li><code>previous block hash</code> -- a 32-byte field holding the SHA-256 of the previous block -- this ensures that no previous transaction was modified</li> <li><code>merkle root</code> -- a 32-byte field holding the Merkle tree of all transactions in the block</li> </ul> <p>When mining Bitcoin, the <code>nonce</code>  is directly modifiable to work on. However, modern ASICs will exhaust  the 4-bytes of <code>nonce</code> instantly. Miners could potentially  use the variance in the <code>timestamp</code>,  artificially adjusting the <code>timestamp</code>  such that it's still  valid (according to the consensus rules). But in practice <code>nonce</code> and a handful  of bits of <code>timestamp</code> do not give   sufficient search space for modern  ASIC miners (with all their hashing power)  -- instead,  modern ASIC miners modify the transactions,  typically the coinbase (the very first  transaction in a block),  adding <code>extranonce</code> fields.  Because this will modify transactions this  will require a new  <code>merkle root</code> for every variation.</p> <p>The <code>merkle root</code> is a Bitcoin-specific  Merkle Tree  which is effectively a SHA-256 hash of hashes  of all the transactions in a given block. The purpose of a Merkle Root is to prove  that a given set of transactions produces  a given SHA-256 hash  (a way to validate that the transactions   in a given block were not modified).</p>"},{"location":"pow/understand-the-terms/#block-height-and-weight","title":"Block height and weight","text":"<p>Every block has  a valid proof of work hash,  and is also indexed by its  block height. Block height is simply the number  of blocks prior to any given block,  and is an easy way to reference  a given block. E.g., block height  772,615  has exactly 772,615 blocks  prior to it.</p> <p>If you look at the details of a given block,  e.g., block  772,615  you will see that it also has a block weight,  in this case, 3.99 MWU. The block weight is simply the size  of a block, measured in   weight units  where MWU is million weight units.</p>"},{"location":"pow/understand-the-terms/#block-propagation","title":"Block propagation","text":"<p>Once a miner finds a new block  it needs to propagate that block  to the rest of the network. Typically, this is done through the  submitblock  RPC command in  Bitcoin Core. Failure to propagate quick enough can  result in an orphan or stale block,  which means the miner gets zero reward  despite their proof of work.</p> <p>Once a miner submits a new block,  the p2p network of Bitcoin nodes  will propagate the new block  (each node verifying the  proof of work and validity). Historically, this process was  somewhat slow. However, since  BIP-152  the nodes propagate  blocks using a compact  message format that only includes  block headers and  a compact list of transaction IDs. Because each full node  manages its own mempool,  it already has most of the  transactions, so it's  able to assemble the  block quickly  (only fetching transactions  that it doesn't already  know about).</p> <p> </p> Block propagation time (at 50% and 90% of total network) <p>Compact block messages  led to a signifant   reduction in block propagation time,  which in turn  greatly reduces the risk  of oprhaned blocks.</p>"},{"location":"pow/understand-the-terms/#pools","title":"Pools","text":"<p>Mining is all about probability. If you're a large miner with 10%  of the total hashrate, then you  will be expected to mine 10% of the  total number of blocks. There are on average 144 blocks per day,  so 10% is 14.4 blocks per day. A miner with 1% would average 1.4  blocks per day, and so on.</p> <p>But what about small miners? What about an individual mining device?</p> <p>Let's look at block   772,793. This block was mined through  Solo CK  purportedly by an individual miner  with only 10 terahash. 10 terahash out of 284 exahash (at the time). That's 10 / 284,000,000. This means they will mine   0.0000003% of all blocks,  and statistically should take  about 540 years before finding  a block.</p> <p>This rare luck aside, most individual mining  devices will never find a block, ever. A mining device might have an operational  life of 10 years, probably less,  which is far less than the centuries  it would take to find a block. Blocks are finite, 144 per day,  52-thousand per year. And there are millions of miners, all  competing against the ever increasing  network difficulty.</p> <p>This was a problem even early in Bitcoin's  history. As a result, in 2010, pooled mining was born. The idea is simple, pool your hashrate and  share the reward based on contributed hashrate. A small miner doesn't have to wait 540 years  or be extremely lucky --  they can get paid a small amount daily.</p> <p>Miners in a pool  use the pool's coinbase address, and  expect payout from the pool  (as their shares prove they did  work for the pool). There are different payout strategies  where risk is either shared amongst pool  participants, or the risk is owned entirely  by the pool itself. Additionally, work is coordinated  across all the participants of a pool  through a protocol  known as stratum.</p>"},{"location":"pow/understand-the-terms/#stratum","title":"Stratum","text":"<p>For better or worse,  stratum  is the defacto protocol for pools  to manage workers. It is a raw-socket protocol using  newline-delimited JSON  (rather than websockets or any other standard). And while  stratum v2  promises to solve many of the  problems with stratum,  until there's wide adoption  of v2 in mining firmware,  stratum will remain the standard.</p> <p>Importantly, modern firmware  lacks the ability to call  getblocktemplate  on a full node, and simply requires  a stratum url in order to   function. There is no technical reason for this,  but a consequence of market demand  for fleets of ASICs and pooled mining. If you have a modern ASIC,  you will need a stratum server  (from a pool or otherwise)  to start mining.</p>"},{"location":"pow/understand-the-terms/#pay-per-share","title":"Pay-per-Share","text":"<p>This is the most common payout strategy  for pools, and is typically full-pay-per-share (FPPS). You may see PPS or PPS+ as slight   variations of this strategy. Simply put, the risk is on  the pool itself and not the miners. The miners get paid for their shares  regardless of whether the pool is  propagating blocks. In fact, the risk of orphans or any  operational inefficiency is owned  by the pool  (even if there's a problem with one of the miners).</p> <p>An FPPS pool will set a session-difficulty  and an FPPS rate,  and a miner gets paid for all shares  above that difficulty. If a share happens to be a block,  the miner gets paid for just another share. If the miner withholds   a block (intentionally or accidentally),  the miner loses only a  negligible amount of payout,  and the pool loses an entire block.</p> <p>While this strategy has proven  very popular in recent years,  it is unlikely to survive as  a viable  business model --  and in fact  most FPPS pools offer other  services to offset their  (predictable)  losses.</p>"},{"location":"pow/understand-the-terms/#pay-per-last-n-shares","title":"Pay-per-Last-N-Shares","text":"<p>This is an alternative pool strategy,   abbreviated as PPLNS with variations  like SPLNS. In this payout strategy, risk  is shared amongst all miners   in the pool. The miners get paid when the  pool mines a block, and  the payout is based  on their recent shares.</p> <p>If there is block withholding  (intentional or otherwise)  every miner in the pool  suffers, finding that their  luck measure becomes  persistently bad. For this reason, most miners  prefer FPPS pools, especially  if they can negotiate a low  (or no) FPPS fee.</p>"},{"location":"pow/understand-the-terms/#solo","title":"Solo","text":"<p>Because of the requirement  for stratum servers  and the complexity of  block propagation, some  pools offer  a solo mode. In this strategy, risk  is owned entirely by  each miner, they either  mine blocks or they don't. The pool operator is paid  a fee for providing  a stratum service   alongside well-peered  full nodes for block  propagation.</p> <p>Importantly, if a miner  is using a pool for solo  mining, they are entirely  dependent on that pool  for efficient worker management  (that is, coordinating   work amongst a fleet of miners),  as well as for propagating  blocks. And because the miner owns  all of the risk, using a  pool for solo mining  is only viable for those  that lack the engineering  resources to manage  stratum servers and   full nodes. Otherwise, solo mining  is best done, well, solo --  as in, run your own  stratum server and full node.</p>"},{"location":"pow/appendix/asicboost/","title":"Appendix 2: ASICBoost","text":"<p>Are there any unrealized ASICBoost-like optimizations one could find in existing miners (perhaps in a solo-mining configuration not bound by stratum, such as with custom firmware)?</p>"},{"location":"pow/appendix/asicboost/#what-is-asicboost","title":"What is ASICBoost?","text":"<p>From the original whitepaper: \u201cAsicBoost [sic] is a method to speed up Bitcoin mining by a factor of approximately 20%. The performance gain is achieved through a high\u00adlevel optimization of the Bitcoin mining algorithm which allows for drastic reduction in gate count on the mining chip.\u201d</p> <p>In simpler terms, ASICBoost is an optimization based on the insight that the 80-byte block-header is divided into two chunks when computing a SHA-256 hash (a Bitcoin block hash is a double SHA-256 of the 80-byte block-header). The SHA-256 hash function uses 64-byte chunks of the message to hash, and processes each chunk into an expander function, and finally into a compressor function to produce the final 32-byte (256-bit) output.</p> <p>From a SHA-256 perspective, here is how a block-header will be chunked:</p> <p> </p> <p>When iterating on the Nonce, nothing in Chunk 1 would change. Once the Nonce in Chunk 2 is exhausted, the extranonce field in the coinbase will increment, requiring a new Merkle Root and a new Chunk 1.</p> <p>In pooled mining, there are multiple extranonce fields in the coinbase, typically:</p> <ul> <li>extranonce1 \u2013 a unique value between the stratum server and the miner; this will not change by the miner but is set by the pool itself (unique each miner)</li> <li>extranonce2 \u2013 an additional field (immediately after extranonce1) that is incremented by the miner when it exhausts the nonce space</li> </ul> <p>A \u201ctraditional mining loop\u201d follows this exact approach, an outer-loop that modifies Chunk 1, and an inner-loop that modifies Chunk 2. The \u201cASICBoost loop\u201d flips this approach such that multiple Chunk 1 values can be used for each Nonce (each Chunk 2); effectively eliminating one of the expander functions that would be required in the traditional loops (see the research paper for details).</p> <p>The goal is to find Chunk 1 \u201ccollisions\u201d (that is, different values of Chunk 1 that do not effect the last 4-bytes of the Merkle Root, which is part of Chunk 2).</p> <p>The theoretic performance improvement is up to 25% (removing one of the expander functions); and the more Chunk 1 collisions one can find the better the gains. From the original paper:</p> <p></p>"},{"location":"pow/appendix/asicboost/#overt-asicboost","title":"Overt ASICBoost","text":"<p>In practice, the most efficient (and simplest) way to take advantage of ASICBoost is to use the available bits within the Version field of the block-header. This method is known as \u201covert\u201d because it\u2019d be obvious that the Version bits were used (effectively this extra-nonce space, but done in Chunk 1 via an \u201cASICBoost loop\u201d). And ever since BIP9, much of the Version header is available for use in mining.</p> <p>Importantly, this can be done in software on GPUs and FPGAs, but for ASICs require a specific chip design, which modern ASICs have already implemented.</p>"},{"location":"pow/appendix/asicboost/#covert-asicboost","title":"Covert ASICBoost","text":"<p>The only other part of the block-header from Chunk 1 that can be modified is the Merkle Root itself, and in order to find collisions one would need Merkle Roots that differed in the first 28-bytes but shared the last 4-bytes (which is part of Chunk 2). This method is known as \u201ccovert\u201d because it\u2019s nearly impossible to detect, because in practice it would be indistinguishable from normal Merkle tree rolling that one would see in the \u201ctraditional mining loop\u201d (that is, changing the extranonce2).</p> <p>It may seem difficult to find collisions, 4-bytes is 32-bits, thus 2^32 of brute force hashing, but due to the birthday paradox we can find collisions in <code>sqrt(2^32)</code>. Thus within 65K brute force attempts we can find 4-byte collisions. In other words, we don\u2019t need a specific 4-bytes, we just need as many 4-byte collisions as we can find.</p> <p>Discovering Merkle Root collisions can be done by modifying the transactions, as well as by re-ordering transactions. Interestingly, this approach would be compute-heavy with larger blocks (as one re-computes the entire Merke tree for each potential collision), but would be very efficient in an empty block (where the Merkle tree is just the coinbase txn id).</p> <p>While empty blocks are extremely rare in mainnet, they do happen (e.g., block 818960 from AntPool). These usually happen when a pool mines two consecutive blocks in a row; arguably because the pool\u2019s stratum server is still waiting on a new block template. But it\u2019s worth noting that Covert ASICBoost benefits from empty blocks in exactly this situation, as it will take longer to build new candidate block templates using Covert ASICBoost than in a traditional mining loop.</p>"},{"location":"pow/appendix/asicboost/#segwit-is-incompatible-with-covert-asicboost","title":"SegWit is incompatible with Covert ASICBoost","text":"<p>SegWit (segregated witness, see BIP141) presents challenges for Covert ASICBoost, ultimately adding  computational difficulty to any block template with even a single SegWit transaction. This is because the coinbase transaction contains a second Merkle Root (similar to the Merkle Root in the header, but the second Merkle Root is based on the full transaction data, including witness data). In other words, finding a collision in Chunk 1 is effectively impossible to do in a computationally efficient way.</p> <p></p>"},{"location":"pow/appendix/asicboost/#why-bother-with-covert-asicboost","title":"Why bother with Covert ASICBoost?","text":"<p>Obviously, Overt ASICBoost is vastly simpler and more efficient (also compatible with SegWit). There is no need to detect collisions, no preference for smaller blocks, but it would be difficult to hide. The only advantage to Covert ASICBoost is that it could give a competitive advantage to a pool who could activate it while other pools could not (an insider advantage).</p> <p>As far-fetched as that sounds, this is exactly what bitmain (allegedly) did with AntPool, advertising a 20-30% hashrate improvement when certain bitmain miners were using AntPool. While they denied using Covert ASICBoost to gain a competitive advantage for AntPool, all evidence points to them doing this (such as increase hashrate, patents, increase in empty blocks, reluctance to support SegWit, etc). Oddly, bitmain denied the allegations while simultaneously admitting that they had developed exactly this capability. This was in the midst of the so-called Blocksize War, where tensions between miners and core developers were high.</p> <p>After considerable complaints and outcry from the Bitcoin community, bitmain began offering Overt ASICBoost firmware, which has now become standard on all miners (not just bitmain).</p>"},{"location":"pow/appendix/asicboost/#segwit-and-overt-asicboost-win-in-the-end","title":"SegWit and Overt ASICBoost Win in the End","text":"<p>SegWit was activated in 2017 and saw significant adoption in the following years, and today accounts for almost all Bitcoin transactions. Not surprisingly, the adoption of Overt ASICBoost followed a very similar curve as SegWit, and now accounts for nearly 100% of Bitcoin hashrate.</p> <p></p>"},{"location":"pow/appendix/asicboost/#are-there-any-unrealized-asicboost-like-opportunities","title":"Are there any unrealized ASICBoost-like opportunities?","text":"<p>Unfortunately, no.</p> <p>While there might be unrealized ASICBoost-like improvements in the SHA-256 ASIC design that have never been discovered, there is no known benefit that has not already been realized by Overt ASICBoost. That is, even if one was solo-mining with custom firmware (and not bound by stratum nor stock firmware) there are no known optimizations that Overt ASICBoost is not already taking advantage of. The Version header offers ample room for realizing the benefit on the existing silicon, and even if additional Merkle Root collisions could benefit, the dominance of SegWit has completely closed that door (unless one wanted to filter out all SegWit transactions while mining, but this is a dead-end as block subsidies will continue to halve and fees will become the primary driver of hashrate).</p>"},{"location":"pow/appendix/asicboost/#references","title":"References","text":"<ul> <li>AsicBoost: A Speedup for Bitcoin Mining</li> <li>The relation between Segwit and AsicBoost, covert and overt</li> <li>What Is ASICBoost?</li> <li>Diagram of a Bitcoin block: Covert versus overt AsicBoost</li> <li>Overview of the covert AsicBoost allegation</li> <li>Empty Block Data by Mining Pool</li> </ul>"},{"location":"pow/appendix/energy-money/","title":"Appendix 1: Energy Money","text":"<p>Energy money is the idea that currency should represent real work or energy expended, serving as a store of human effort rather than an abstract token. Buckminster Fuller described money as a proxy for \"energy slaves\" -- the mechanical equivalent of human labor, where wealth measures the energy harnessed to achieve tasks. This concept ties money to physical reality, making it scarce and honest, unlike fiat systems detached from effort.</p>"},{"location":"pow/appendix/energy-money/#historical-and-theoretical-context","title":"Historical and Theoretical Context","text":"<p>Throughout history, money has evolved from direct energy exchanges (barter as labor swap) to commodities like gold, which required energy to extract and refine. Fuller saw this as money's core: a claim on future work, backed by past energy invested. Fiat money breaks this link, enabling unlimited creation without effort, leading to inflation, devaluation, broken markets, and bureaucracy. Energy money restores integrity, aligning currency with thermodynamics -- as you can't fake work.</p>"},{"location":"pow/appendix/energy-money/#bitcoins-proof-of-work-as-energy-money","title":"Bitcoin's Proof-of-Work as Energy Money","text":"<p>Bitcoin's proof-of-work (PoW) embodies energy money: miners expend electricity (via ASICs computing hashes) to add new blocks, directly tying value to energy used. Each Satoshi represents joules burned, creating digital scarcity akin to gold but verifiable and divisible. Difficulty adjustments ensure consistent energy input (~10 minutes per block), maintaining the energy backing. Fuller would see BTC as \"digital energy slaves\" -- stored computational work, unforgeable and global.</p>"},{"location":"pow/appendix/energy-money/#uniqueness-of-bitcoins-transaction-model","title":"Uniqueness of Bitcoin's Transaction Model","text":"<p>Bitcoin revolutionizes money by requiring work not just to create, but to settle transactions. Fees, paid in BTC (itself energy-backed), embed an energy cost in every transfer -- miners validate via PoW chain, ensuring energy backs every transaction. An unspent transaction carries an implicit promise of future energy needed to spend.</p> <p>This is unprecedented: gold transactions are free post-mining, fiat costs nothing to create or move. In Bitcoin, spending proves commitment, aligning with energy money. The chain's cumulative work (difficulty * blocks) secures history, making transactions energy-proofed. No other system demands ongoing work for use, making Bitcoin the first true energy money.</p>"},{"location":"pow/appendix/energy-money/#implications-for-the-future","title":"Implications for the Future","text":"<p>Bitcoin as energy money implies a harder, fairer system: zero inflation, merit-based (energy = value), and global (no borders for work). It will continue to drive energy efficiency, as miners seek cheaper and cheaper power, spurring innovation. Challenges like energy debates persist, but the model proves sustainable -- proof-of-work backs wealth.</p> <p>Bitcoin's PoW realizes energy money as Fuller envisioned: currency as stored work, now digital and transactable (final international settlement) only through future work. This breakthrough redefines money, embedding energy in creation and use -- a sovereign path for those who grasp its depth. </p>"},{"location":"pow/sovereignty/","title":"Sovereignty Levels","text":"<p>If you're sovereign in saving and currency -- controlling your keys and transacting peer-to-peer with no intermediaries -- but you do not participate in mining (proof-of-work hashing), then you are still trusting third parties to secure your wealth and process your transactions. </p>"},{"location":"pow/sovereignty/#bitcoins-promise","title":"Bitcoin's Promise","text":"<p>Bitcoin's proof-of-work hashing is a ruthless, zero-sum competition where miners vie to validate blocks, enforce the supply cap (securing your wealth from inflationary theft), prevent abuse like double-spends, all through sheer computational power. Without joining this fray, your sovereignty remains incomplete -- reliant on anonymous miners for finality and security. Recognize this gap to claim full sovereignty.</p> <p>You broadcast transactions via wallet software or block explorers, trusting miners to incorporate them into the blockchain. Absent your own hardware, the network's aggregate hash rate performs the work -- proving work at escalating difficulties, adjusting every 2016 blocks to maintain ~10-minute intervals, all while you stand outside the arena.</p>"},{"location":"pow/sovereignty/#dangers-of-passivity","title":"Dangers of Passivity","text":"<p>The Man in the Arena, Teddy Roosevelt</p> <p>It is not the critic who counts; not the man who points out how the strong man stumbles, or where the doer of deeds could have done them better. </p> <p>The credit belongs to the man who is actually in the arena, whose face is marred by dust and sweat and blood; who strives valiantly; who errs, who comes short again and again, because there is no effort without error and shortcoming; but who does actually strive to do the deeds; who knows great enthusiasms, the great devotions; who spends himself in a worthy cause; who at the best knows in the end the triumph of high achievement, and who at the worst, if he fails, at least fails while daring greatly, so that his place shall never be with those cold and timid souls who neither know victory nor defeat.</p> <p>Sovereignty in saving and currency falters without proof-of-work involvement, as miners hold the reins of transaction processing, network security, and signaling readiness for soft forks -- and if you're not in the game, what will you do, complain to the manager? In this adversarial zero-sum game, passivity invites exploitation.</p>"},{"location":"pow/sovereignty/level-1/","title":"Level 1: Network Reliance","text":"<p>What if one does nothing? In practice, the game theory behind Bitcoin should help avoid the specific risks for an existing sovereign. It is definitely superior to fiat, yet if we're being honest about true financial sovereignty, there are numerous disadvantages to this passive approach, for example,</p> <ul> <li> <p>Transaction Censorship: Miners, incentivized by fee markets or coerced by regulations, can orphan blocks or deprioritize your UTXOs -- leaving you powerless amid rising RBF (Replace-by-Fee) dynamics or MEV (Miner Extractable Value) strategies.</p> </li> <li> <p>Rule Enforcement Blind Spots: You presume adherence to consensus parameters like subsidy halvings or OP_RETURN limits, unverified by personal hashing. Subtle attacks -- inflation via covert bugs or contentious soft forks -- could erode your holdings undetected.</p> </li> <li> <p>Base-Layer Fragility: Self-custodial vaults and Lightning channels depend on miners for anchoring and dispute resolution. Pool centralization -- as demonstrated by China's 2021 mining ban dispersing &gt;50% of hash rate -- amplifies systemic risks, potentially enabling reorgs and 51% attacks.</p> </li> </ul> <p>Ultimately, such third-party trust replicates fiat's pitfalls.  True sovereignty lies in wielding hash power yourself.</p> <p>Hashing is Why Bitcoin is Superior to Gold</p> <p>There are many disadvantages to gold, evidenced by the fact that gold inevitably produced central banks and fiat money. And thus it remains to be seen if \"digital gold\" can escape that same fate. But there is a critical and underlooked difference between Bitcoin and gold -- Bitcoin requires proof-of-work for both issuance and transaction settlement, gold only for issuance.</p> <p>Think about it. Transacting in gold requires no work and is the weak point that led to gold's downfall. Try that same strategy with Bitcoin, proof-of-work hashing, despite the ugliness of the game, prevents an equivalent Nixon Shock with Bitcoin. Bureaucrats and politicians have no power over Bitcoin, only proof-of-work hashing has any power (actual measurable power).</p> <p>Because no other sound money required proof-of-work to transact, we tend to assume  conventional wisdom that mining is best avoided, exactly as it would be with gold. And if that were true it would be nice, that is, leave mining to the risk seekers. Truth is, mining -- proof-of-work hashing -- is required for any sense of sovereignty.</p>"},{"location":"pow/sovereignty/level-1/#entering-the-arena","title":"Entering the Arena","text":"<p>For any Bitcoiner advanced in saving and currency, the call to mining will only grow louder. You've mastered only two-thirds of Bitcoin sovereignty.</p> <p>Proverbs 10:4 cautions: \"A slack hand causes poverty, but the hand of the diligent makes rich.\" Awareness of third-party dependence marks wisdom; active hashing forges enduring prosperity.</p> <p>Take your first steps into the arena. Level 2 deploys an entry-level ASIC, syncing a full node, and directing hashes to a solo pool. This verifies Bitcoin's permissionless ethos, hones your edge in the competition, and fortifies the network against centralization.</p> <p>Don't expect any early wins (mined blocks). Even without any statistical hope of finding a block, you'll be in the dirt and grime of the game: real-time hash rate, hash-price indexes, modeling difficulty adjustments, and sourcing affordable ASICs. Proof-of-work hashing is not for everybody, but neither is sovereignty.</p>"},{"location":"pow/sovereignty/level-2/","title":"Level 2: Lottery Mining","text":"<p>Run a small ASIC miner pointed at a public solo stratum server, competing for entire block rewards with minuscule odds. This entry-level participation lets you contribute to Bitcoin's security, experience proof-of-work, and start reducing reliance on third-party miners -- bringing you towards true sovereignty.</p>"},{"location":"pow/sovereignty/level-2/#getting-started","title":"Getting Started","text":"<p>Choose a low-power, affordable ASIC miner suitable for home solo mining. The Bitaxe Gamma is a popular option; visit the official site at bitaxe.org or buy from bitaxeshop.com.</p> <p>Alternatives include:</p> <ul> <li>Avalon Nano 3S (~6 TH/s)</li> <li>NerdQaxe++ (~4.8 TH/s)</li> </ul> <p>Setup Instructions</p> <ol> <li>Power on the ASIC miner and connect to its initial interface (often via WiFi hotspot or USB).</li> <li>Configure network settings to join your home WiFi (or Ethernet).</li> <li>Enter solo pool details in the mining software/interface,<ol> <li>URL: <code>stratum+tcp://solo.ckpool.org:3333</code></li> <li>username: your Bitcoin address</li> </ol> </li> <li>Save changes, reboot the device, and monitor hashing performance via the built-in dashboard or pool stats.</li> </ol> <p>No full node required; the stratum server manages work templates and block submissions. Consider alternative solo pools such as <code>public-pool.io</code>.</p>"},{"location":"pow/sovereignty/level-2/#stratum-protocol","title":"Stratum Protocol","text":"<p>ASIC miners communicate block templates via the Stratum protocol, which replaced the outdated getwork in 2012. It uses a client-server model where your miner (client) connects to a stratum server to receive jobs and submit proof-of-work shares, all via JSON-RPC calls over TCP for low-latency efficiency.</p> <p>The disadvantages of Stratum are numerous. It's an ASCII protocol sending binary data in hex, and with inconsistent byte ordering. There's no encryption and it's vulnerable to man-in-the-middle atracks.</p> <p>While Stratum is criticized for closed development and displacing more open standards like <code>getblocktemplate</code>, it's a functional protocol -- all miners rely on it for its simplicity and efficiency, with no widespread shift in sight despite its flaws. Ultimately, it is how the ASIC chips themselves operate.</p> <p>Failures of Stratum V2</p> <p>Despite promises of decentralization and miner empowerment, Stratum V2 adoption remains near-zero years after launch. Miners prioritize reliability over untested and unnecessarily complicated features, exposing core devs' tendency to bikeshed while ignoring the grind of actual proof-of-work hashing. Sovereignty thrives on proven tools -- stick to V1 and push for real improvements through participation.</p>"},{"location":"pow/sovereignty/level-2/#probabilities-and-poisson","title":"Probabilities and Poisson","text":"<p>Bitcoin mining is like playing the ultimate cosmic lottery, where every hash is a ticket in a game ruled by Poisson distributions -- those quirky math models for rare, random events like shooting stars or your phone buzzing at 3 AM. Imagine events happening at an average rate but with wild timing: long stretches of nothing, then bam, a flurry out of nowhere. No memory, no patterns, just pure chance.</p> <p>Your hashes are the tickets, each scratching for that golden header whose sha256d beats the network target. The network difficulty clocks in at 126.27 trillion as of July 2025, making it insanely tough, and with a global hashrate humming at ~939 EH/s (that's 939 quintillion hashes per second!), your little 6 TH/s miner is basically whispering in a hurricane.</p> <p>Enter the Poisson distribution to crunch the numbers: your expected blocks (\u03bb) = (your hashrate / network hashrate) \u00d7 blocks per period. Over a year (~52,560 blocks), \u03bb is about 0.00007 for a Bitaxe -- tiny odds! Probability of zero blocks? Almost certain. Odds of snagging at least one? Roughly 0.007%, or 1 in 14,286 years. Talk about impossible dreams! But that's the thrill: epic dry spells build character, and if luck hits, it's jackpot city.</p> <p>Meanwhile, session shares at easier difficulties (say, 4 million) give mini-wins to track your grind, and the luck metric (found shares vs. expected) reveals the variance rollercoaster -- under 100% means you're hot, over means keep hashing and start praying. It's Bitcoin's chaotic heart: frustrating, exhilarating, and a reminder why those \"impossible\" odds keep sovereign miners plugged in, chasing that one-in-a-trillion glory.</p>"},{"location":"pow/sovereignty/level-2/#why-solo-mining","title":"Why Solo Mining?","text":"<p>Solo mining is the path to true sovereignty in proof-of-work hashing -- it keeps you independent, directly contributing to Bitcoin's decentralization without intermediaries. With solo mining, you avoid the pitfalls of centralized pools, enforcing rules and transaction validity on your (sovereign) terms, free from external control. </p> <p>Solo hashing decentralizes hashrate, combating pool dominance and enhancing network resilience. Even unrewarded, it affirms Bitcoin's permissionless truth -- bureaucrats can't fake the work, securing your sovereignty through participation.</p> <p>Mining pools undermine sovereignty: they centralize hashrate, creating single points of failure vulnerable to censorship, regulations, and collapse. Block withholding attacks exemplify the risk -- malicious miners submit shares for payouts but withhold valid blocks, sabotaging the pool's revenue while profiting. This erodes trust and highlights pools' fragility in an adversarial system.</p> <p>Ultimately, mining pools are not viable long-term businesses in a sound money economy. They thrive on fiat's easy money, subsidizing inefficiencies through cheap credit and inflation. In Bitcoin's hard money world, pool overhead (fees, operations) can't compete with solo efficiency; they'll dissolve as subsidies vanish, forcing hashrate back to sovereign individuals.</p> <p>Embrace solo mining: it affirms Bitcoin's permissionless ethos, combats centralization, and secures your wealth through real work. Outsourcing to pools exchanges sovereignty for illusory stability -- a fiat trap that Bitcoin rejects.</p> <p>Avoid FPPS and Mining Pools</p> <p>Full Pay Per Share (FPPS) pools promise steady payouts, but they trade sovereignty for scraps -- centralizing hashrate and exposing you to operator risks like withholding or censorship. Never join; True sovereignty means embracing variance, not selling your hashrate.</p> <p>Advance to Level 3: scale to a small farm, maintaining solo operations for steadier variance while upholding independence.</p>"},{"location":"pow/sovereignty/level-3/","title":"Level 3: Small Farms","text":"<p>A mining farm is a dedicated operation to produce and harvest hashrate -- transforming raw electricity into computational power that secures Bitcoin's network. With a mining farm, you convert energy into hashrate, enforcing Bitcoin's rules, and claiming a stake in the zero-sum game of proof-of-work hashing.</p>"},{"location":"pow/sovereignty/level-3/#getting-started","title":"Getting Started","text":"<p>Build a small farm with 5-20 large ASIC miners -- this could be shed or industrial garage -- targeting more than 50kW of power. Focus on high-efficiency models for a setup in a dedicated space with affordable power.</p> <p>Potential models (as of July 2025)</p> <ul> <li>Bitmain Antminer S21 (200 TH/s, 3500W)</li> <li>Canaan Avalon A15 (194 TH/s, 3600W)</li> <li>Auradine AD250 (250 TH/s, 3800W)</li> <li>Teraflux AH3880 (380 TH/s, 4500W hydro-cooled)</li> </ul> <p>These units require industrial-grade infrastructure; prioritize ventilation, noise mitigation, and stable power.</p> <p>Software for Farm Management</p> <p>Managing a small farm of ASICs demands custom software for monitoring and control -- avoid proprietary tools in favor of open-source scripts. Strictly avoid cloud-hosted solutions. Without custom scripts, handling multiple rigs becomes chaotic. Comsider the following features:</p> <ul> <li>miner config -- automatically set the stratum URL and user on each miner; set network information if needed.</li> <li>health checks -- track miner health, hashrate, and logs (via each miner's API).</li> <li>curtailment -- control the power mode. All miners can be put to sleep, and many support a low power mode for added efficiency.</li> </ul>"},{"location":"pow/sovereignty/level-3/#power-and-site-requirements","title":"Power and Site Requirements","text":"<p>Small farms move beyond toys -- large ASICs consume lots of power and produce extreme heat and noise, rendering offices and desktops unsuitable. Secure a dedicated space in a warehouse or a shed with commercial power and cooling.</p> <p>Key requirements:</p> <ul> <li>Power: Lock in low-cost electricity (under $0.05/kWh; seek regions like Texas or Iceland). Use high-efficiency PSUs and PDUs; monitor consumption to prevent overloads or skyrocketing bills.</li> <li>Cooling: Implement AC, exhaust systems, or immersion to maintain &lt;40\u00b0C; heat buildup kills efficiency and hardware.</li> <li>Site: Wire for 220V+ circuits, surge protection, and rack space. Noise (70-90 dB) needs isolation; comply with local regulations.</li> <li>Maintenance: Equip with dust filters, and safety measures like fire suppression; farms run hot, so plan for regular upkeep.</li> </ul> <p>Affordable power is the farm's lifeblood -- source it wisely to turn electricity into sustainable hashrate.</p>"},{"location":"pow/sovereignty/level-3/#why-small-farms","title":"Why Small Farms?","text":"<p>Small farms are the keys to your sovereignty -- scaled hashrate decentralizes Bitcoin. You're on a path to control block templates, prioritize transactions, and bolster resilience against attacks.</p> <p>Commit to your farm: it protects your assets through work (with neasurable hashrate as proof), and defies the fiat mindset (of debt slavery and control). A small mining farm is truly your path to sovereignty.</p> <p>Advance to Level 4 with your own atratum server (your own private pool).</p>"},{"location":"pow/sovereignty/level-4/","title":"Level 4: Sovereign Pool","text":"<p>Now that you have a dedicated space to run your mining farm, you'll want to run your own dedicated pool -- this ensures privacy as well, any found blocks will appear on the network through your full node, with no explicit evidence that your farm even exists.</p> <p>You'll run your own stratum server -- a private gateway for your farm's hashrate, pulling block templates from your dedicated full node and submitting blocks without any external trust. This eliminates public server dependencies, ensuring absolute control over your operations and deepening sovereignty by internalizing the entire hashing pipeline.</p>"},{"location":"pow/sovereignty/level-4/#setup","title":"Setup","text":"<p>Host your sovereign pool on a dedicated server running open-source stratum software, paired with a dedicated full node exclusively for this purpose.</p> <p>Requirements:</p> <ul> <li>Dedicated server -- a NUC (or equivalent) with 16+ GB of memory and at least 2 TB of storage (if needed, you can run a pruned node).</li> <li>Fast Internet connection.</li> <li>Bitcoin Knots</li> <li>Stratum server -- CKPool or public-pool or any trusted stratum server.</li> </ul> <p>There are bundled options such as Umbrel or Start9, either way you'll want to configure your node to be well-peered with lots of memory for <code>dbcache</code> to ensure fast block propagation.</p> <p>Once everything is running, you'll want to direct your miners to the server's stratum URL (e.g., <code>stratum+tcp://server-ip:3333</code>), either using your Bitcoin address as username, or configure that address in the stratum server config.</p>"},{"location":"pow/sovereignty/level-4/#monitoring-shares","title":"Monitoring Shares","text":"<p>Log high-difficulty shares to independently verify your farm's hashrate -- each share is a mini proof-of-work, proving miners are performing as expected without pool reliance.</p> <p>Enable share logging in your server's config (e.g., CKPool's sharelog option or public-pool's logging features); it records accepted/rejected shares, timestamps, and difficulties to files. You can parse these with custom scripts in Python to calculate effective hashrate, as well as actual shares vs. expected based on difficulty.</p> <p>This metric spots underperformers -- low share rates signal hardware issues, overheating, or config errors. Cross-reference with miner dashboards for diagnostics; consistent logging ensures your farm's health. Your share data is a gold mine of insights into your sovereign mining farm.</p>"},{"location":"pow/sovereignty/level-4/#testnet","title":"Testnet","text":"<p>Occasionally, and definitely prior to mainnet deployment, test your sovereign farm on Bitcoin testnet -- the sandbox chain to confirm block finding and broadcasting without stakes. It's vital for validating end-to-end farm integrity.</p> <p>Process: Spin up a testnet node (Bitcoin Knots -testnet mode), tie your stratum server to its RPC for templates/submissions. Route part of your farm to the server using a testnet address (a single ASIC will likely dominate testnet, and even a small farm will induce a testnet storm). Find lots of testnet blocks -- lower difficulty yields quicker results, testing template creation, share flow, block detection, and relay.</p> <p>Scan node logs for <code>submitblock</code> success and confirm on explorers. Mine a few blocks to iron out kinks. This proves reliability, safeguarding your sovereign chain.</p>"},{"location":"pow/sovereignty/level-4/#why-sovereign-pool","title":"Why Sovereign Pool?","text":"<p>A sovereign pool cements control -- you own the interface between farm and node, eliminating risks like downtime or manipulation. It enables template customization, fast block submission, and full hashrate transparency.</p> <p>FPPS pools defeat sovereignty; your pool keeps everything in-house, resisting attacks and centralization. In Bitcoin's ecosystem, this self-reliance scales sovereignty.</p> <p>Embrace it: full-stack hashing secures your wealth and the network through unyielding independence.</p> <p>At this scale, you will only have enough hashrate to find a block every 3-5 years. No easy task, but advance to Level 5 for enterprise scale.</p>"},{"location":"pow/sovereignty/level-5/","title":"Level 5: Enterprise Scale","text":"<p>Scale your mining farm to enterprise levels, pushing hashrate to find blocks every 2-3 months. This expansion turns your operation into a dominant force, converting massive energy into consistent hashrate, earning Bitcoin while maintaining full sovereignty over your proof-of-work hashrate.</p>"},{"location":"pow/sovereignty/level-5/#setup","title":"Setup","text":"<p>Expand your Level 4 farm with 50-100 large ASIC miners in an industrial container. Use the same efficient models as before, but deploy at volume.</p> <p>Requirements:</p> <ul> <li>Industrial site: data center or custom build with 1-2 MW power draw</li> <li>Low-cost electricity</li> <li>Dedicated full node: Bitcoin Knots</li> <li>Stratum server: CKPool or public-pool</li> <li>Container with cooling system with space for 50-100 ASIC miners, e.g., Avalon Box or check options from power-mining</li> </ul>"},{"location":"pow/sovereignty/level-5/#scaling","title":"Scaling","text":"<p>With only 100 ASIC miners, a single physical server (NUC) running a dedicated full node and stratum server should be sufficient; however, consider a backup server for fault tolerance. Each miner can support three stratum URLs, and it's recommended to configure them with a primary, backup, and tertiary backup, such as one of the hosted solo pools from Level 2.</p> <p>At 50 PH/s against ~935 EH/s network hashrate and 126.27T difficulty (July 2025), expect \u03bb \u2248 2.81 blocks/year (~ one every 4.3 months). Double to 100 PH/s for \u03bb \u2248 5.62 (~ every 2.2 months). Poisson variance adds unpredictability, averaging 2-3 months per block.</p> <p>Maximize uptime with automated maintenance, power redundancy, and custom scripts (e.g., Python for API monitoring) to oversee miners and detect issues swiftly.</p> <p>Repair Bench</p> <p>At this scale, you'll want a separate repair bench, along with a few miners ready to be deployed to replace any bad miners. There may be fan issues, power supply issues, control board issues, or the more costly hashboard issues.</p>"},{"location":"pow/sovereignty/level-5/#monitoring-shares","title":"Monitoring Shares","text":"<p>Continue logging high-difficulty shares to track farm health -- this will independently prove your 50-100 PH/s hashrate.</p> <p>Activate logging in your stratum config and set an appropriately high session difficulty (high enough to avoid massive data, low enough to reliably monitor miner hashrate); record shares, times, and difficulties. Analyze with Python scripts for effective hashrate (actual vs. expected).</p> <p>Most miner APIs also provide temperature, fan speed, estimated power usage, and other metrics worth tracking. You may want to leverage a time-series database (Prometheus or InfluxDB) and integrate with dashboarding tools (like Grafana).</p>"},{"location":"pow/sovereignty/level-5/#why-enterprise","title":"Why Enterprise?","text":"<p>Enterprise scaling yields a handful of blocks per year -- producing Bitcoin straight from your farm, free from KYC taint or exchange risks. These are pure sovereign blocks.</p> <p>Finding blocks every 2-3 months creates a steady sovereign supply, shielding against volatility and affirming independence in centralized finance's shadow. It's proof-of-work's zenith, forging energy into untouchable wealth, where you control what goes into the block (and what doesn't).</p> <p>Embrace it: enterprise scaling delivers consistent sovereign blocks, fortifying your control.</p> <p>Advance to Level 6 for industrial scale, finding blocks weekly or even daily.</p>"},{"location":"pow/sovereignty/level-6/","title":"Level 6: Industrial Scale","text":"<p>Industrial scale is any mining site with over 10 MW of power, deploying thousands of ASIC miners to achieve high hashrate for frequent blocks. These are typically organized in custom built containers housing hundreds of miners each, allowing modular growth, and requiring intensive power, cooling, and maintenance.</p> <p>At this stage, a mining site will directly impact Bitcoin's network difficulty, which will adjust to maintain ~10 minutes per block, no matter how much hashrate you bring online.</p>"},{"location":"pow/sovereignty/level-6/#setup","title":"Setup","text":"<p>Deploy multiple mining containers at a 10+ MW site, each with hundreds of ASIC miners (see Level 3). If we assume these miners are averaging 200 TH/s and 3500 W per unit, this yields ~2,857 miners with at least ~571 PH/s.</p> <p>Custom containers:</p> <ul> <li>Mineshop Mining Container (up to 168 S21 miners, advanced airflow)</li> <li>20 ft Mining Container (up to 240 miners)</li> <li>40 ft Mining Container (up to 300 miners)</li> <li>QuoteColo Custom Builds (700-miner units, 1.9MW load)</li> </ul> <p>Additional Requirements:</p> <ul> <li>Facilities: data centers or custom plants with 10+ MW capacity</li> <li>Multiple full nodes: Bitcoin Knots, at least 2 nodes, well-peered, with large <code>dbcache</code> for fast block propagation. You may also want to consider hosted multi-region nodes in strategic geo-locations for more efficient block propagation.</li> <li>Stratum server cluster: CKPool or public-pool, 3-5 servers for load balancing and fault tolerance.</li> <li>Staff: at this scale you will need full-time staff for maintenance, IT, electrical work, and security.</li> </ul>"},{"location":"pow/sovereignty/level-6/#power-and-scaling","title":"Power and Scaling","text":"<p>A 10 MW baseline supports ~2,857 miners at 3500W each. At ~571 PH/s (~935 EH/s network, 126.27T difficulty, July 2025), expect \u03bb \u2248 32 blocks/year (~1 every 11 days).</p> <p>This will scale linearly:</p> <ul> <li>10 MW site (~2,857 miners, ~571 PH/s) yields \u03bb \u2248 32 blocks/year (~1 every 11 days)</li> <li>50 MW site (~14,286 miners, ~2.86 EH/s) yields \u03bb \u2248 160 (~3 weekly)</li> <li>100 MW site (~28,571 miners, ~5.71 EH/s) yields \u03bb \u2248 320 (~6 weekly)</li> </ul> <p>Poisson variance means clusters or gaps; scale tightens it somewhat.</p> <p>Repair and Redundancy</p> <p>On-site repair centers with spares (up to 10% fleet) for hot swaps. Train teams for fan, PSU, control board, or hashboard fixes; downtime loses blocks.</p>"},{"location":"pow/sovereignty/level-6/#monitoring-shares","title":"Monitoring Shares","text":"<p>Log high-difficulty shares to verify farm health -- however at industrial scale we have industrial data demands, share volume is large and you may consider sampling or investing in large scale data solutions. Consider time-series databases such as Prometheus or InfluxDB, and Grafana for visualization.</p> <p>At this scale, large data solutions will be invaluable to troubleshoot and diagnose issues as they arise.</p>"},{"location":"pow/sovereignty/level-6/#why-industrial-scale","title":"Why Industrial Scale?","text":"<p>Industrial scale guarantees blocks -- weekly/daily sovereign blocks from your site(s), untainted. You are effectively the sovereign of your own transactions, making it impossible for anyone to censor your financial transactions (as you can define block templates in a guaranteed block).</p> <p>This builds a sovereign reserve, defying volatility and all central planners. As your hashrate raises network difficulty, it hardens Bitcoin while rewarding efficiency.</p> <p>Embrace it: industrial hashing forges wealth through dominance.</p> <p>Advance to Level 7 as a pioneer into the inevitable future of proof-of-work hashing.</p>"},{"location":"pow/sovereignty/level-7/","title":"Level 7: Inevitable Future","text":"<p>Bitcoin's hashrate landscape is a brutal arena where only the most innovative survive. With 144 blocks per day, there could only be 50-thousand small farm sovereign miners each finding one block per year, or 4-thousand enterprise farms finding a block per month, or only 144 industrial farms finding a block daily. </p> <p>In the expected Pareto distribution, it becomes even more harsh: </p> <ul> <li>only 13-thousand small farms find at least one block per year</li> <li>only 1-thousand enterprise farms find a block monthly</li> <li>hyper elite 30-40 industrial farms find blocks approximately daily</li> </ul> <p>The long-tail, potentially millions, would be reduced to lottery miners, yet in aggregate finding blocks daily, millions of hobbyists equal to only one of the industrial farms.</p> <p>The competition is savage. Staying still will inevitably result in decline from that steep distribution; even an industrial farm will go from finding blocks daily, to monthly after a year or so of stagnation. This zero-sum grind demands constant innovation; the developments below are inevitable, waiting for pioneers to claim their edge in this never-ending race.</p>"},{"location":"pow/sovereignty/level-7/#open-source-stratum-servers","title":"Open Source Stratum Servers","text":"<p>Open-source stratum servers will advance exactly as open source web servers became ubiquitous. Community efforts will fix scalability gaps, reducing central points of failure. These will evolve to handle massive farms, fostering a more resilient hashing network as contributors refine the code.</p> <ul> <li>CKPool</li> <li>public-pool</li> </ul>"},{"location":"pow/sovereignty/level-7/#custom-firmware","title":"Custom Firmware","text":"<p>Open-source custom firmware will become essential, boosting efficiency through adaptive tuning as well as environment specific tuning on future ASICs. This will be as ubiquitous as Linux.</p> <ul> <li>ESP-miner</li> </ul>"},{"location":"pow/sovereignty/level-7/#commoditized-asics","title":"Commoditized ASICs","text":"<p>ASICs will commoditize as manufacturing spreads, with open designs driving costs down. Supply chain tangles will unwind through shared specs and local fabs. This trend will saturate the market with hashrate, breaking monopolies and enabling rapid sovereign scaling.</p>"},{"location":"pow/sovereignty/level-7/#open-source-hardware","title":"Open Source Hardware","text":"<p>Open-source hardware like Bitaxe will scale to efficient ASIC designs, moving from prototypes to deployable blueprints. Community repos will solve production hurdles, creating adaptable rigs for any setup. This will dismantle proprietary barriers, sparking a surge in sovereign innovation.</p> <ul> <li>skot/bitaxe: Open source ASIC Bitcoin miner</li> </ul>"},{"location":"pow/sovereignty/level-7/#custom-miners","title":"Custom Miners","text":"<p>Highly efficient custom miners for large deployments will reach 10 J/TH, blending open firmware and hardware with dense cooling. The ecosystem will overcome integration challenges, halving energy use. As designs circulate, these will define industrial sovereignty, rewarding those who refine them.</p>"},{"location":"pow/sovereignty/level-7/#ubiquitous-asics-and-novel-deployments","title":"Ubiquitous ASICs and Novel Deployments","text":"<p>ASICs will embed in devices like heaters or EVs, hashing during idle time. Integration delays will end with open hardware, making mining pervasive. This will turn infrastructure into sovereign nodes, bolstering Bitcoin's distributed strength.</p> <ul> <li>Next Wave Of Mining Efficiency</li> </ul>"},{"location":"pow/sovereignty/level-7/#off-grid-deployments","title":"Off-Grid Deployments","text":"<p>Off-grid mining will tap stranded energy, converting waste gas to hashrate without grid ties. Logistics will be conquered by open-source controls for remote ops. This will profit from untapped resources, proving adaptability in harsh environments.</p> <ul> <li>NYDIG - Digital Flare Mitigation</li> </ul>"},{"location":"pow/sovereignty/level-7/#sophisticated-demand-response","title":"Sophisticated Demand Response","text":"<p>Sophisticated demand response will balance grids, with miners adjusting for peak payments. Contracts on Lightning will automate this, syncing with stratum for real-time shifts. Mining will become a market stabilizer, adding revenue streams to power grids and related operations.</p> <ul> <li>ERCOT Demamd Response</li> </ul>"},{"location":"pow/sovereignty/level-7/#next-gen-nuclear","title":"Next Gen Nuclear","text":"<p>Next-gen nuclear will synergize with Bitcoin mining for grid stability -- reactors deliver constant output, while ASICs absorb demand fluctuations as adjustable loads, curtailing during peaks to keep balance. This pairing will enable reliable baseload power, with mining as the flexible buffer for nuclear's steady flow.</p> <ul> <li>The Duke Study, Bitcoin Mining, &amp; the Future of Grid Stability </li> </ul> <p>These developments are inevitable -- the problems will be solved, reshaping Bitcoin's proof-of-work zero-sum arena. In a world of dense energy progress, sovereignty belongs to those who adapt and innovate.</p>"},{"location":"saving/","title":"Saving","text":"<p>There is a lot to learn to even attempt  to answer the question \"is Bitcoin true?\". And in general, the best we have, is that  we can't prove it false. Maybe one day we will, and we'll realize   there was a fundamental flaw that everyone missed. But until then, Bitcoin remains as true as anything we  can know, making it the hardest and  most secure money in the world.</p> <p>Ready to get started? But where to start?</p> <p>Often times those curious about Bitcoin  will find themselves overwhelmed by the  many passionate and seemingly fanatic  Bitcoiners. These zealots (myself included) will overwhelm anyone new to Bitcoin  with a firehose of information, including  hard-learned lessons and important  dangers. Or we'll talk someone's ear off about   Austrian Economics  or how fiat money is indefensibly immoral. And yet, due to the   curse of knowledge  people new to Bitcoin will and should start   exactly where most experienced  Bitcoiners tell them not to (i.e., keeping Bitcoin on an online exchange account). The truth is, most all Bitcoiners started exactly this same way,  and made many mistakes along the way.</p> <p>Inspired by the very excellent   Zero Trust System  from   Arman the Parman,  I have outlined a series of levels to guide those  new (and those experienced) towards   safe self custody suitable for all levels of savings  (from pocket change to generational wealth preservation). The early levels start simple and can serve as a guide  to avoid the many pitfalls and scams those new  to Bitcoin will likely encounter.</p> <p>As you progress, you'll also be learning practical  knowledge that will allow you to safely and  confidentaly store larger and larger sums of wealth. At the higher levels, the extreme sense of ownership  and the knowledge gained will burn away the  initial skepticism that many start with. In fact, I'd recommend to start with skepticism  and keep in mind the following maxim,</p> <p>The more one learns about Bitcoin, the more one supports Bitcoin.</p> <p>Below is an overview of the levels along with   a rough guide on the amount of wealth  appropriate at each level (that is,  how much a reasonable person should  feel comfortable with at each level).</p>"},{"location":"saving/#sovereignty-levels","title":"Sovereignty Levels","text":"<ul> <li>Level 1: Getting Started -- Save Bitcoin on a reputable exchange (a small amount that you can risk losing).</li> <li>Level 2: Your Keys -- Save Bitcoin on a home computer + smartphone (a small amount that you can risk losing).</li> <li>Level 3: Dedicated Hardware -- Save Bitcoin on a dedicated offline device (as much as you'd be comfortable hiding under your mattress).</li> <li>Level 4: Full Node Plus -- Save Bitcoin and run your own node (as much as you'd be comfortable hiding under your mattress).</li> <li>Level 5: Airgap Quarantine -- Save Bitcoin with greater security than any bank ever could (as much as you'd be comfortable hiding under your mattress).</li> <li>Level 6: Metal Backup -- Save Bitcoin with metal backups that can survive a house fire and/or natural disaster (as much as your house is worth).</li> </ul>"},{"location":"saving/#wealth-preservation","title":"Wealth Preservation","text":"<p>Before advancing to higher levels of  self custody (self sovereignty)  it is recommended to first focus on  Wealth Preservation  strategies,  because at this level you should also  be thinking about  your children, inheritance planning,  and physical security.</p> <p>Level 7 and above are use-case specific  and not as universally relevant as  the prior levels.  At this point you can already store any  amount of wealth  (even extreme amounts of wealth)  with more security than any bank or  institutional custody system could ever offer.</p>"},{"location":"saving/#advanced-sovereignty-levels","title":"Advanced Sovereignty Levels","text":"<ul> <li>Level 7: Multisig Protocols -- Protocols to manage the complexity of multi-signature keys.</li> <li>Level 8: DMZs -- Keep your full-node and transaction-manager completely safe from untrusted devices on your network.</li> <li>Level 9: Fault Tolerance -- Remove all \"single points of compromise\", in other words, an attacker who compromised a signing device would have no access to your wealth.</li> <li>Level 10: Fail-safes -- Require fully redundant networks with explicit verification of cryptographic signatures.</li> <li>Level 11: Countermeasures -- Electronic countermeasures to safeguard against \"NSA-level\" threats.</li> <li>Level 12: Off-grid -- Receive-only (e.g., satellite) nodes with offline transaction management requiring remote and geographically distributed key signing and redundant online drop-points (points to transmit).</li> </ul> <p>Before you begin this journey and question everything you thought you knew about money,  you may want to first  understand the terms.</p>"},{"location":"saving/understand-the-terms/","title":"Understand the Terms","text":""},{"location":"saving/understand-the-terms/#understand-the-terms","title":"Understand the Terms","text":"<p>Bitcoin is unlike anything that has ever existed.</p> <p>Bitcoin is unlike any money the world has seen.  It is unlike any technology or network --  there's really nothing like it in history. As a result, any attempt at explaining Bitcoin  will rely either on imperfect metaphors, or novel technical terms. For example, the word custody is a misnomer,  an anachronism from a simpler time when banks would custody your gold.</p> <p>In reality, there are no actual coins to custody. Bitcoin is pure information;   information copied publicly in a cryptographic ledger. Everyone can have a copy of the ledger,  and everyone can validate that the ledger is correct. And similar to how the Internet empowered individuals to share ideas with the world,  Bitcoin empowers individuals to custody their wealth,  and to do so in ways far more secure than any bank ever could.</p> <p>And because Bitcoin is money,   there are many traditional metaphors  (such as wallets, coins, and addresses)  that can be useful,   but at the same time may lead to a great deal of confusion. Bitcoin is in a category all to itself  -- the physical limitations of custody, wallets, coins, and addresses simply don't apply to Bitcoin. And thus to custody your Bitcoin, means something very different than anything you've thought about before Bitcoin.</p> <p>We will describe these imperfect metaphors  and attempt to demystify them, and then  discuss the more accurate technical concepts  necessary for understanding the truth of Bitcoin  and what it really means to custody your Bitcoin.</p>"},{"location":"saving/understand-the-terms/#wallets","title":"Wallets","text":"<p>In Bitcoin, the word wallet is a misnomer,  possibly the most confusing metaphor in Bitcoin. The term wallet in Bitcoin can mean different things. It can refer to a collection of private keys,   or invoice addresses,  or UTXO sets,  or as the hardware or software to manage any of the above. But a Bitcoin wallet is most certainly NOT   a collection of your Bitcoin.</p> <p>There is no Bitcoin stored in a Bitcoin wallet.</p> <p>The traditional meaning of the word wallet simply doesn't apply to Bitcoin.  The word wallet was used in Bitcoin because the original Bitcoin core client app would store private keys in a file named <code>wallet.dat</code>.</p>"},{"location":"saving/understand-the-terms/#hot-wallet","title":"Hot Wallet","text":"<p>A hot wallet refers to any software or hardware that stores your private keys in a device connected to the Internet,   allowing you to send and receive Bitcoin. If a private key is directly accessible to an online device, this makes it hot.</p> <p>E.g., if you have a Bitcoin wallet app on your phone that can send and receive Bitcoin,   this is referred to as a hot wallet.</p>"},{"location":"saving/understand-the-terms/#cold-storage-wallet","title":"Cold Storage Wallet","text":"<p>If you store private keys offline,   in a device never connected to the Internet,   this is referred to as cold storage. There are obvious security benefits,  and cold storage is the recommended approach   for safe custody of your Bitcoin.</p> <p>There are many cold storage practices,   and they follow a standard pattern,</p> <ol> <li>private keys are stored offline (e.g., in an air-gapped device).</li> <li>public keys can be stored in an Internet-connected device.</li> <li>for receiving Bitcoin,<ol> <li>the public key can generate receive addresses, and </li> <li>verify transactions.</li> </ol> </li> <li>for sending Bitcoin,<ol> <li>the public key can generate an unsigned transaction, then</li> <li>the unsigned transaction is transfered to the air-gapped device, then</li> <li>the transaction is signed on the air-gapped device, then</li> <li>the signed transaction is transfered to an Internet-connected device, and then broadcast to the network.</li> </ol> </li> </ol> <p>There are many variations of cold storage but they all adhere to the above pattern;  sometimes with additional steps meant to increase security.  </p> <p>E.g., using a seed signer, a private key is never stored in any electronic device, air-gapped or otherwise. Instead the key is generated from the seed phrase and used on a signing device only when needed (and discarded immediately afterwards). </p>"},{"location":"saving/understand-the-terms/#wallets-demystified","title":"Wallets Demystified","text":"<p>A Bitcion wallet is not a collection of your Bitcoin. Rather, a Bitcoin wallet is any device or procedure used   to manage your private keys (necessary to send  and receive Bitcoin).</p>"},{"location":"saving/understand-the-terms/#keys","title":"Keys","text":"<p>Not your keys, not your Bitcoin.</p> <p>It is your Bitcoin keys that you custody. Specifically, you custody your private keys,  usually by storing the seed phrase   that can generate your private keys and  their corresponding public keys.</p> <p>If you're unfamiliar with these concepts  (public key cryptography  and  elliptic-curve cryptography),  the purpose is that public keys  can create encrypted information that can  only be decrypted by the corresponding  private keys. Or in the case of Bitcoin, public keys  can create transaction outputs that   can only be spent by the corresponding  private keys. In other words, you can receive Bitcoin  through your public keys  (or rather, addresses generated by your public keys),  and you can spend Bitcoin by using  your private keys.</p> <p>A seed phrase is a list of words  that encode a 256-bit number  that can derive  private keys and their corresponding public keys,  as well as the addresses that can  be used in transactions. In other words, it is a phrase (typically 24 words)  that can be used to recover your Bitcoin. This process of deriving keys and addresses from a seed phrase  is knows as   Hierarchical Deterministic (HD) Wallets.</p>"},{"location":"saving/understand-the-terms/#hierarchical-determinism","title":"Hierarchical Determinism","text":"<p>In practice,  Hierarchical Deterministic (HD) Wallets  allow you to save a single seed phrase  and use that seed to derive as many keys and addresses as you need. This could be as simple as a single account with a single key  that you use only once, or this could be millions of  accounts used by an institution, such that each account  can generate its own keys and addresses.</p> Brief History <p>Early version of Bitcoin generated private keys and addresses randomly, requiring users to backup all of the private keys associated with any of the addresses they had used.</p> <p>HD wallets on the other hand can generate an unlimited number of private keys and addresses, or rather, an unlimited number of accounts, each with their own keys and address space. And all of those accounts, keys, and addresses can be derived from a single seed phrase.</p>"},{"location":"saving/understand-the-terms/#keys-demystified","title":"Keys Demystified","text":"<p>Public keys are used to receive Bitcoin, and private keys  are used to spend Bitcoin (by signing a transaction). A seed phrase can be backed up and is used to generate  public and private keys in a predictable (deterministic) way,  such that your seed phrase is the most critical piece  of information to secure.</p>"},{"location":"saving/understand-the-terms/#addresses","title":"Addresses","text":"<p>A Bitcoin address is a misnomer,  and when not understood properly can lead to a great deal of confusion. The word address implies your Bitcoin is located at this address. In reality, there is no address where your Bitcoin is located. There are only transactions, which have inputs and outputs, and the outputs are either spent or unspent.</p> <p>Transaction inputs are created from the unspent outputs of a previous transaction. And these ouputs are created using an address. This makes the unspent transaction outputs spendable only by   the corresponding private key associated with the address.</p> <p>There are two types of addresses, receive addresses  (also known as invoice addresses) and change addresses.</p>"},{"location":"saving/understand-the-terms/#invoice-addresses","title":"Invoice Addresses","text":"<p>Imagine you receive <code>0.006 Bitcoin</code> to an address in your wallet.  This will create a transaction with an output using your address.</p> <pre><code>flowchart LR\n  subgraph TX-1\n    direction LR\n    subgraph in-1[in]\n        direction LR\n        a[0.006 BTC]\n    end\n    subgraph out-1[out]\n        direction LR\n        b[0.006 BTC]\n    end\n  end\n  a --&gt; b</code></pre> <p>Now imagine that you send <code>0.001 Bitcoin</code> to someone else (to an invoice address they sent you).</p> <p>It is tempting to think your original address now has 0.005 Bitcoin,   but in reality your original address has nothing.   The original transaction output is spent.</p> <p>When you send the 0.001 Bitcoin,  this will create a new transaction with two outputs:</p> <pre><code>flowchart LR\n  subgraph TX-1\n    direction RL\n    subgraph in-1[in]\n        direction RL\n        a[0.006 BTC]\n    end\n    subgraph out-1[out]\n        direction RL\n        b[0.006 BTC]\n    end\n  end\n  subgraph TX-2\n    direction TB\n    subgraph in-2[in]\n        direction RL\n        c[0.006 BTC]\n    end\n    subgraph out-2[out]\n        direction BT\n        d[0.001 BTC]\n    end\n    subgraph out-2a[out]\n        direction BT\n        e[0.005 BTC]\n    end\n  end\n  a --&gt; b\n  in-2 --&gt; out-2\n  in-2 --&gt; out-2a\n  b --&gt; in-2</code></pre> <p>One output has <code>0.001 Bitcoin</code>, and another with <code>0.005 Bitcoin</code>   (for simplicity, this is ignoring transaction fees).</p> <p>Your private key can access the output with <code>0.005 Bitcoin</code>,  and someone else has the private key to access the output with <code>0.001 Bitcoin</code>. The output at <code>0.005 Bitcoin</code> uses a change address. The original transaction output of 0.006 Bitcoin is already spent,  and your Bitcoin is only available in the new unspent transaction outputs.</p> <p>These unspent transaction ouputs are known as UTXOs (see below).</p>"},{"location":"saving/understand-the-terms/#change-addresses","title":"Change Addresses","text":"<p>Here is a  real transaction  where someone spent <code>0.001 Bitcoin</code> from a previous  UTXO address that contained <code>0.006 Bitcoin</code>. In addition to a transaction fee of <code>0.00007718 Bitcoin</code>,  there was <code>0.00492282 Bitcoin</code> sent to a change address.</p> <p>Every invoice address has a corresponding change address,  which as the name implies, is the change of the spent  transaction output.</p>"},{"location":"saving/understand-the-terms/#addresses-demystified","title":"Addresses Demystified","text":"<p>An address is not a location where Bitcoin is stored,   but is a number used to generate a transaction output (see UTXOs below). An invoice address (aka receive address),   is what you would use to receive Bitcoin. And when you spend Bitcoin (from an unspent transaction), any remainder  will use a change address.</p>"},{"location":"saving/understand-the-terms/#transactions","title":"Transactions","text":"<p>Bitcoin is a protocol managing a cryptographic ledger,  and this ledger is made up of ordered transactions. Transactions are ordered through blocks,  such that a block is merely a collection of transactions.</p> <p>A transaction has inputs and an outputs. The inputs must come from one or more unspent outputs  of prior transactions. The only exception is the special  coinbase  transaction, which is the reward given to  whoever successfully mined a new block  (thus it has no input from a prior transaction). Otherwise, all transactions are composed of  inputs from previously unspent transaction outputs (UTXOs).</p> <pre><code>flowchart LR\n  subgraph TX-1\n    direction TB\n    subgraph in-1[in]\n        direction TB\n        a[0.25 BTC]\n    end\n    subgraph in-1a[in]\n        direction TB\n        a1[0.25 BTC]\n    end\n    subgraph out-1[out]\n        direction BT\n        b[0.5 BTC]\n    end\n  end\n  subgraph TX-2\n    direction TB\n    subgraph in-2[in]\n        direction RL\n        c[0.5 BTC]\n    end\n    subgraph out-2[out]\n        direction BT\n        d[0.1 BTC]\n    end\n    subgraph out-2a[out]\n        direction BT\n        e[0.4 BTC]\n    end\n  end\n  in-1 --&gt; out-1\n  in-1a --&gt; out-1\n  in-2 --&gt; out-2\n  in-2 --&gt; out-2a\n  out-1 --&gt; in-2</code></pre>"},{"location":"saving/understand-the-terms/#utxos","title":"UTXOs","text":"<p>As the name implies,  an Unspent Transaction Output (UTXO)  is Bitcoin that has not been spent. The Bitcoin you custody will be in UTXOs. UTXOs represent the total amount of addressable Bitcoin at  any given time. Every UTXO contains an address such that the UTXO can only be spent  by the private key (or keys) associated with that address.</p>"},{"location":"saving/understand-the-terms/#transactions-demystified","title":"Transactions Demystified","text":"<p>Transactions are simply the movement of Bitcoin  on the ledger, such that the entire supply of all  Bitcoin can be accounted for. A transaction is simply inputs and outputs which  move the balance of Bitcoin to different  cryptographic addresses (accessible only  by private keys).</p>"},{"location":"saving/understand-the-terms/#seed-phrases-and-derivation","title":"Seed Phrases and Derivation","text":"<p>The best way to understand keys, addresses and transactions is through examples. Start with an example seed phrase.</p> <p>Example Seed Phrase</p> <pre><code>primary fetch primary prefer primary fetch primary fiber fish cause adult fee\n</code></pre> <p>This seed generates a root key for multiple accounts, each with unlimited addresses and key pairs, referenced by derivation paths.</p> m/0'/0' <p>Extended private key: <pre><code>xprv9xYcGh8prgvDkcydvSeV6xEZVZ4t47xy46VzdsJGVFN8YvwKPF51u9azfREPrQyLyV8HdjDDAzaMkKcRsdfAGQ2diobuW1ZkBrGXXqze5CQ\n</code></pre></p> <p>Extended public key (Master Public Key): <pre><code>xpub6BXxgCfih4UX1BnqD5bhJVMD3nnTUYWwC9kuFgUH11bmqAPhjhxFJWrvBnmh5QexRFkCxqFTS1AHiPhGeEp7HKoW1d85wTyEHSeJdZouJQJ\n</code></pre></p> <p>For the next accounts: <code>m/0'/1'</code>, <code>m/0'/2'</code>.</p> <p>First address/key pair for account 2:</p> m/0'/2'/0' <p>Receive Address: <pre><code>1N1QRK5Ru3gJ7ue3Xv277cMUMdWePbehsc\n</code></pre></p> <p>Public Key: <pre><code>02279dd8f9c77ac86499fc05cebb3c81763e20f46ad3f9731e87992b512fe2e628\n</code></pre></p> <p>Private Key: <pre><code>L1yPKTZ6Rw2ge7utKVJrf8fgx7pm6kBAFEJAUmw63hFz1uWPaEeR\n</code></pre></p> <p>Native SegWit address example:</p> m/84'/0'/3'/0/0 <p>Receive Address: <pre><code>bc1q3ctchdrxdt4ydljcfp4y0s0a3w8ut07j22f8ty\n</code></pre></p>"},{"location":"saving/understand-the-terms/#bitcoin-improvement-proposals","title":"Bitcoin Improvement Proposals","text":"<ul> <li>BIP-32: Hierarchical deterministic wallets.</li> <li>BIP-44: Derivation paths for P2PKH (e.g., <code>m/44'/0'/0'/0</code>).</li> <li>BIP-49: Derivation paths for P2SH-P2WPKH (e.g., <code>m/49'/0'/0'/0</code>).</li> <li>BIP-84: Derivation paths for P2WPKH (e.g., <code>m/84'/0'/0'/0</code>).</li> <li>BIP-39: Standardized word list for seed phrases.</li> </ul> <p>Additional resources - Private Keys - ZPUB Extended Public Key - XPUB Extended Public Key - PSBT Discussion</p>"},{"location":"saving/understand-the-terms/#blockchain","title":"Blockchain","text":"<p>The word \"blockchain\" is perhaps the most misunderstood and overhyped word related to Bitcoin. Next time you read an article on \"blockchain technology\" replace the word  \"blockchain\" with \"magic\" and you won't have changed the article's meaning.</p> blockchain or magic? <p>All the data in blockchain technologymagic is immutable and can be adapted for use in a variety of industries, including healthcare, supply chain management, and voting.</p> <p>A blockchain, like the name implies,  is simply a chain of blocks. And a block is a collection of transactions. That's it. It's an implementation detail as interesting as a  linked list. And if you consider it a distributed database,  it is a slow and inefficient database.</p> <p>By itself a blockchain is not secure;  it is as mutable as any other data;  and it has  none of the magic often associated  with it (by those easily confused by  the subtle differences between technology and magic). A blockchain offers absolutely no value to  healthcare, supply chain management, or voting.</p> <p>Ultimately, a blockchain only makes sense in the context of  a proof of work (PoW) consenus mechanism whose security  comes from the considerable cost of work in the PoW.</p>"},{"location":"saving/understand-the-terms/#proof-of-work","title":"Proof of Work","text":"<p>A typical blockchain diagram will look something like this,</p> <p></p> <p>Each block has a hash. A block hash is a   sha256  of the entire block itself  (which includes the previous block hash). This is a cryptographic function that  takes any input (in this case a block) and   generates a 256-bit number as output. A block can be referenced by its hash  as well as by block height (starting at 1). Here are some examples of actual block hashes:</p> <ul> <li>Genesis -&gt; <code>00000000839a8e6886ab5951d76f411475428afc90947ee320161bbf18eb6048</code></li> <li>100100 -&gt; <code>0000000000020ee4806021c0b6e7b97d31df0c2fdbd0f6c3a7cb5883c7bc151f</code></li> <li>200201 -&gt; <code>00000000000000e510b96fcf03e27ad30f8d50e4cd4cb7cf4c06cf7ffb9add3e</code></li> <li>300301 -&gt; <code>00000000000000002887537d323675f79cc5eddce91b3c0dd433739cbfe9c823</code></li> <li>700700 -&gt; <code>00000000000000000000e55da58b378880e797f9f3e96811d3e64a2f801eed9a</code></li> </ul> <p>These hashes have a lot of leading zeroes,  and as time goes on, the number of leading zeroes seems to increase. This is due to proof of work (and network difficulty  increasing over time).</p> <p>There is a common misnomer that PoW involves  solving a difficult  mathematical problem. In fact, all PoW does is provide a verifiable  block hash that is smaller than the current  network difficulty. In other words, the hash is simply a number  (a 256-bit number) that is smaller than  the network difficulty number. This is why you see leading zeroes.</p> <p>The reason this is a proof of work  is because generating a valid block  requires massive amounts of work. A Bitcoin miner constantly  adjusts a proposed block   (see the <code>nonce</code> in the header)  and generates a sha256 hash,  essentially a guess. Every miner repeats this, over and over,  until finally -- and by dumb luck --  the hash is smaller than the network difficulty. If the hash is valid (adhering to consensus rules)  then the rest of the network will accept the  proposed block.</p> <p>There is also a <code>timestamp</code> field in each block,  meaning the Bitcoin network is also a distributed  timestamp server. This allows the PoW blockchain to keep track of time. And due to what is known as the  difficulty adjustment,  the network will adjust the   difficulty number in order to maintain a 10-minute average block time. The difficulty will adjust  every 2016 blocks (roughly every 2-weeks; and 2016 reversed is 6102,  a subtle reference to   executive order 6102). This is why the PoW blockchain  is more aptly known as the  Bitcoin timechain.</p>"},{"location":"saving/understand-the-terms/#timechain","title":"Timechain","text":"<p>The PoW blockchain is better known as a timechain because it provides  a chronological order to all transactions, creating its own time in the process. From the whitepaper, Bitcoin provides \"a solution to the double-spending problem using a peer-to-peer  distributed timestamp server to generate computational proof  of the chronological order of transactions\".</p> <p>In other words, Bitcoin provides order that lays itself out over time;   that is, we know the precise order of transactions,   as well as the future supply of Bitcoin. We can predict with high accuracy what the Bitcoin supply will be at any point in the future  (something you cannot do with gold or fiat).</p> <p>The timechain does not repeat. There are no circular paths in Bitcoin time. It is linear, keeping a pulse, a new block, every 10-minutes on average.</p> <p>Symbolically, Bitcoin is bringing order out of monetary chaos. What was once chaotic and unknowable (how much money is there and how is it distributed),   is now knowable with Bitcoin in a true sense of the word  order (order out of chaos).</p>"},{"location":"saving/understand-the-terms/#blockchain-demystified","title":"Blockchain Demystified","text":"<p>A blockchain is a chain of blocks, nothing fancy nor magic. What changed the world was not the invention of a blockchain  (something that already existed as far back as the   1990s). What changed the world was the invention of Bitcoin,  a distributed timestamp server  with a PoW consensus mechanism and difficulty adjustment,  giving us the most sound money to ever exist.</p> <p>Focusing on a blockchain as innovation is like focusing on how the   Wright brothers invented a wing rather than manned flight;  meanwhile   Bitcoin is the invention  of digital scarcity and a new form of money.</p>"},{"location":"saving/appendix/airgapped-computer/","title":"Appendix 3: Airgapped Computers","text":"<p>Even with dice and paper to generate a seed phrase, a computer remains essential for Bitcoin self-custody. It calculates the checksum (the 12th or 24th word in a mnemonic), derives private keys and addresses from the seed, verifies receive addresses, and signs transactions. For maximum security, dedicate a computer to these tasks\u2014one that is fully airgapped and rigorously quarantined.</p> <p>An airgapped computer lacks wireless capabilities, Bluetooth, or any network connectivity. Paired with strict quarantine procedures, it protects private keys from exposure. Below are recommendations for three key components: the Signing-Device, Airgapped-Computer, and Transaction-Manager. While setups can overlap\u2014for instance, a single device handling multiple roles\u2014separating them enhances security by minimizing risks.</p>"},{"location":"saving/appendix/airgapped-computer/#signing-device","title":"Signing-Device","text":"<p>The Signing-Device has one singular purpose: to sign Bitcoin transactions. It is the only component that ever loads a seed phrase and derives private keys, making it the most sensitive part of the system. To mitigate risks, it must remain strictly within the airgap, never interacting directly with networked devices or even sharing the same room in high-security setups.</p> <p>A standout option is the SeedSigner, a stateless signer that loads the seed only while powered on; once shut down, the information vanishes from memory. This design eliminates persistent storage of sensitive data, offering exceptional security. Setup guides are available here.</p> <p>Other hardware includes the Raspberry Pi Zero, which has no built-in networking and minimal components, reducing vulnerabilities like data leakage through hardware exploits. Attach a keyboard, monitor, and mouse as needed. For laptops or desktops, physically remove Wi-Fi cards and networking hardware, then boot from a secure OS like Tails.</p> <p>Install essential software: a minimal Debian distribution, Electrum or Sparrow for signing, Python for scripts, and tools like iancoleman.io/bip39 for BIP-39 support. Input unsigned transactions via QR code only; output signed ones the same way. Avoid USB or MicroSD to preserve the quarantine. Generate seeds with high entropy, such as dice rolls, and assume all electronics could be compromised\u2014use Faraday bags and camera covers.</p>"},{"location":"saving/appendix/airgapped-computer/#airgapped-computer","title":"Airgapped-Computer","text":"<p>The Airgapped-Computer supports offline tasks beyond signing, such as scanning and displaying QR codes to bridge the Transaction-Manager and Signing-Device. It acts as an intermediary, ensuring the Signing-Device\u2014a specialized subset of the Airgapped-Computer\u2014stays isolated within the airgap.</p> <p>Hardware options mirror those for the Signing-Device: the Raspberry Pi Zero for its simplicity, or modified laptops/desktops with networking removed. An ideal conceptual device would be compact like a smartphone, with a MicroSD-based OS, open-source hardware, no fan or microphone, and a read-only filesystem running Linux, Electrum, or Sparrow.</p> <p>Software setup includes a minimal Debian install, Electrum/Sparrow, iancoleman.io/bip39, BIP-39 tools, and Python scripts. Input data via QR codes or sanitized MicroSD/USB (use separate media for input and output to uphold quarantine). Output via QR display, secure printing, or manual transcription (though error-prone).</p> <p>Verify firmware integrity and supply chain. Operate in an isolated space free of windows, smart devices, or potential surveillance. The SeedSigner can double as an Airgapped-Computer, but maintain separation to protect the signing function.</p>"},{"location":"saving/appendix/airgapped-computer/#transaction-manager","title":"Transaction-Manager","text":"<p>Unlike the others, the Transaction-Manager connects to the Internet for watch- only tasks like monitoring balances and broadcasting transactions. It serves as the quarantine's gateway, exchanging data with the airgap solely via QR codes\u2014never direct contact.</p> <p>Use a laptop booted from a Tails OS USB drive, as outlined in Level 2: Your Keys. Enable a persistent volume to install Electrum or Sparrow (see this guide for Sparrow setup). Tails ensures a fresh, amnesic session each time, minimizing malware risks.</p> <p>Software focuses on watch-only mode: Tails OS core, with Electrum or Sparrow for wallet management. Input signed transactions via QR scanner; output unsigned PSBTs as QR codes. Broadcast through your full node or trusted services. Connect only to secure networks, and treat it as a target for bots and hackers\u2014reboot fresh for every session.</p>"},{"location":"saving/appendix/airgapped-computer/#airgap-quarantine-rules","title":"Airgap Quarantine Rules","text":"<p>An airgap alone does not guarantee security. Follow strict quarantine rules to prevent unauthorized data flow.</p> <p>To achieve nuclear-launch-code-level security, follow these rules as a concise, numbered checklist. Each includes a brief rationale for clarity and enforcement. The focus is on absolute isolation, verifiable processes, and layered defenses against physical, digital, and human threats. Adhere to them without exception during any session involving keys or transactions.</p> <ol> <li> <p>No device or data crosses the quarantine except via QR codes: Limit transfers between the Transaction-Manager and Airgapped-Computer to visual QR codes only; ban USB, MicroSD, or any physical media to eliminate malware vectors. Rationale: Prevents hidden payloads; QR enforces manual verification.</p> </li> <li> <p>Expose seed phrases only on the Signing-Device: Never display, write, or input seeds on any other component; derive keys solely within this isolated environment. Rationale: Contains the most critical secret to one tamper-resistant point, reducing theft risk.</p> </li> <li> <p>Stow all smartphones and personal electronics in Faraday bags outside the room: Power them off first and place in shielded bags; assume they are actively compromised for surveillance or key theft. Rationale: Blocks remote activation of microphones, cameras, or transmitters.</p> </li> <li> <p>Ban all electronic devices near the Signing-Device: Exclude speakers, smart devices, fans, or anything with potential for acoustic/electromagnetic leaks; use a dedicated, shielded room if possible. Rationale: Mitigates side-channel attacks like audio-based data exfiltration.</p> </li> <li> <p>Ensure complete physical privacy: Conduct sessions away from windows, in a locked room with no line-of-sight exposure; use white noise generators or RF shielding if available. Rationale: Guards against optical surveillance (e.g., drones, lasers) or thermal imaging.</p> </li> <li> <p>Sanitize and verify all tools pre-session: Check software/firmware signatures on official sources; wipe temporary media and test for integrity; treat every component as potentially compromised. Rationale: Counters supply-chain attacks and ensures no pre-installed malware.</p> </li> <li> <p>If possible, require multi-person verification for critical steps: Involve a trusted witness for seed loading or signing; use time-delayed access (e.g., 24-hour locks) to deter coercion. Rationale: Adds human redundancy against ransom or insider threats.</p> </li> <li> <p>Post-session wipe and audit: Clear RAM on shutdown, log all actions, and test quarantine integrity periodically (e.g., simulate breaches quarterly). Rationale: Erases residual data and detects subtle violations early.</p> </li> <li> <p>Distribute and redundantly store components: Keep Signing-Device elements geographically separate. Rationale: Ensures resilience against localized physical attacks like burglary or fire.</p> </li> </ol> <p>These rules, when followed meticulously, create a fortress-like barrier, making unauthorized access exponentially difficult\u2014even for advanced adversaries. Test them in dry runs to build familiarity.</p>"},{"location":"saving/appendix/dice/","title":"Appendix 2: Using Dice","text":"<p>You can (and should) generate seed phrases with dice.</p> <p>This is because true randomness is surprisingly difficult   to achieve on a computer. This is referred to as entropy,  that is, a measure of randomness.</p> <p>For example, a fair coin flip is 1-bit of entropy;  flipping two coins can offer 2-bits of entropy (4 possible outcomes).  But if one of the coins is unfair and always lands  on heads, then we're back to only 1-bit of entropy  from the first coin.</p> <p>The goal of a seed phrase   is to achieve the maximimum amount of entropy  that would prevent anyone from deriving or guessing  your seed phrase.</p> Beware of Low Entropy <p>A 24-word seed phrase is nothing more than an encoding of a 256-bit number (with a checksum at the end). If all 256-bits were the same, that is, all zeros except the checksum, then this would have very low entropy.</p> <p>The seed phrase would simply be, <pre><code>abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon art\n</code></pre></p> <p>That's 23 abandon's and 1 art</p> <p>Turns out this ridiculous 1-bit of entropy phrase was actually used before. You can recover this wallet and view the transaction history for yourself. For 2-hours in 2016 there was 0.3469341 Bitcoin stored with this key. Perhaps these transactions are part of a  Steganographic puzzle, and this is the first entry into finding a hidden fortune. Or perhaps someone lost their Bitcoin because of low entropy.</p> <p></p> How to get High Entropy? <p>In the above example, it took less than a second to discover a seed phrase protected only by 1-bit of entropy.</p> <p>How long would it take for 256-bits of entropy?</p> <p>256-bits of entropy is difficult to fathom. You might hear \"centuries\" or \"millions of years\", but it's more like, \"beyond the age of the universe even with planet-sized super-computers powered by  Dyson-spheres around every star.\"</p> <p>It's the same as flipping a coin 256 times. Not exactly a difficult task, but assuming it was a fair coin then this would get you 256-bits of entropy, and the odds of anyone guessing or deriving that exact 256-bit number is impossible (unless they watched you flipping the coin).</p> <p>It's like finding a needle in a haystack -- if the  haystack was the entire universe, and also the needle was invisible.</p>"},{"location":"saving/appendix/dice/#numeric-base-of-dice","title":"Numeric Base of Dice","text":"<p>We usually deal with Base-10 (decimal) and Base-2 (binary).  In fact, when we say \"bits\"  we're referring to the length of a binary number.</p> <p>But we can represent a number in any arbitrary base.  And this is important because one of the best  sources of true random numbers is fair dice rolls.</p> <p>A common 6-sided dice can be used to generate a 256-bit  number, but doing so can be somewhat confusing.  You may try to map the numbers to binary but you'll find  it's not so easy (1 dice gives you 2.5-bits of entropy).  To be safe you could just map odd and even rolls to binary 1 and 0,  but this requires 256 dice rolls and isn't very efficient.</p> <p>A better aproach is to use a Base-6 representation of a 256-bit  number, which would require 100 dice rolls.  This is the number of fair dice rolls necessary  to achieve 256-bits of entropy.</p> <p>Alternatively, and my recommendation,   is to use an 8-sided dice,  the kind commonly found in role-playing games.  A fair 8-sided dice roll has exactly 3-bits  of entropy   (meaning every 8-sided dice roll gives you exactly 3 of the desired 256-bits).  With this approach   you'll need 86 rolls to generate sufficient  entropy for a seed phrase.</p>"},{"location":"saving/appendix/dice/#256-bits-in-other-bases","title":"256-bits in other Bases","text":"Numeric Base length Description Base-2 (binary) 256 coin tosses Base-6 100 dice rolls Base-8 (octal) 86 8-sided dice rolls Base-10 (decimal) 78 780-Quattuorvigintillion Base-20 60 20-sided dice rolls Base-64 43 I-Ching Hexagrams Base-2048 24 seed words"},{"location":"saving/appendix/dice/#how-to-ensure-fair-dice","title":"How to Ensure Fair Dice","text":"<p>There's a strange phenomenon in the Bitcoin  community where they insist on   casino-grade dice;  as if \"casino\" is an  infallible authority  on dice grading that we should trust  our life savings with.</p> <p>Don't trust, verify</p> <p>If you're concerned  with the fairness of dice, then   you should verify your dice with a   saltwater balance test. Whether using \"AAA casino-grade razor-edge   precision dice\" or using the dice you got  from a board game, a saltwater test can verify  if the dice is balanced or not. </p> <p>Just saying  \"Casino-grade\" is not a verification.</p> <p>In most cases, even a slightly unbalanced dice  will still roll fairly, but it's recommended   to verify that a given set of dice  (casino-grade or otherwise)  is balanced so you'll know it can generate the   desired level of entropy.</p>"},{"location":"saving/appendix/dice/#saltwater-balance-test","title":"Saltwater Balance Test","text":"<p>You'll find many   examples online,   mostly from  dedicated communities around board games, RPGs,  and gambling aficionados.  God bless our fellow nerds.</p> <p>In practice, you simply need a cup of  supersaturated saltwater. This just means  the water cannot absorb any more salt and  that your dice will become buoyant. </p> <ol> <li>In a clean cup, fill with clean filtered  water</li> <li>Add salt, a lot of salt, and stir till   the salt is fully absorbed in the water</li> <li>Keep adding salt and stirring until  your dice becomes buoyant</li> </ol> <p>Once the dice is floating towards the surface  you'll be able to test if it's  balanced or not. Simply push the dice  with a pencil or chopstick.</p> Balanced Dice <p></p> <p>src</p> <p>An unbalanced dice will float upward favoring  one side. It will be obvious. In practice  this could be due to air-bubbles or  inconsistent materials.</p> Unbalanced Dice <p></p> <p>src</p> <p>Using this very simply technique you can  verify your dice are balanced and can   safely be used to generate high levels  of entropy. You'll find the \"casino-grade\"   dice offer no benefit over standard board game dice,  and most importantly you'll have verified  your dice. </p> <p>No trust required!</p>"},{"location":"saving/appendix/dice/#dice-and-paper","title":"Dice and Paper","text":"<p>To really understand the security and ownership  of your private keys, you ought to generate  seed phrases by hand, with dice and paper. You will need to transfer the seed phrase   to a secure airgapped computer   and generate a checksum,  however everything before that  can be done by hand.</p> <p>I recommend using 8-sided dice   that have been verified through a   saltwater balance test.  This will make the mapping much easier  because an 8-sided dice   corresponds exactly  to 3-bits of entropy.  Use the following chart to map each number to its  binary equivalient.</p> 8D dice roll 3-bits 1 001 2 010 3 011 4 100 5 101 6 110 7 111 8 000 <p>Each number on the dice corresponds directly to  its binary representation, except 8, which  in binary is \"1000\" and so this is just the  lower 3-bits of 8 in binary. Because an 8-sided dice maps perfectly into 3-bits,  it is very easy to roll and record  the entropy bits directly in binary.</p> <p></p>"},{"location":"saving/appendix/dice/#write-dice-rolls-in-binary","title":"Write Dice Rolls in Binary","text":"<p>Each word in the seed phrase is exactly  11-bits (2048 possibilities).</p> <p>And each dice roll will provide 3-bits.</p> <p>You'll want to keep rolling until you fill out  all but the last 11-bit word, and 3-bits of the 24th word.  As you fill out 3-bits at a time, you can go  left-to-right and top-down, and stop after  writing 3-bits into the 24th word.  The remaining 8-bits of the final word are  calculated through a  checksum which we'll discuss next.</p> <p></p> What about 12-Word Seeds? <p>You could also do 12-word seeds,  which will give you 128-bits of entropy.</p> <p>You'll fill out 11 of the 11-bit words and 7-bits of the 12th word. The remaining 4-bits will be the checksum.</p> <p>In either case, you'll need to compute the checksum to arrive at a valid final word.  This simple checksum is to ensure that you've got a valid seed phrase.</p> <p>A common approach is to add an additional passphrase to the seed words, like a 13th or 25th word, but not constrained to the BIP-39 word list. This passphrase  can provide additional bits of entropy, and using a strong passphrase can easily add enough entropy to make a 12-word plus passphrase seed as strong as a 24-word seed.</p>"},{"location":"saving/appendix/dice/#complete-the-checksum","title":"Complete the Checksum","text":"<p>Completing the final word requires a checksum.   In this  case a <code>sha256sum</code>  of the 256-bits of entropy.   Remember the 24th word has 8-bits for  the checksum, which should be the  first 8-bits of the shasum.</p> <p>This may sound complicated, but you can use the  same secure airgapped computer you plan on using  to sign transactions and  Self Custody  your Bitcoin.  If you're just testing this approach  feel free to use any computer  to calculate the checksum bits.</p> <p>You will run the following shell command, and  you'll need to type your exact binary number.  For brevity, I will use <code>010...001</code> to represent the full  256-bit binary number seen in the worksheet above.</p> <pre><code>$ echo 010...001 | shasum -a 256 -0\nbbcb5d63c87ee0b833f656ae55db8e4ba0f0d4f8cab91be038b5c32de106696a\n$ \n</code></pre> <p>To compute the same using python is a little more involved,   but helpful if you want to verify.</p> python sha256sum <pre><code>&gt;&gt;&gt; import hashlib\n&gt;&gt;&gt; import binascii\n&gt;&gt;&gt; \n&gt;&gt;&gt; bin_str = '0101101110110011011101010011011111001010001101010111010000011101111001010110000000001100110010000000110100001111010011000011010000110010000111010000110100111001101111010110001001011001111111000000100010110010011000010111010000110000010011000011010010001001'\n&gt;&gt;&gt; entropy_hex = format(int(bin_str, 2), '064x')\n&gt;&gt;&gt; hex_bytes = binascii.a2b_hex(entropy_hex)\n&gt;&gt;&gt; hashlib.sha256(hex_bytes).hexdigest()\n'bbcb5d63c87ee0b833f656ae55db8e4ba0f0d4f8cab91be038b5c32de106696a'\n&gt;&gt;&gt; \n</code></pre> <p>The shasum is a Base-16 (hexidecimal) number, representing the  256-bit shasum  of the entropy bits we got from the dice rolls.</p> <pre><code>bbcb5d63c87ee0b833f656ae55db8e4ba0f0d4f8cab91be038b5c32de106696a\n</code></pre> <p>To get the checksum needed for our 24th word,  take the first two hexidecimal digits of the shasum,  in this case <code>bb</code>,  and convert to binary.   Each hexidecimal digit is exactly 4-bits,  and <code>b</code> is <code>1011</code>,  so <code>bb</code> is <code>10111011</code></p> <p>If you are not sure how to convert hexidecimal digits to binary,  or you want to verify you did it correctly,  you can verify in python,</p> <pre><code>&gt;&gt;&gt; format(int(\"bb\", 16), \"08b\")\n'10111011'\n&gt;&gt;&gt; \n</code></pre> <p>Once you have the first 8 binary digits   of the shasum, simply add those 8-bits  to the worksheet to complete  your 24th word.  The 3-bits from dice plus the 8-bits   from the shasum will complete all 11-bits of the final word.</p>"},{"location":"saving/appendix/dice/#seed-word-lookup","title":"Seed Word Lookup","text":"<p>Now that you have all the binary values,   you can resolve each of the 24 values to its corresponding  BIP-39 seed word.</p> <p>There are many ways to do this, and a helpful place to start is to reference  a printable version of the BIP-39 words.  There are many examples online, and I have included one here,</p> <p>BIP39-words.txt <pre><code>0    00000000000    abandon\n1    00000000001    ability\n2    00000000010    able\n\n...\n\n2045 11111111101    zero\n2046 11111111110    zone\n2047 11111111111    zoo\n</code></pre></p> <p>In practice, I find trying to match the binary extremely difficult.  And instead I opted to convert each of the 11-bit numbers to decimal.  You can do this fairly quickly if you're good at adding numbers  that are all powers of 2 (e.g., 512 + 64 + 8 = 584).</p> <p>If you're like me you can use an old pocket calculator,  or even better,  use the secure airgapped computer that you plan to use for  Self Custody.</p> <p>Python makes a wonderful calculator,</p> <pre><code>&gt;&gt;&gt; int('01011011101', 2)\n733\n&gt;&gt;&gt; \n</code></pre> <p>You can then reference the official BIP-39 words  and see that 733 corresponds to \"forum\"</p> <p>Seed words start at 0</p> <p>Be careful to avoid  fencepost errors as the line-numbers start at 1 but the seed words start at 0</p> <p>Alternatively, you can do this in python very easily  if you already have the official BIP-39 words  on your airgapped computer, e.g.,</p> <pre><code>&gt;&gt;&gt; with open('english.txt') as f:\n...   seed_words = f.read().splitlines()\n&gt;&gt;&gt; \n&gt;&gt;&gt; seed_words[733]\n'forum'\n&gt;&gt;&gt; seed_words[1245]\n'option'\n&gt;&gt;&gt;  \n</code></pre> <p>This almost feels like cheating,  but it's a nice reminder to include the BIP-39 word list  on your secure airgapped computer.  However you do it, manually or using the airgapped computer,  you should now have all 24 words of your seed phrase.</p> <p>forum option evil nerve firm auction night account siege half spread half canyon make tragic proof fly theory clutch seed drink champion split danger</p>"},{"location":"saving/appendix/dice/#verify-seed-phrase","title":"Verify Seed Phrase","text":"<p>Now that you have all 24 words, you can use them   in the wallet software  of your choice.  If you made a mistake anywhere the checksum  will very likely fail.</p> <p>I was able to verify this seed phrase in electrum --</p> electrum <p></p> <p>And I can view the master public key   (go to \"wallet\" -&gt; \"information\" in electrum) --</p> electrum <p></p> <p>Additionally, I was able to verify  the seed phrase and the entropy bits using the  Mnemonic Code Converter  --</p> iancoleman.io/bip39 <p></p> <p>And that's it! </p> <p>What started with dice and paper is now a   valid and secure Bitcoin private key.</p>"},{"location":"saving/appendix/dice/#dice-and-computer","title":"Dice and Computer","text":"<p>We can use our airgapped computer   to convert dice rolls  into a seed phrase.  This will give us the verified entropy  of dice rolls, and when done correctly  can be more secure than dice and paper.</p> <p>This technique is also applicable to other  methods of creating 256-bits of entropy,  from I-Ching Hexagrams to Tarot cards.  All that is required is a list of unique  characters to represent the set.</p> dice-rolls to number <pre><code>def dice2n(n_str, digits):\n    basem = 1\n    n = 0\n    for c in n_str:\n        n += (digits.index(c)) * basem\n        basem = basem*len(digits)\n    return n\n</code></pre> number to dice-rolls <pre><code>def n2dice(n, digits):\n    chars = []\n    while n &gt; 0:\n        n, d = divmod(n, len(digits))\n        chars.append(digits[d])\n    return ''.join(chars)\n</code></pre> <p>If you already have the official BIP-39 words  on your airgapped computer, e.g.,</p> <pre><code>&gt;&gt;&gt; with open('english.txt') as f:\n...   seed_words = f.read().splitlines()\n&gt;&gt;&gt; \n&gt;&gt;&gt; seed_words[0]\n'abandon'\n&gt;&gt;&gt; seed_words[2047]\n'zoo'\n&gt;&gt;&gt; \n</code></pre> <p>Roll the dice and record them into a variable, e.g., <code>d6_rolls</code></p> <pre><code>&gt;&gt;&gt; \n&gt;&gt;&gt; d6_rolls = '1325251343253343214251563241321214344521641246163226332132423346231453554151345112124463226413335644'\n&gt;&gt;&gt; \n</code></pre> <p>Next you'll want to verify the length,</p> <pre><code>&gt;&gt;&gt; len(d6_rolls)\n100\n&gt;&gt;&gt; \n</code></pre> <p>Let's convert this to a number,</p> <pre><code>&gt;&gt;&gt; \n&gt;&gt;&gt; entropy_number = dice2n(d6_rolls, '123456')\n&gt;&gt;&gt; entropy_number\n41477543854087285771122632882271155796101921343012082862722996391061926720649\n&gt;&gt;&gt; \n</code></pre> <p>You've got the number, now we format it as a binary string,</p> <pre><code>&gt;&gt;&gt; \n&gt;&gt;&gt; entropy_bin = format(entropy_number, '0256b')\n&gt;&gt;&gt; entropy_bin\n'0101101110110011011101010011011111001010001101010111010000011101111001010110000000001100110010000000110100001111010011000011010000110010000111010000110100111001101111010110001001011001111111000000100010110010011000010111010000110000010011000011010010001001'\n&gt;&gt;&gt; \n</code></pre> <p>Compute the checksum</p> <pre><code>&gt;&gt;&gt; \n&gt;&gt;&gt; import hashlib\n&gt;&gt;&gt; import binascii\n&gt;&gt;&gt; \n&gt;&gt;&gt; entropy_hex = format(entropy_number, '064x')\n&gt;&gt;&gt; hex_bytes = binascii.a2b_hex(entropy_hex)\n&gt;&gt;&gt; entropy_sha = hashlib.sha256(hex_bytes).hexdigest()\n&gt;&gt;&gt; entropy_sha\n'bbcb5d63c87ee0b833f656ae55db8e4ba0f0d4f8cab91be038b5c32de106696a'\n&gt;&gt;&gt; \n</code></pre> <p>Add first 8-bits of the checksum, to produce the 264-bit string  (that is, 24 words, each with 11-bits)</p> <pre><code>&gt;&gt;&gt; \n&gt;&gt;&gt; seed_bin = entropy_bin + format(int(entropy_sha[0:2], 16), '08b')       \n&gt;&gt;&gt; len(seed_bin)\n264\n</code></pre> <p>You can now lookup seed words using 11-bit slices,</p> <pre><code>&gt;&gt;&gt; \n&gt;&gt;&gt; seed_words[ int(seed_bin[0:11], 2) ]\n'forum'\n&gt;&gt;&gt; \n</code></pre> <p>Using the above approach, you can loop through all slices,</p> <pre><code>&gt;&gt;&gt; \n&gt;&gt;&gt; [seed_words[int(seed_bin[x:x+11],2)] for x in range(0,264,11)]\n['forum', 'option', 'evil', 'nerve', 'firm', 'auction', 'night', 'account', 'siege', 'half', 'spread', 'half', 'canyon', 'make', 'tragic', 'proof', 'fly', 'theory', 'clutch', 'seed', 'drink', 'champion', 'split', 'danger']\n&gt;&gt;&gt; \n</code></pre> dice to seed phrase <pre><code>import hashlib\nimport binascii\n\ndef dice_to_seed_phrase(n_str, digits, seed_words):\n    \"\"\" generate seed phrase from dice rolls\n    \"\"\"\n    def dice2n(n_str, digits):\n        basem = 1\n        n = 0\n        for c in n_str:\n            n += (digits.index(c)) * basem\n            basem = basem*len(digits)\n        return n\n    entropy_number = dice2n(n_str, digits)\n    entropy_bin = format(entropy_number, '0256b')[:256]\n    entropy_hex = format(entropy_number, '064x')[:64]\n    hex_bytes = binascii.a2b_hex(entropy_hex)\n    entropy_sha = hashlib.sha256(hex_bytes).hexdigest()\n    seed_bin = entropy_bin + format(int(entropy_sha[0:2], 16), '08b')\n    return [seed_words[int(seed_bin[x:x+11],2)] for x in range(0,264,11)]\n</code></pre> <p>You can use the above to generate a seed phrase from your dice roll string,</p> <pre><code>&gt;&gt;&gt; \n&gt;&gt;&gt; my_seed_phrase = dice_to_seed_phrase(d6_rolls, '123456', seed_words)\n&gt;&gt;&gt; for w in my_seed_phrase:\n...  print(w)\n... \nforum\noption\nevil\nnerve\nfirm\nauction\nnight\naccount\nsiege\nhalf\nspread\nhalf\ncanyon\nmake\ntragic\nproof\nfly\ntheory\nclutch\nseed\ndrink\nchampion\nsplit\ndanger\n&gt;&gt;&gt;\n</code></pre> dice prompt mini app <pre><code>import curses\n\ndef dice_prompt(seed_words, digits='123456'):\n    if len(set(digits)) != len(digits):\n        return \"digits need to be unique\"\n    stdscr = curses.initscr()\n    rolls_needed = len(n2dice(2**256-1, digits))\n    rolls = []\n    _seeds = ['abandon'] * 24\n    _ent = 1\n    while len(rolls) &lt; rolls_needed:\n        stdscr.erase()\n        stdscr.addstr(0, 0, f\"Entering {len(rolls)+1}/{rolls_needed} dice roll: \")\n        _y, _x = stdscr.getyx()\n        stdscr.addstr(1, 0, f\"-&gt; {''.join(rolls)}\")\n        _seeds = dice_to_seed_phrase(''.join(rolls), digits, seed_words)\n        _ent = len(bin( dice2n(digits[-1]*len(rolls), digits) )[2:])\n        stdscr.addstr(3, 0, f\"estimated entropy &lt;{_ent}-bits\")\n        _seed_phrase = '\\n'.join(_seeds)\n        stdscr.addstr(5, 0, _seed_phrase)\n        stdscr.move(_y, _x)\n        stdscr.refresh()\n        _raw = stdscr.getch()\n        if chr(_raw) in digits:\n            rolls.append(chr(_raw))\n    curses.endwin()\n    final_seeds = dice_to_seed_phrase(''.join(rolls), digits, seed_words)\n    return ' '.join(final_seeds)\n</code></pre> <p></p> <p>The above code can be found here, in a simplified app (under 100-lines). This can be run on even the most basic hardware (such as an airgapped computer).</p>"},{"location":"saving/appendix/mnemonic/","title":"Appendix 5: Mnemonic Memorization","text":"<p>Imagine crossing a volatile border, your wealth secure -- not in a wallet or device, but locked in your mind. A memorized Bitcoin seed phrase creates a \"brain wallet,\" immune to theft, seizure, or disaster. Paired with the airgapped, stateless SeedSigner, it enables secure transactions for single-signature (singlesig) or multi-signature (multisig) wallets, ensuring sovereignty wherever life takes you.</p>"},{"location":"saving/appendix/mnemonic/#why-mnemonic-memorization","title":"Why Mnemonic Memorization?","text":"<p>A brain wallet eliminates the risks of physical backups like paper or metal, which can be lost, stolen, or destroyed. A 12-word BIP-39 seed phrase (128 bits of entropy) plus a passphrase (\u226532 bits) delivers at least 160 bits of entropy, surpassing the 128-bit security threshold to protect against brute-force attacks. SeedSigner\u2019s airgapped design signs transactions without storing your seed, making it ideal for secure, stateless operation in any environment.</p>"},{"location":"saving/appendix/mnemonic/#benefits-and-use-cases","title":"Benefits and Use Cases","text":"<p>A memorized seed phrase offers unmatched security and flexibility, especially in high-risk scenarios:</p> <ul> <li>Invisible Security: No physical backups to lose or expose, keeping your wealth hidden.</li> <li>Crisis-Ready Access: Funds are accessible anywhere with a SeedSigner, even in emergencies.</li> <li>Stateless Protection: SeedSigner signs transactions without retaining data, ensuring no digital trace.</li> <li>Flexible Use: Supports singlesig and multisig wallets for tailored security.</li> <li>Emergency Travel: Carry Bitcoin invisibly across borders, safe from confiscation, and restore it on a SeedSigner at your destination.</li> <li>Surviving Confiscation: In oppressive regimes, a brain wallet protects wealth from seizure with no physical evidence.</li> <li>Disaster Recovery: Access funds after fires or floods destroy backups, relying solely on memory.</li> <li>Remote Access: Rebuild your wallet on a new SeedSigner anywhere, even without trusted hardware.</li> <li>Covert Privacy: For journalists or activists, a brain wallet enables discreet fund access under surveillance.</li> </ul>"},{"location":"saving/appendix/mnemonic/#implementation","title":"Implementation","text":"<p>Memorization Discipline</p> <p>Memorization requires relentless practice and strict quarantine rules during seed generation and signing. A lapse in memory or security could permanently lock you out of your Bitcoin.</p> <p>To create and use a brain wallet:</p> <ol> <li>Generate a Secure Mnemonic: In an airgap quarantine, use a SeedSigner to create a 12-word BIP-39 seed (e.g., \u201capple banana cherry dog eagle fox grape hill igloo jump kite lion\u201d) and a strong passphrase (e.g., \u201cFreedom2025!\u201d).</li> <li>Memorize:<ul> <li>Spaced Repetition (Critical): Practice recalling the seed and passphrase daily for the first week, then weekly for a month, then monthly, in a secure setting. Test random word order and partial recall (e.g., \u201cWhat\u2019s the 7th word?\u201d) to ensure deep mastery. This method leverages the spacing effect to embed the mnemonic in long-term memory, making it resilient to stress or time.</li> <li>Chunking: Group the 12 words into four sets of three (e.g., \u201capple banana cherry,\u201d \u201cdog eagle fox,\u201d \u201cgrape hill igloo,\u201d \u201cjump kite lion\u201d) for easier recall.</li> <li>Memory Palace: Visualize a familiar place (e.g., your home). Place each chunk in a distinct location (e.g., \u201capple banana cherry\u201d in the kitchen) and revisit mentally often.</li> <li>Story Method: Create a vivid narrative, e.g., \u201cAn apple-banana-cherry pie lures a dog, eagle, and fox to a grape-draped hill under an igloo, where a lion roars \u2018Freedom2025!\u2019.\u201d</li> <li>Association: Link each word to a personal memory (e.g., \u201capple\u201d to an orchard) for deeper recall.</li> <li>Interleaved Practice: Mix seed recall with unrelated phrases to strengthen retention.</li> </ul> </li> <li>Optional Backup: Store the seed on metal backups.</li> <li>Restore and Use: On a SeedSigner, input the memorized seed and passphrase (Settings &gt; Seeds &gt; Load Seed) to restore the wallet. Export the ZPUB via QR to a Transaction-Manager for a watch-only wallet in Sparrow or Electrum.</li> <li>Deposit: Generate a receive address in Sparrow, verify it on SeedSigner, and monitor deposits via a full node.</li> <li>Withdraw: Create an unsigned transaction on the Transaction-Manager, transfer via QR to SeedSigner, sign with the memorized seed and passphrase, and broadcast via your full node.</li> <li>Test Regularly: Verify memory accuracy by inputting the seed into a SeedSigner in a secure environment.</li> <li>Avoid Pitfalls: Never store the mnemonic digitally, or skip practice. Practice regularly to prevent memory fade. Use only stateless signing devices (like SeedSigner) and stateless Transaction-Manager (Tail OS).</li> </ol>"},{"location":"saving/appendix/mnemonic/#always-stateless","title":"Always Stateless","text":"<p>SeedSigner\u2019s airgapped, stateless design ensures secure transactions:</p> <ul> <li>Restore Wallet: Input the memorized seed (e.g., \u201capple banana cherry\u2026\u201d) and passphrase (e.g., \u201cFreedom2025!\u201d) into SeedSigner to access your wallet.</li> <li>Sign Transactions: Create transactions on a stateless Transaction-Manager (Tails OS), transfer via QR to SeedSigner, and sign using your memorized seed.</li> <li>Support for Multisig: Use with multisig setups for enhanced security, leveraging SeedSigner\u2019s stateless operation.</li> </ul> <p>A memorized seed, reinforced by spaced repetition, turns your mind into an unassailable vault.  Paired with SeedSigner, your Bitcoin remains invisibly secure through any crisis, ready for any storm.</p>"},{"location":"saving/appendix/protocol_advanced/","title":"Advanced Protocol with Multisig Signing Devices","text":"<p>This protocol delivers a robust 2-of-3 multisig Bitcoin self-custody system using three different Signing-Devices: two SeedSigners and one Coldcard Q (one per seed). It harnesses an airgap quarantine, a full node for verification, metal seed backups, and stringent quarantine rules to provide ironclad protection. By using distinct devices per seed, this protocol achieves Level 9 fault tolerance, defending against advanced firmware attacks like Dark Skippy, where a compromised device could leak seeds via signatures.</p>"},{"location":"saving/appendix/protocol_advanced/#setup","title":"Setup","text":"<p>Establish your 2-of-3 multisig wallet with three seeds created in sequence on your Signing-Devices (one device per seed). Conduct this in a secluded, secure setting, maintaining airgaps and quarantine procedures. This separation ensures that a compromise of one device affects only one seed, preserving multisig security.</p> 1. Prepare Secure Environments <ol> <li>Acquire SeedSigners and one Coldcard Q for dual roles as Signing-Device and Airgapped-Computers. Label as necessary.</li> <li>Assemble a Transaction-Manager (Tails OS with persistent storage) for watch-only functions, linked to your full node. If desired, install Sparrow on the Transaction-Manager through Tails with persistent storage.</li> <li>Optional, install Dark Skippy detection tools and other related tools to verify transactions (install on Tails OS persistent storage).</li> <li>Familiarize yourself with quarantine rules.</li> <li>Authenticate software and firmware: Pull from official repositories, validate signatures, and update (compile OS from source where feasible; refer to SeedSigner building guide or Coldcard documentation).</li> <li>Prepare tools for metal backups.</li> </ol> 2. Generate Seeds <ol> <li>Activate each airgapped Signing-Device (two SeedSigners and one Coldcard Q), one at a time.</li> <li>On the first SeedSigner, access Settings &gt; Seeds &gt; Generate Seed; incorporate dice for entropy (roll D6 as instructed; consult dice verification guide). For the Coldcard Q, generate a seed using dice (see Coldcard seed creation). Do not generate additional seeds on the same device to avoid potential entropy manipulation.</li> <li>Jot the seed phrase on paper temporarily for confirmation.</li> <li>Validate the seed on the device display (SeedSigner or Coldcard Q).</li> <li>Save as QR (SeedSigner: Settings &gt; Seeds &gt; Export Seed QR; Coldcard Q: Export Seed QR). Safeguard the QR (see Seed QR guide or Coldcard QR export).</li> <li>Repeat for the second and third seeds on their respective devices (second SeedSigner and Coldcard Q), powering off each between steps to erase memory. Label devices clearly (e.g., \"Signing-Device-1\", \"Signing-Device-2\").</li> </ol> 3. Backup to Metal <ol> <li>Stamp each seed onto durable metal backups.</li> <li>Cross-verify against the paper note.</li> <li>Incinerate the paper note.</li> <li>Store backups to distinct and secure sites (e.g., Seed 1 at residence, Seed 2 with kin, Seed 3 in vault).</li> <li>Affix tamper-evident seals.</li> </ol> 4. Export ZPUBs to Transaction-Manager <ol> <li>On each Signing-Device, load its assigned seed and export ZPUB (SeedSigner: Settings &gt; Advanced &gt; Export XPUB &gt; Multisig, native SegWit; Coldcard Q: Export Wallet &gt; Multisig, native SegWit).</li> <li>Convey ZPUBs via quarantine (QR display on device, camera scan by Transaction-Manager).</li> <li>Integrate ZPUBs into Sparrow on Transaction-Manager (Tails OS) for a multisig watch-only wallet.</li> <li>Confirm Sparrow's descriptor fits 2-of-3.</li> </ol> 5. Validate Addresses for Future Deposits <ol> <li>Produce receive addresses in Sparrow on Tails OS.</li> <li>Relay via QR to each Signing-Device for checks (load assigned seed as required).</li> <li>Affirm derivation from ZPUB on each device (SeedSigner: Address Explorer; Coldcard Q: Address Explorer).</li> <li>Record paths (e.g., m/84'/0'/0'/0 for native SegWit multisig).</li> <li>Keep an offline roster of validated addresses.</li> </ol> 6. Test Setup with Small Transaction <ol> <li>Transfer a small Bitcoin amount following the Deposit procedure below.</li> <li>Observe confirmation on your full node.</li> <li>Transfer some Bitcoin following the Withdrawal procedure below.</li> <li>Validate the full workflow (e.g., seamless signature merging in Sparrow).</li> <li>Record issues and update protocol as needed.</li> </ol>"},{"location":"saving/appendix/protocol_advanced/#deposit","title":"Deposit","text":"<p>Receive Bitcoin safely. Use unique addresses each time, confirmed through your full node. No signatures needed here, as deposits don't involve signing.</p> 1. Generate Receive Address <ol> <li>Start Sparrow on the Transaction-Manager.</li> <li>Form a new receive address from the multisig descriptor (Receive tab).</li> <li>Tag it (e.g., \"Deposit from Exchange - Date\").</li> <li>Copy securely.</li> <li>Optionally make a QR in Sparrow.</li> </ol> 2. Verify Address on Airgapped Device <p>This step is optional -- used only when you do not have a pre-verified receive address available.</p> <ol> <li>Send address data via QR to the Signing-Devices (verify on at least two for redundancy).</li> <li>Confirm ZPUB derivation on each device (SeedSigner: Address Explorer; Coldcard Q: Address Explorer).</li> <li>Validate across seeds for multi-seed assurance.</li> </ol> 3. Share Address with Sender <ol> <li>Deliver the verified address securely (e.g., encrypted message).</li> <li>Advise double-checking pre-send.</li> <li>Avoid public disclosure.</li> <li>Note anticipated amount and sender.</li> <li>Await appearance in Sparrow.</li> </ol> 4. Monitor Incoming Transaction <ol> <li>Scan for the transaction in your full node or Sparrow on Tails OS.</li> <li>Examine details: amount, fees, inputs.</li> <li>Await first confirmation (e.g., 1 block).</li> </ol> 5. Confirm Finality <ol> <li>Await sufficient confirmations (e.g., 3 blocks).</li> <li>Affirm blockchain inclusion on your full node.</li> <li>Refresh balance in Transaction-Manager (Tails OS).</li> <li>Optionally cross-verify with another node.</li> </ol>"},{"location":"saving/appendix/protocol_advanced/#withdrawal","title":"Withdrawal","text":"<p>Spend Bitcoin via multisig signing. Adhere closely to avoid mishaps.  Use Signing-Device-1 and Signing-Device-2 for each partial signature to prevent cross-seed leakage.</p> 1. Create Unsigned Transaction <ol> <li>Open Sparrow on the Transaction-Manager.</li> <li>Choose UTXOs, define recipient and amount (Send tab).</li> <li>Set fees from full node mempool data.</li> <li>Produce PSBT file.</li> <li>Export as QR.</li> </ol> 2. Transfer Unsigned Transaction to Airgapped Device <ol> <li>Convey PSBT via quarantine (QR on Transaction-Manager, scan by SeedSigner or Coldcard Q).</li> <li>Ban Internet devices from vicinity.</li> <li>Load PSBT on each Signing-Device sans signing.</li> <li>Scrutinize details on screen (outputs, fees).</li> </ol> 3. Sign Transaction <ol> <li>On the first Signing-Device (e.g., SeedSigner #1), load its assigned seed (QR scan or manual entry).</li> <li>Approve transaction.</li> <li>Generate partial signature (SeedSigner: Sign PSBT; Coldcard Q: Sign PSBT; see multisig guide or Coldcard multisig).</li> <li>Export partial PSBT as QR (to Transaction-Manager).</li> <li>Power off the device to clear memory.</li> <li>Repeat for the second seed on its Signing-Device (e.g., Coldcard Q or SeedSigner, achieving 2-of-3 multisig threshold).</li> </ol> 4. Combine Signatures and Finalize Transaction <ol> <li>Return partial signatures to Transaction-Manager via quarantine (device QR scan).</li> <li>Merge in Sparrow on Tails OS for finalized signature.</li> <li>Validate transaction in Sparrow.</li> </ol> 5. Inspect Transaction <ol> <li>Before broadcasting, export the signed transaction hex in Sparrow.</li> <li>Use installed detection tools (e.g., from Dark Skippy) to scan the transaction for signs of Dark Skippy attacks, such as leaked seed data in signatures.</li> <li>If anomalies detected, abort, investigate devices, and rebuild firmware as needed.</li> </ol> 6. Broadcast Signed Transaction <ol> <li>Link to your full node or trusted broadcaster in Sparrow.</li> <li>Submit to network.</li> <li>Watch mempool entry.</li> <li>Follow confirmations on full node.</li> </ol>"},{"location":"saving/appendix/protocol_advanced/#check-balance","title":"Check Balance","text":"<p>View balances key-free. Prioritize your full node for verification.</p> 1. Sync Watch-Only Wallet <ol> <li>Start Sparrow on Transaction-Manager.</li> <li>Connect to full node.</li> <li>Await complete sync.</li> <li>Mark unconfirmed transactions.</li> </ol> 2. Query Balance for Multisig Addresses <ol> <li>Examine total balance in Sparrow on Tails OS (Balance tab).</li> <li>Detail confirmed/unconfirmed UTXOs.</li> <li>Survey recent transactions.</li> </ol> 3. Optional: Verify Against Separate Full Node <ol> <li>Query addresses on secondary full node.</li> <li>Match balances/UTXOs with the primary node.</li> </ol>"},{"location":"saving/appendix/protocol_advanced/#recovery","title":"Recovery","text":"<p>Restore from backups for key or device loss. Test routinely. Use new Signing-Devices if recovering multiple seeds.</p> 1. Identify the Issue <ol> <li>Pinpoint recovery type (e.g., lost SeedSigner or Coldcard Q, device damage, wallet data erasure).</li> <li>Assemble metal backups and protocol docs.</li> <li>Evaluate multisig threshold viability (e.g., 2-of-3 post-loss).</li> <li>If untenable, advance to full seed restoration.</li> <li>Record attempt.</li> </ol> 2. Retrieve Backups <ol> <li>Retrieve from secure sites (e.g., Seed 1 from home safe).</li> <li>Examine tamper seals.</li> <li>Copy seeds to temporary paper if necessary.</li> <li>Confirm accuracy.</li> <li>Manage in seclusion.</li> </ol> 3. Restore Keys on New Signing-Device <ol> <li>Procure new airgapped Signing-Device (SeedSigner or Coldcard Q, one per recovered seed if multiple).</li> <li>Input backup seed (SeedSigner: Load Seed; QR scan or manual; Coldcard Q: Import Seed; see Seed QR guide or Coldcard seed import).</li> <li>Validate restored wallet (e.g., ZPUB via Export XPUB).</li> <li>Reproduce data if paths vary (e.g., new ZPUBs).</li> <li>Shred temporary notes.</li> </ol> 4. Rebuild Multisig Wallet Descriptor <ol> <li>Export ZPUBs from restored Signing-Device to Transaction-Manager via quarantine.</li> <li>Recreate multisig descriptor in Sparrow on Tails OS with new ZPUBs.</li> <li>Rescan blockchain on full node.</li> <li>Verify UTXOs in Sparrow.</li> </ol> 5. Test Recovery with Small Amount <ol> <li>Deposit test sum if viable.</li> <li>Withdraw as above.</li> <li>Confirm full operation.</li> <li>Revise protocol doc as needed.</li> </ol>"},{"location":"saving/appendix/protocol_advanced/#maintenance","title":"Maintenance","text":"<p>Sustain protocol integrity with regular tasks. Include device-specific checks.</p> 1. Verify Metal Backups <p>At least monthly you should inspect the tamper-evident seals, and every few years inspect the metal and reseal.</p> <ol> <li>Inspect damage/corrosion.</li> <li>Test seed on dedicated Signing-Device.</li> <li>Reseal and stow.</li> </ol> 2. Update Software and Firmware <ol> <li>Monitor SeedSigner and Coldcard GitHub updates, including any anti-exfil implementations.</li> <li>Authenticate signatures.</li> <li>Prioritize Sparrow on Tails OS and full node.</li> <li>Airgap-update each Signing-Device firmware (source rebuild and verify).</li> <li>Assess compatibility.</li> </ol> 3. Run Full Node Health Checks <ol> <li>Confirm blockchain sync.</li> <li>Evaluate disk, uptime, connections.</li> <li>Prune as necessary.</li> <li>Backup config.</li> <li>Restart and observe errors.</li> </ol> 4. Simulate Full Protocol Run <ol> <li>Test deposit/withdrawal with nominal funds using all devices.</li> <li>Mimic recovery (no loss).</li> <li>Time and refine.</li> <li>Include heirs in dry run if feasible.</li> <li>Amend protocol doc, as needed.</li> </ol>"},{"location":"saving/appendix/protocol_basic/","title":"Basic Protocol with SeedSigner","text":"<p>This protocol outlines a basic single-signature Bitcoin self-custody system using a SeedSigner,   enhanced by airgap quarantine and a full node for verification. This fully implements all required aspects of Level-6 security,  and can easily be adapted to Level-7 multisig.</p>"},{"location":"saving/appendix/protocol_basic/#setup","title":"Setup","text":"<p>Establish your single-signature wallet with a SeedSigner in a secure, airgapped environment.</p> 1. Prepare Secure Environment <ol> <li>Configure a SeedSigner for use as both the signing device and airgapped computer.</li> <li>Set up a Transaction-Manager (e.g., Tails OS with persistent storage) connected to your full node.</li> <li>Familiarize yourself with basic quarantine rules.</li> </ol> 2. Generate Seed <ol> <li>Power on the SeedSigner and navigate to Settings &gt; Seeds &gt; Generate Seed.</li> <li>Optionally, enhance entropy by using dice (consult the dice verification guide).</li> <li>Temporarily record the seed phrase on paper.</li> <li>Verify the seed phrase on the SeedSigner display.</li> <li>Export the seed as a QR code (Settings &gt; Seeds &gt; Export Seed QR).</li> </ol> 3. Backup to Metal <ol> <li>Stampe the seed phrase onto a durable metal backup.</li> <li>Cross-verify the transcription with the paper record.</li> <li>Securely destroy the paper record.</li> <li>Store the metal backup in a safe and private location.</li> </ol> 4. Export ZPUB to Transaction-Manager <ol> <li>On the SeedSigner, export the ZPUB (Settings &gt; Advanced &gt; Export XPUB &gt; Single Sig, native SegWit).</li> <li>Display the ZPUB as a QR code on the SeedSigner.</li> <li>Scan the QR code with the Transaction-Manager to import the ZPUB.</li> <li>In Sparrow on the Transaction-Manager, create a watch-only wallet using the ZPUB.</li> </ol> 5. Validate Addresses <ol> <li>Generate a receive address in Sparrow.</li> <li>Transfer the address to the SeedSigner via QR code.</li> <li>On the SeedSigner, verify the address derivation (Address Explorer).</li> </ol>"},{"location":"saving/appendix/protocol_basic/#deposit","title":"Deposit","text":"<p>Receive Bitcoin securely using verified addresses.</p> 1. Generate Receive Address <ol> <li>Open Sparrow on the Transaction-Manager and create a new receive address.</li> </ol> 2. Verify Address on SeedSigner <ol> <li>Display the address as a QR code on the Transaction-Manager.</li> <li>Scan and confirm the address on the SeedSigner.</li> </ol> 3. Share and Monitor <ol> <li>Share the verified address with the sender securely.</li> <li>Monitor the transaction in Sparrow via your full node.</li> </ol>"},{"location":"saving/appendix/protocol_basic/#withdrawal","title":"Withdrawal","text":"<p>Spend Bitcoin by signing transactions with your SeedSigner.</p> 1. Create Unsigned Transaction <ol> <li>Open Sparrow on the Transaction-Manager.</li> <li>Select UTXOs, specify recipient and amount.</li> <li>Set an appropriate fee based on network conditions.</li> <li>Generate the PSBT and export it as a QR code.</li> </ol> 2. Sign Transaction with SeedSigner <ol> <li>Power on the SeedSigner and load the seed if necessary.</li> <li>Scan the PSBT QR code from the Transaction-Manager.</li> <li>Review transaction details on the SeedSigner display.</li> <li>Sign the transaction and export it as a QR code.</li> </ol> 3. Broadcast Signed Transaction <ol> <li>Scan the signed transaction QR code with the Transaction-Manager.</li> <li>In Sparrow, finalize and broadcast the transaction.</li> <li>Monitor confirmation via your full node.</li> </ol>"},{"location":"saving/appendix/protocol_basic/#check-balance","title":"Check Balance","text":"<p>View your Bitcoin balance without needing the SeedSigner.</p> 1. Sync Watch-Only Wallet <ol> <li>Open Sparrow on the Transaction-Manager.</li> <li>Connect to your full node and sync.</li> <li>View your balance and transaction history.</li> </ol>"},{"location":"saving/appendix/protocol_basic/#recovery","title":"Recovery","text":"<p>Restore your wallet in case of loss or damage.</p> 1. Retrieve Backup <ol> <li>Access your metal backup from its secure location.</li> <li>Inspect for any signs of tampering or damage.</li> </ol> 2. Restore Seed <ol> <li>If necessary, acquire a new SeedSigner.</li> <li>Enter the seed phrase (Load Seed via QR or manual entry).</li> <li>Verify by exporting the ZPUB and comparing to records.</li> </ol> 3. Rebuild Watch-Only Wallet <ol> <li>Export the ZPUB to the Transaction-Manager via QR code.</li> <li>In Sparrow, create a new watch-only wallet with the ZPUB.</li> <li>Rescan the blockchain to identify your UTXOs.</li> </ol>"},{"location":"saving/appendix/protocol_basic/#maintenance","title":"Maintenance","text":"<p>Ensure ongoing security and functionality.</p> 1. Verify Metal Backup <ol> <li>Periodically inspect the metal backup for damage.</li> <li>Test the seed by entering it into the SeedSigner and verifying the ZPUB.</li> </ol> 2. Update Software <ol> <li>Check for updates to SeedSigner firmware and Sparrow software.</li> <li>Verify the authenticity of updates before installation.</li> </ol> 3. Full Node Health <ol> <li>Ensure your full node is synchronized.</li> <li>Monitor performance and address any issues promptly.</li> </ol>"},{"location":"saving/appendix/protocol_ludicrous/","title":"Appendix: Ludicrous Protocol","text":"<p>This protocol delivers an ultra-secure 3-of-5 multisig Bitcoin self-custody system using five different Signing-Devices: three SeedSigners and two Coldcard Qs (one per seed). It leverages an expanded airgap quarantine covering both DMZs, redundant receive-only full nodes (RF and satellite), metal seed backups, geographically distributed key signing, and stringent quarantine rules to provide unparalleled protection. By using distinct devices per seed, redundant systems, and advanced countermeasures, this protocol achieves Level 12 security, ensuring resilience against state-level threats.</p> <p>Receive-only (e.g., satellite) nodes with geographically distributed key signing.</p> <p> Level 12 -- a veritable Hero's Journey into transaction signing </p>"},{"location":"saving/appendix/protocol_ludicrous/#secure-environment-and-countermeasures","title":"Secure Environment and Countermeasures","text":"<p>To safeguard against advanced threats, all QR code transfers must be conducted in secure, geographically distributed environments with the following countermeasures:</p> <ul> <li>Geographical Distribution: Store each Signing-Device in a unique, secure location (e.g., vaults, Faraday-protected rooms).</li> <li>Expanded Airgap: The airgap extends across both DMZs, isolating all critical operations from network threats.</li> <li>Secure Spaces: Each location must be a private, controlled room with no windows or cameras.</li> <li>Shielded Environments: Use Faraday cages or shielded rooms to block electromagnetic emissions.</li> <li>Privacy Filters: Polarized screen protectors on all device screens to prevent optical eavesdropping.</li> <li>White Noise Generators: To mask acoustic signals during device operation (preferably non-electronic).</li> <li>Privacy Enclosures: Lightproof booths for QR scanning to shield from external observation.</li> <li>Camera Blockers: Covers or tape to disable cameras on the Transaction-Managers when not in use.</li> <li>Tamper-Evident Seals: Applied to Signing-Devices when stored to detect unauthorized access.</li> </ul>"},{"location":"saving/appendix/protocol_ludicrous/#quarantine-rules","title":"Quarantine Rules","text":"<p>To achieve the highest level of security for your Bitcoin self-custody, follow these rules as a concise, numbered checklist. These rules extend the original Level-5 quarantine to include advanced countermeasures (suitable for the \"Ludicrous\" protocol),  ensuring protection against physical, digital, and human threats.</p> <p>Adhere to these rules without exception during any session involving seeds or transaction signing.</p> <ol> <li> <p>Limit data transfers to QR codes only: No physical media (e.g., USB, MicroSD) is allowed across the quarantine. Rationale: Prevents malware vectors and enforces manual verification.</p> </li> <li> <p>Expose seed phrases only on the Signing-Device: Never display, write, or input seeds on any other component. Rationale: Isolates the most critical secret to one tamper-resistant device.</p> </li> <li> <p>Stow all smartphones and personal electronics in Faraday bags outside the room: Power them off first. Rationale: Blocks remote activation of microphones, cameras, or transmitters.</p> </li> <li> <p>Ban all electronic devices near the Signing-Device; use non-electronic white noise generators and privacy enclosures: Exclude any potential sources of acoustic or electromagnetic leaks. Rationale: Mitigates side-channel attacks (e.g., audio or EM data exfiltration).</p> </li> <li> <p>Ensure complete physical privacy with secure spaces and privacy filters: Use a locked room with no windows or cameras, and apply polarized screen protectors to all devices. Rationale: Prevents optical surveillance and physical access.</p> </li> <li> <p>Sanitize and verify all tools pre-session: Check software/firmware signatures, verify tamper-evident seals on Signing-Devices, and test tool integrity. Rationale: Counters supply-chain attacks and pre-installed malware.</p> </li> <li> <p>Distribute and redundantly store components geographically with tamper-evident seals: Store Signing-Devices in separate, secure locations. Rationale: Ensures resilience against localized physical attacks (e.g., theft, fire).</p> </li> <li> <p>Use receive-only full nodes (RF and satellite) for blockchain data: Utilize RF and satellite-based nodes to receive tamper-proof data without transmitting. Rationale: Maintains privacy and resilience against network censorship.</p> </li> <li> <p>Employ redundant Transaction-Managers on isolated networks: Use two Transaction-Managers, each linked to a separate receive-only node. Rationale: Provides redundancy and independent cryptographic verification of all steps.</p> </li> <li> <p>Implement an expanded airgap covering the receive-only full nodes and Transaction-Managers: Isolate all critical operations from network threats. Rationale: Protects against all network-based attacks.</p> </li> <li> <p>Utilize a secure drop point for broadcasting signed transactions: Designate a single physically secure, monitored location, used only for broadcasting signed transactions. Rationale: Ensures secure handling of transaction broadcasting.</p> </li> <li> <p>Coordinate signing sessions securely across geographically distributed locations: Follow strict procedures for QR transfers and quarantine rules at each site. Rationale: Maintains security in a distributed setup.</p> </li> </ol> <p>These rules, when followed meticulously, create a fortress-like barrier around your Bitcoin, making unauthorized access or compromise exponentially difficult -- even for advanced adversaries.</p>"},{"location":"saving/appendix/protocol_ludicrous/#setup","title":"Setup","text":"<p>Establish your 3-of-5 multisig wallet with five seeds created on dedicated Signing-Devices (one device per seed). Conduct this in secluded, secure settings across multiple locations, maintaining airgaps and quarantine procedures.</p> 1. Prepare Secure Environments <ol> <li>Acquire five Signing-Devices: three SeedSigners and two Coldcard Qs, each for one seed.</li> <li>Set up three secure spaces for QR transfers in geographically distributed locations: private rooms with no windows or cameras, each equipped with a physical and electronic countermeasures, such as non-electronic white noise generators, and privacy enclosures.</li> <li>Install privacy filters on all Signing-Device and Transaction-Manager screens.</li> <li>Prepare camera blockers for the Transaction-Managers.</li> <li>Obtain tamper-evident seals for the Signing-Devices.</li> <li>Assemble two Transaction-Managers (Tails OS with persistent storage) within the airgap, each linked to a receive-only full node: e.g., one RF and one satellite.</li> <li>Install Sparrow and detection tools (for data exfil attacks like Dark Skippy) on both Transaction-Managers' persistent storage.</li> <li>Authenticate and update software and firmware for all devices.</li> <li>Designate a secure drop point for broadcasting signed transactions, with a full node and a Transaction-Manager running Tail OS and no persistent storage. This drop point will be used only for broadcasting signed transactions (everything else will happen within the quarantined airgap).</li> </ol> 2. Set Up Receive-Only Full Nodes <ol> <li>Satellite-Based Full Node:  </li> <li>Set up a receive-only full node using Blockstream's satellite service to receive blockchain data without internet.  </li> <li>Follow the setup guide at blockstream.com/satellite.</li> <li>RF-Based Full Node:  </li> <li>Set up a second receive-only full node using an RF source for decentralized blockchain data reception.  </li> <li>Use a reliable guide like the RTL-SDR Bitcoin Blockchain Guide for setup instructions.  </li> <li>Ensure both nodes are configured as receive-only to maintain the airgap and prevent any outbound data transmission.</li> </ol> 3. Generate Seeds <ol> <li>Activate each airgapped Signing-Device in its respective secure location, one at a time.</li> <li>Generate a seed on each device (SeedSigner: Settings &gt; Seeds &gt; Generate Seed with dice; Coldcard Q: generate with dice). Ensure privacy filters are installed to protect displays.</li> <li>Jot the seed phrase on paper temporarily for confirmation.</li> <li>Validate the seed on the device display.</li> <li>Save as QR (SeedSigner: Export Seed QR; Coldcard Q: Export Seed QR).</li> <li>Repeat for all five seeds, powering off devices between steps. Label clearly (e.g., \"Signing-Device-1\", \"Signing-Device-2\").</li> </ol> 4. Backup to Metal <ol> <li>Stamp each seed onto durable metal backups.</li> <li>Cross-verify against the paper note.</li> <li>Incinerate the paper note.</li> <li>Store backups in distinct, secure sites with tamper-evident seals.</li> </ol> 5. Export ZPUBs to Transaction-Managers <ol> <li>On each Signing-Device, load its seed and export ZPUB (SeedSigner: Export XPUB &gt; Multisig; Coldcard Q: Export Wallet &gt; Multisig).</li> <li>Following secure QR transfer procedures, convey ZPUBs via QR to both Transaction-Managers within the airgap.</li> <li>Integrate ZPUBs into Sparrow on both Transaction-Managers for a 3-of-5 multisig watch-only wallet.</li> </ol> 6. Validate Addresses for Future Deposits <ol> <li>Produce receive addresses in Sparrow on both Transaction-Managers.</li> <li>Following secure QR transfer procedures, relay addresses via QR to each Signing-Device for verification.</li> <li>Confirm derivation from ZPUB on each device.</li> </ol> 7. Test Setup with Small Transaction <ol> <li>Transfer a small Bitcoin amount following the Deposit procedure.</li> <li>Observe confirmation on both receive-only full nodes.</li> <li>Transfer some Bitcoin following the Withdrawal procedure (sign with three devices from different locations).</li> <li>Validate the workflow and record issues.</li> </ol>"},{"location":"saving/appendix/protocol_ludicrous/#deposit","title":"Deposit","text":"<p>Receive Bitcoin using unique, verified addresses confirmed through both receive-only full nodes.</p> 1. Generate Receive Address <ol> <li>Start Sparrow on both Transaction-Managers within the airgap.</li> <li>Generate a new receive address from the multisig descriptor and ensure it matches on both.</li> </ol> 2. Verify Address on Airgapped Device <p>Optional -- used when no pre-verified address is available.</p> <ol> <li>Following secure QR transfer procedures, send address data via QR to at least three Signing-Devices.</li> <li>Confirm ZPUB derivation on each device.</li> </ol> 3. Share Address with Sender <ol> <li>Deliver the verified address securely.</li> <li>Await the transaction in Sparrow on both Transaction-Managers.</li> </ol> 4. Monitor Incoming Transaction <ol> <li>Check the transaction on both receive-only full nodes or Sparrow on both Transaction-Managers.</li> <li>Await confirmations and ensure consistency across nodes.</li> </ol>"},{"location":"saving/appendix/protocol_ludicrous/#withdrawal","title":"Withdrawal","text":"<p>Spend Bitcoin via multisig signing with three Signing-Devices from different locations.</p> 1. Create Unsigned Transaction <ol> <li>Open Sparrow on both Transaction-Managers within the airgap.</li> <li>Select UTXOs, define recipient and amount.</li> <li>Export the PSBT as QR, ensuring both Transaction-Managers generate identical PSBTs.</li> </ol> 2. Transfer Unsigned Transaction to Airgapped Device <ol> <li>Following secure QR transfer procedures, convey the PSBT via QR to each of the three Signing-Devices in their respective locations.</li> <li>Load the PSBT on each device without signing.</li> </ol> 3. Sign Transaction <ol> <li>On each of the three Signing-Devices, load the assigned seed and generate a partial signature.</li> <li>Following secure QR transfer procedures, export the partial PSBT as QR to both Transaction-Managers.</li> <li>Power off devices to clear memory.</li> </ol> 4. Combine Signatures and Finalize Transaction <ol> <li>Merge the three partial signatures in Sparrow on both Transaction-Managers.</li> <li>Validate the finalized transaction on both systems.</li> </ol> 5. Inspect Transaction <ol> <li>Use detection tools (for Dark Skippy style attacks) on both Transaction-Managers to scan for anomalies.</li> <li>If issues are detected, abort and investigate.</li> </ol> 6. Broadcast Signed Transaction <ol> <li>Transfer the signed transaction from the airgap to the secure drop point.</li> <li>Broadcast via the online Transaction-Manager at the drop point.</li> <li>Monitor confirmations on both receive-only full nodes within the airgap.</li> </ol>"},{"location":"saving/appendix/protocol_ludicrous/#check-balance","title":"Check Balance","text":"<p>View balances without keys, using both receive-only full nodes.</p> 1. Sync Watch-Only Wallet <ol> <li>Start Sparrow on both Transaction-Managers within the airgap.</li> <li>Connect to their respective receive-only full nodes and sync.</li> </ol> 2. Query Balance for Multisig Addresses <ol> <li>Check the balance in Sparrow on both Transaction-Managers and confirm consistency.</li> </ol>"},{"location":"saving/appendix/protocol_ludicrous/#recovery","title":"Recovery","text":"<p>Restore from backups if keys or devices are lost. Use new Signing-Devices for multiple recoveries.</p> 1. Identify the Issue <ol> <li>Determine the recovery type (e.g., lost device).</li> <li>Retrieve metal backups from secure sites.</li> </ol> 2. Retrieve Backups <ol> <li>Access backups from their secure locations.</li> <li>Check tamper seals.</li> </ol> 3. Restore Keys on New Signing-Device <ol> <li>Input the backup seed on a new Signing-Device with privacy filters installed in a secure location.</li> <li>Validate the restored wallet.</li> </ol> 4. Rebuild Multisig Wallet Descriptor <ol> <li>Following secure QR transfer procedures, export ZPUBs to both Transaction-Managers.</li> <li>Recreate the multisig descriptor in Sparrow on both systems.</li> </ol> 5. Test Recovery with Small Amount <ol> <li>Perform a test transaction to confirm functionality.</li> </ol>"},{"location":"saving/appendix/protocol_ludicrous/#maintenance","title":"Maintenance","text":"<p>Sustain protocol integrity with regular tasks across all locations.</p> 1. Verify Metal Backups <ol> <li>Inspect tamper seals and metal condition at each secure site.</li> <li>Test seeds on Signing-Devices.</li> </ol> 2. Update Software and Firmware <ol> <li>Check for updates and verify signatures.</li> <li>Update firmware in an airgapped environment at each location.</li> </ol> 3. Run Full Node Health Checks <ol> <li>Ensure both receive-only full nodes are synced and consistent.</li> </ol> 4. Simulate Full Protocol Run <ol> <li>Test the entire protocol with small amounts, signing from multiple locations.</li> <li>Verify the secure environments and countermeasures.</li> </ol> 5. Check Secure Environments <ol> <li>Ensure shielded rooms, privacy filters, and white noise generators are functional at all locations.</li> <li>Inspect tamper-evident seals on Signing-Devices.</li> <li>Verify the integrity of the receive-only nodes and their connections.</li> </ol> <p>This protocol achieves Level 12 security by integrating geographically distributed key signing, an expanded airgap covering redundant DMZs, receive-only nodes (RF and satellite), redundant Transaction-Managers, and a secure drop point, all to protect a 3-of-5 multisig setup, ensuring protection against the most sophisticated threats.</p>"},{"location":"saving/appendix/protocol_ridiculous/","title":"Appendix: Ridiculous Protocol","text":"<p>This protocol delivers an ultra-secure 3-of-5 multisig Bitcoin self-custody system using five different Signing-Devices: three SeedSigners and two Coldcard Qs (one per seed). It leverages an airgap quarantine, a full node for verification, metal seed backups, and stringent quarantine rules to provide unparalleled protection. By using distinct devices per seed and implementing advanced countermeasures, this protocol achieves Level 11 security.</p>"},{"location":"saving/appendix/protocol_ridiculous/#secure-environment-and-countermeasures","title":"Secure Environment and Countermeasures","text":"<p>To safeguard against advanced threats, all QR code transfers must be conducted in a secure environment with the following countermeasures:</p> <ul> <li>Secure Space: A private, controlled room with no windows or cameras.</li> <li>Shielded Environment: A Faraday cage or shielded room to block electromagnetic emissions.</li> <li>Privacy Filters: Polarized screen protectors on all device screens to prevent optical eavesdropping.</li> <li>White Noise Generators: To mask acoustic signals during device operation.</li> <li>Privacy Enclosure: A lightproof booth for QR scanning to shield from external observation.</li> <li>Camera Blockers: Covers or tape to disable cameras on the Transaction-Manager when not in use.</li> <li>Tamper-Evident Seals: Applied to Signing-Devices when stored to detect unauthorized access.</li> <li>Minimize Exposure: Use dense QR codes and limit display time to reduce attack windows.</li> </ul> <p>Regular firmware checks must be performed on all Signing-Devices using tools to detect anomalies (e.g., Dark Skippy).</p>"},{"location":"saving/appendix/protocol_ridiculous/#setup","title":"Setup","text":"<p>Establish your 3-of-5 multisig wallet with five seeds created on dedicated Signing-Devices (one device per seed). Conduct this in a secluded, secure setting, maintaining airgaps and quarantine procedures.</p> 1. Prepare Secure Environments <ol> <li>Acquire five Signing-Devices: three SeedSigners and two Coldcard Qs, each for one seed.</li> <li>Set up a secure space for QR transfers: a private room with no windows or cameras, equipped with a Faraday cage, white noise generators, and a privacy enclosure.</li> <li>Install privacy filters on all Signing-Device and Transaction-Manager screens.</li> <li>Prepare camera blockers for the Transaction-Manager.</li> <li>Obtain tamper-evident seals for the Signing-Devices.</li> <li>Assemble the Transaction-Manager (Tails OS with persistent storage), linked to your full node.</li> <li>Install Sparrow and Dark Skippy detection tools on Tails OS persistent storage.</li> <li>Authenticate and update software and firmware for all devices.</li> </ol> 2. Generate Seeds <ol> <li>Activate each airgapped Signing-Device, one at a time.</li> <li>Generate a seed on each device (SeedSigner: Settings &gt; Seeds &gt; Generate Seed with dice; Coldcard Q: generate with dice). Ensure privacy filters are installed to protect displays.</li> <li>Jot the seed phrase on paper temporarily for confirmation.</li> <li>Validate the seed on the device display.</li> <li>Save as QR (SeedSigner: Export Seed QR; Coldcard Q: Export Seed QR).</li> <li>Repeat for all five seeds, powering off devices between steps. Label clearly (e.g., \"Signing-Device-1\", \"Signing-Device-2\").</li> </ol> 3. Backup to Metal <ol> <li>Stamp each seed onto durable metal backups.</li> <li>Cross-verify against the paper note.</li> <li>Incinerate the paper note.</li> <li>Store backups in distinct, secure sites with tamper-evident seals.</li> </ol> 4. Export ZPUBs to Transaction-Managers <ol> <li>On each Signing-Device, load its seed and export ZPUB (SeedSigner: Export XPUB &gt; Multisig; Coldcard Q: Export Wallet &gt; Multisig).</li> <li>Following secure QR transfer procedures, convey ZPUBs via QR to the redundant Transaction-Managers.</li> <li>Integrate ZPUBs into Sparrow for a 3-of-5 multisig watch-only wallet.</li> <li>Comfirm wallet fingerprint and addresses match identically between the two Transaction-Managers.</li> </ol> 5. Validate Addresses for Future Deposits <ol> <li>Produce receive addresses in Sparrow.</li> <li>Following secure QR transfer procedures, relay addresses via QR to each Signing-Device for verification.</li> <li>Confirm derivation from ZPUB on each device.</li> <li>Confirm addresses match between the two Transaction-Managers.</li> </ol> 6. Test Setup with Small Transaction <ol> <li>Transfer a small Bitcoin amount following the Deposit procedure.</li> <li>Observe confirmation on your full nodes.</li> <li>Transfer some Bitcoin following the Withdrawal procedure (sign with three devices).</li> <li>Validate the workflow and record issues, update the protocol as necessary.</li> </ol>"},{"location":"saving/appendix/protocol_ridiculous/#deposit","title":"Deposit","text":"<p>Receive Bitcoin using unique, verified addresses confirmed through redundant full nodes.</p> 1. Generate Receive Address <ol> <li>Start Sparrow on each Transaction-Manager.</li> <li>Generate a new receive address from the multisig descriptor.</li> <li>Confirm the exact same address and derivation path between the redundant Transaction-Managers.</li> </ol> 2. Verify Address on Airgapped Device <p>Optional -- used when no pre-verified address is available. 1. Following secure QR transfer procedures, send address data via QR to at least three Signing-Devices. 2. Confirm ZPUB derivation on each device.</p> 3. Share Address with Sender <ol> <li>Deliver the verified address securely.</li> <li>Await the transaction in Sparrow.</li> </ol> 4. Monitor Incoming Transaction <ol> <li>Check the transaction on redundamt full nodes or Sparrow.</li> <li>Await confirmations.</li> </ol>"},{"location":"saving/appendix/protocol_ridiculous/#withdrawal","title":"Withdrawal","text":"<p>Spend Bitcoin via multisig signing with three Signing-Devices.</p> 1. Create Unsigned Transaction <ol> <li>Open Sparrow on both Transaction-Managers.</li> <li>Select UTXOs, define recipient and amount.</li> <li>Export the PSBT as QR.</li> <li>Confirm identical PSBTs between the two Transaction-Managers.</li> </ol> 2. Transfer Unsigned Transaction to Airgapped Device <ol> <li>Following secure QR transfer procedures, convey the PSBT via QR to each Signing-Device.</li> <li>Load the PSBT on each device.</li> </ol> 3. Sign Transaction <ol> <li>On three Signing-Devices, load the assigned seed and generate a partial signature.</li> <li>Following secure QR transfer procedures, export the partial PSBT as QR to both Transaction-Managers.</li> <li>Power off devices to clear memory.</li> </ol> 4. Combine Signatures and Finalize Transaction <ol> <li>Merge the three partial signatures in Sparrow on both Transaction-Managers.</li> <li>Validate the finalized transaction.</li> <li>Confirm signed transactions are identical in all critical fields between the two redundant Transaction-Managers.</li> </ol> 5. Inspect Transaction <ol> <li>Use detection tools (for Dark Skippy type attacks) to scan for anomalies.</li> <li>If issues are detected, abort and investigate.</li> </ol> 6. Broadcast Signed Transaction <ol> <li>Broadcast via your full nodes.</li> <li>Monitor confirmations.</li> </ol>"},{"location":"saving/appendix/protocol_ridiculous/#check-balance","title":"Check Balance","text":"<p>View balances without keys, using your full nodes.</p> 1. Sync Watch-Only Wallet <ol> <li>Start Sparrow on both Transaction-Managers.</li> <li>Connect each to the respective full node and sync.</li> </ol> 2. Query Balance for Multisig Addresses <ol> <li>Check the balance in Sparrow.</li> <li>Confirm the exact balance and transaction info between the two redundant nodes and Transaction-Managers.</li> </ol>"},{"location":"saving/appendix/protocol_ridiculous/#recovery","title":"Recovery","text":"<p>Restore from backups if keys or devices are lost. Use new Signing-Devices for multiple recoveries.</p> 1. Identify the Issue <ol> <li>Determine the recovery type (e.g., lost device).</li> <li>Retrieve metal backups.</li> </ol> 2. Retrieve Backups <ol> <li>Access backups from secure sites.</li> <li>Check tamper seals.</li> </ol> 3. Restore Keys on New Signing-Device <ol> <li>Input the backup seed on a new Signing-Device with privacy filters installed.</li> <li>Validate the restored wallet.</li> </ol> 4. Rebuild Multisig Wallet Descriptor <ol> <li>Following secure QR transfer procedures, export ZPUBs to the redundant Transaction-Managers.</li> <li>Recreate the multisig descriptor in Sparrow on both Transaction-Managers.</li> </ol> 5. Test Recovery with Small Amount <ol> <li>Perform test transactions (Deposit and Withdrawal) to confirm functionality.</li> </ol>"},{"location":"saving/appendix/protocol_ridiculous/#maintenance","title":"Maintenance","text":"1. Verify Metal Backups <ol> <li>Inspect tamper-evident seals and metal condition.</li> <li>Test seeds on Signing-Devices.</li> </ol> 2. Update Software and Firmware <ol> <li>Check for updates and verify signatures.</li> <li>Update firmware in an airgapped environment.</li> </ol> 3. Run Full Node Health Checks <ol> <li>Ensure blockchain sync and system health.</li> </ol> 4. Simulate Full Protocol Run <ol> <li>Test the entire protocol with small amounts.</li> <li>Verify the secure environment and countermeasures.</li> </ol> 5. Check Secure Environment <ol> <li>Ensure the shielded room, privacy filters, and white noise generators are functional.</li> <li>Inspect tamper-evident seals on Signing-Devices.</li> </ol> <p>This protocol achieves Level 11 security by integrating advanced countermeasures into a 3-of-5 multisig setup, ensuring protection against even the most sophisticated threats.</p>"},{"location":"saving/appendix/protocol_template/","title":"Appendix: Custom Protocol Template","text":"<p>This is a customizable template for creating your own multisig Bitcoin self-custody protocol. It assumes a generic multisig setup (e.g., 2-of-3) with airgapped Signing-Devices, a full node for verification, metal seed backups, and quarantine rules to prevent contamination between online and offline environments. </p>"},{"location":"saving/appendix/protocol_template/#setup","title":"Setup","text":"<p>This section covers the initial configuration of your multisig wallet and keys. Perform these steps in a secure, private environment. Ensure all devices are airgapped where required, and use quarantine procedures to avoid cross- contamination.</p> 1. Prepare Devices <ol> <li>Set up an Airgapped-Computer for offline operations.</li> <li>Set up a Transaction-Manager, using Tails OS with persistent storage, connected to    your full node.</li> <li>Review and prepare for the quarantine rules in Level 5.</li> <li>Verify all software and firmware: Download from official sources, check    signatures, and ensure they are up-to-date.</li> <li>Prepare metal backup tools for seed phrases.</li> <li>optional install Sparrow on the Transaction-Manager via Tails OS with persistent storage</li> </ol> 2. Generate Seeds <ol> <li>Power on each airgapped Signing-Device (e.g., one per key in your    multisig setup).</li> <li>Generate a new seed phrase on each Signing-Device (e.g., using dice rolls to ensure entropy).</li> <li>Write down the seed phrase temporarily on paper for verification.</li> <li>Confirm the seed phrase on the device to ensure accuracy.</li> <li>Repeat for each required key in your multisig configuration (e.g., 3 devices for a 2-of-3 setup).</li> </ol> 3. Backup to Metal <ol> <li>Stamp each seed phrase onto durable metal backups.</li> <li>Verify the metal seed by comparing it to the temporary paper note.</li> <li>Destroy the temporary paper note (e.g., burn it).</li> <li>Store each metal backup in a separate, secure location.</li> <li>Use tamper-evident seals on storage containers.</li> </ol> 4. Export ZPUBs to Transaction-Manager <ol> <li>On each Signing-Device, export the extended public key (ZPUB for multisig).</li> <li>Transfer the ZPUB data to your Transaction-Manager via quarantine procedure.</li> <li>Import the ZPUB into your Transaction-Manager (Tails OS).</li> <li>Verify the wallet descriptor matches your intended configuration.</li> </ol> 5. Validate Addresses for Future Deposits <ol> <li>Generate several receive addresses in Electrum or Sparrow on Tails OS.</li> <li>Transfer the addresses to airgapped Signing-Devices via QR or USB for    verification.</li> <li>On each Signing-Device, confirm the addresses derive from the correct ZPUB.</li> <li>Note any derivation paths or address types (e.g., P2WSH for multisig).</li> <li>Store validated addresses in a secure, offline list for reference.</li> </ol> 6. Test Setup with Small Transaction <ol> <li>Deposit a small amount of Bitcoin to a test address following the Deposit section below.</li> <li>Monitor confirmation on your full node.</li> <li>Attempt a small withdrawal following the Withdrawal section below.</li> <li>Verify the entire process works end-to-end.</li> <li>Document any issues and adjust the protocol as needed.</li> </ol>"},{"location":"saving/appendix/protocol_template/#deposit","title":"Deposit","text":"<p>This section is for receiving Bitcoin securely. Always generate new addresses to avoid reuse, and verify everything through your full node. Customize with specific sender instructions if needed.</p> 1. Generate Address <ol> <li>Open Sparrow on the Transaction-Manager.</li> <li>Generate a new receive address from the multisig descriptor.</li> <li>Label the address for tracking (e.g., \"Deposit from Exchange - Date\").</li> <li>Copy the address or create a QR code for easy sharing.</li> </ol> 2. Verify Address <p>This step is optional, especially if you have already verified the address in the setup above -- if you're unsure, it's best to verify addresses before use.</p> <ol> <li>Transfer the address (e.g., via QR code via quarantine procedure) to each Signing-Device.</li> <li>On each device, confirm the address matches the expected derivation from your ZPUB.</li> <li>Ensure all required devices agree on the address validity.</li> </ol> 3. Share Address with Sender <ol> <li>Provide the verified address to the sender via secure channel (e.g., encrypted message) in order to avoid public exposure of the address.</li> <li>Instruct the sender to double-check the address before sending.</li> <li>Note the expected amount and sender for reference.</li> <li>Wait for the transaction to appear.</li> </ol> 4. Monitor Incoming Transaction <ol> <li>Use your full node or Sparrow on Tails OS to scan for the transaction.</li> <li>Check transaction details: Amount, fees, and inputs.</li> <li>Wait for initial confirmation (e.g., 1 block).</li> <li>Monitor for RBF (Replace-By-Fee) flags if applicable.</li> </ol> 5. Confirm <ol> <li>Wait for sufficient confirmations (e.g., 6 blocks for standard security).</li> <li>Verify the transaction on your full node to ensure it's in a valid block on-chain.</li> <li>Verify balance following the Check Balance section below.</li> </ol>"},{"location":"saving/appendix/protocol_template/#withdrawal","title":"Withdrawal","text":"<p>This section details spending Bitcoin via multisig signing. Use this for transfers or spends, ensuring all steps are followed to avoid errors. Customize with specific recipient details.</p> 1. Create Unsigned Transaction <ol> <li>Open Sparrow on the Transaction-Manager.</li> <li>Select UTXOs to spend and specify recipient address(es) and amounts.</li> <li>Set appropriate fees based on mempool conditions (use your full node for estimates).</li> <li>Generate the unsigned transaction (e.g., PSBT).</li> <li>Save the unsigned transaction to a sanitized USB or export as QR.</li> </ol> 2. Transfer Unsigned Transaction to Signing-Device <ol> <li>Follow all Quarantine Rules</li> <li>Power on Signing-Devices (and Airgap-Conputer if applicable).</li> <li>Copy the unsigned transaction from the Transaction-Manager to each Signing-Device via quarantine procedure.</li> <li>Inspect transaction details on the device screen (e.g., outputs, fees).</li> </ol> 3. Sign Transaction <ol> <li>On the first Signing-Device, review the transaction details. Abort if there's any problem or concern.</li> <li>Access the seed and sign the transaction, generating a partial signature.</li> <li>Export the partially signed transaction (e.g., to USB or QR).</li> <li>Repeat for each required key/device in your multisig.</li> </ol> 4. Finalize Transaction <ol> <li>Transfer all partial signatures back to the Transaction-Manager via    quarantine.</li> <li>In Sparrow on Tails OS, combine the signatures into a fully signed transaction.</li> <li>Verify the final transaction is complete and valid.</li> <li>Check for any errors in signature combination.</li> <li>Save the signed transaction.</li> </ol> 5. Broadcast Transaction <ol> <li>Connect to your full node or a trusted broadcaster.</li> <li>Submit the signed transaction to the network.</li> <li>Monitor for acceptance into the mempool.</li> <li>Track confirmations on your full node.</li> </ol>"},{"location":"saving/appendix/protocol_template/#check-balance","title":"Check Balance","text":"<p>This section explains how to view balances without exposing keys. Always use your own full node for primary verification; external sources are optional and for cross-checking only. Never expose your ZPUB publicly.</p> 1. Sync Full Node <ol> <li>Open Sparrow on the Transaction-Manager.</li> <li>Ensure it's connected to your full node.</li> <li>Verify latest block hashes with public block explorers.</li> </ol> 2. Query Balance <ol> <li>View the total balance in Sparrow on Tails OS (Transaction-Manager).</li> <li>List recent transactions for context.</li> <li>Calculate available spendable amount (accounting for fees).</li> </ol> 3. Optional: Verify A Separate Full Node <ol> <li>If using a secondary full node, query the same addresses there.</li> <li>Compare balances and UTXOs for consistency.</li> <li>Investigate any discrepancies immediately.</li> </ol>"},{"location":"saving/appendix/protocol_template/#recovery","title":"Recovery","text":"<p>This section covers restoring from backups or handling lost keys. Use this in case of device failure, loss, or other issues. Test this process periodically. Customize with specific backup locations (e.g., \"Contact Aunt Jane for Key 3\").</p> 1. Identify the Issue <ol> <li>Determine what needs recovery (e.g., lost key, damaged device, etc).</li> <li>Gather all available metal backups and protocol documents.</li> <li>Assess if the multisig threshold can still be met (e.g., 2-of-3 with one lost).</li> <li>If threshold can't be met, proceed to full seed recovery.</li> <li>Document the recovery attempt.</li> </ol> 2. Retrieve Metal Backups <ol> <li>Access your metal backups.</li> <li>Check tamper-evident seals for integrity.</li> <li>Transcribe seeds from metal to temporary paper if needed.</li> <li>Verify transcription accuracy.</li> <li>Handle backups in a private, secure environment.</li> </ol> 3. Restore Keys on New Signing-Devices <ol> <li>Acquire new airgapped Signing-Devices (e.g., same model as original).</li> <li>Enter the seed phrase from backup on each device.</li> <li>Verify the restored wallet matches the original (e.g., check ZPUB).</li> <li>Regenerate any necessary data (e.g., export new ZPUBs if paths differ).</li> <li>Destroy temporary paper notes securely.</li> </ol> 4. Rebuild Multisig Wallet <ol> <li>Export XPUBs/ZPUBs from restored devices to the Transaction-Manager via    quarantine.</li> <li>In Sparrow on Tails OS, recreate the multisig descriptor.</li> <li>Verify it matches the original descriptor.</li> <li>Rescan the blockchain on your full node.</li> <li>Confirm all UTXOs are detected.</li> </ol> Test Recovery with Small Amount <ol> <li>Deposit a small test amount if possible.</li> <li>Follow the Withdrawal section to spend it.</li> <li>Ensure the recovered setup works fully.</li> <li>Update protocol documents with any changes.</li> <li>Store new backups if devices were replaced.</li> </ol>"},{"location":"saving/appendix/protocol_template/#maintenance","title":"Maintenance","text":"<p>This section outlines ongoing tasks to keep your protocol secure. Perform these periodically (e.g., quarterly) to prevent issues. Customize schedules or tasks as needed.</p> 1. Verify Metal Backups <ol> <li>Access backups in rotation (e.g., one per session).</li> <li>Check for damage or corrosion.</li> <li>Transcribe and verify a seed on a test device.</li> <li>Reseal and return to storage.</li> <li>Update locations if needed.</li> </ol> 2. Update Software and Firmware <ol> <li>Check for updates on official sites.</li> <li>Verify signatures before installing.</li> <li>Update Sparrow on Tails OS and full node first.</li> <li>For Signing-Devices, update firmware airgapped if possible.</li> <li>Test compatibility post-update.</li> </ol> 3. Run and verify Full Node <ol> <li>Verify node synchronization with the blockchain.</li> <li>Check disk space, uptime, and connections.</li> <li>Prune if needed, but retain necessary data.</li> <li>Backup node configuration.</li> <li>Restart and monitor for errors.</li> </ol> Simulate Full Protocol Run <ol> <li>Perform a test deposit and withdrawal with minimal funds.</li> <li>Include recovery simulation (without actual loss).</li> <li>Time the process and note improvements.</li> <li>Involve heirs in a dry run if applicable.</li> <li>Update the protocol document with lessons learned.</li> </ol>"},{"location":"saving/appendix/protocol_template/#inheritance","title":"Inheritance","text":"<p>This section provides instructions for heirs or trusted parties to access funds. Share this section securely with them in advance, but withhold sensitive details like backup locations until needed. Customize with heir-specific roles.</p> Provide Overview to Heirs <ol> <li>Explain the multisig setup and protocol basics to trusted parties (customize: \"Brief family members on 2-of-3 setup\").</li> <li>Share a redacted version of this document (e.g., without locations).</li> <li>Designate roles (e.g., who holds which key; customize: \"Uncle Bob holds Key 3\").</li> <li>Discuss legal aspects (e.g., wills, dead-man switches).</li> <li>Ensure heirs understand the importance of security.</li> </ol> Locate and Access Backups Securely <ol> <li>Provide clues or instructions for finding metal backups (e.g., via    lawyer or safe; customize: \"Check my will for locations\").</li> <li>Instruct on checking tamper seals.</li> <li>Advise using a secure environment for access.</li> <li>Recommend consulting a Bitcoin expert if needed.</li> <li>Warn against rushing or public exposure.</li> </ol> Follow Setup/Recovery Steps as Needed <ol> <li>If keys are intact, follow the Setup section to initialize devices.</li> <li>For lost elements, use the Recovery section.</li> <li>Rebuild the Transaction-Manager (Tails OS) on a new Transaction-Manager.</li> <li>Verify everything through a full node.</li> <li>Test with a small transaction if possible.</li> </ol> Execute a Withdrawal if Authorized <ol> <li>Gather required Signing-Devices and meet the multisig threshold.</li> <li>Follow the Withdrawal section carefully.</li> <li>Send to a secure, heir-controlled address.</li> <li>Monitor and confirm the transaction.</li> <li>Document the process for records.</li> </ol>"},{"location":"saving/appendix/protocols/","title":"Appendix 1: Protocols","text":"<ul> <li>Basic -- an airgap quarantine using a singlesig seedsigner, achieves Level 6.</li> <li>Advanced -- an airgap quarantine with redundant 2-of-3 multisig, achieves Level 9.</li> <li>Ridiculous -- physical and electronic countermeasures in a 3-of-5 multisig, achieves Level 11.</li> <li>Ludicrous -- expanded airgap quarantine covering fully refundant read-only nodes and a veritable hero's journey as a signing ceremony, achieves Level 12.</li> </ul> <p>In practice, you should create your own custom protocol using the above (or from the template).</p>"},{"location":"saving/appendix/vaults/","title":"Appendix 4: Covenant Vaults","text":"<p>Bitcoin's evolution continues to prioritize security and sovereignty, with proposals like covenant vaults introducing programmable restrictions on how coins can be spent.  This appendix explores covenants and their application in vaults -- advanced mechanisms for secure storage, though it carries additional risks. Drawing from ongoing Bitcoin Improvement Proposals (BIPs) such as <code>OP_VAULT</code> (BIP-345) and <code>OP_CHECKTEMPLATEVERIFY</code> (BIP-119) or CTV,  these features aim to enhance self-custody.  By enforcing spending conditions, covenants enable \"vaults\" that protect against theft,  making them ideal for long-term saving, inheritance, and family wealth preservation.</p>"},{"location":"saving/appendix/vaults/#bitcoin-covenants","title":"Bitcoin Covenants","text":"<p>Covenants are script-based restrictions that dictate how Bitcoin can be spent in future transactions,  going beyond simple locks to enforce ongoing conditions.  Unlike standard scripts that control immediate spending,  covenants \"covenant\" or bind future outputs, ensuring coins follow predefined paths -- such as time delays or specific addresses.</p> <ul> <li>CheckTemplateVerify (CTV): Proposed in BIP-119, CTV allows a transaction to commit to a template of future spends, verifying hashes to ensure outputs match exact structures. This enables simple vaults by pre-committing to delayed or conditional transactions.</li> <li>OP_VAULT (BIP-345): A more flexible opcode for creating vaults, allowing \"unvaulting\" with delays (e.g., requiring two blocks for spends) to give owners time to intervene in case of hacks.</li> <li>Other Proposals: CheckSigFromStack (CSFS) for verifying signatures in scripts, and innovations like PIPEs (Proofs in Protocol Execution) combining covenants with zero-knowledge proofs (ZKPs) for L1 enhancements without soft forks.</li> </ul> <p>Covenants address limitations in Bitcoin's scripting, enabling features like secure custody protocols and programmable money flows, all while maintaining decentralization.</p> Covenant Type Core Function Example Use CTV Template hashing for fixed spends Pre-committing to a recovery address. OP_VAULT Delayed unvaulting with triggers Theft prevention via time-locked spends. CSFS Signature verification in scripts Delegated emergency spends without keys."},{"location":"saving/appendix/vaults/#bitcoin-vaults","title":"Bitcoin Vaults","text":"<p>Vaults leverage covenants to create outputs where funds are locked under conditions that enhance security, reducing risks like theft or loss.  In essence, they make Bitcoin storage more robust by design -- funds are secured in a script that enforces rules, with access only under specific, delayed actions.</p> <ul> <li>Basic Vault Setup: Funds are sent to a Pay-to-Taproot (P2TR) address with covenant scripts. To spend, a \"trigger\" transaction must be broadcast, followed by a delayed confirmation (e.g., via <code>OP_CHECKSEQUENCEVERIFY</code> or CSV), giving time for a \"clawback\" to a cold wallet if unauthorized.</li> <li>Vault Aspect: Covenants handle restrictions -- e.g., using NUMS (Nothing-Up-My-Sleeve) points as internal keys to force script-path spends only.</li> <li>Hybrid Variants: Combine CTV for standard paths and CSFS for emergencies, allowing pre-signed delegations (e.g., \"send X sats to Y by block Z\") without full handover.</li> <li>Implementation Example: On testnets like Mutinynet, vaults use Taproot leaves: One for CTV-clawback (immediate to cold storage), another for CSFS-delegation (bypassing delays for authorized ops).</li> </ul>"},{"location":"saving/appendix/vaults/#proposals","title":"Proposals","text":"<p>Several BIPs advance this tech:</p> <ul> <li>BIP-345 (OP_VAULT): Introduces opcodes for vault creation, with recovery paths.</li> <li>CTV + CSFS Combinations: Enable basic/hybrid vaults on signets, as demonstrated in POCs.</li> <li>PIPEs: Covenant-like features with ZKPs for no-soft-fork upgrades.</li> </ul> <p>While not yet mainnet-activated, testnet demos show viability. For users, integrate with hardware wallets or collaborative custody for vault functionality.</p>"},{"location":"saving/appendix/vaults/#risks","title":"Risks","text":"<ul> <li>Complexity: Script errors could lock funds; thorough testing needed.</li> <li>Adoption Barriers: Requires consensus for activation; debates on \"restrictive\" covenants persist.</li> <li>Regulatory Scrutiny: Programmable spends might attract oversight.</li> </ul> Risk Impact Mitigation Script Bugs Fund Loss Use audited BIPs and simulations. Soft Fork Delays Slow Rollout Explore no-fork alternatives like PIPEs. Over-Restriction Reduced Flexibility Design vaults with escape hatches. <p>Vaults represent a potential leap in Bitcoin's programmability, offering secure storage that bolsters wealth preservation.  By enforcing low-time-preference through delays and conditions, they empower families to build enduring legacies, free from fiat's vulnerabilities.  As proposals like <code>OP_VAULT</code> progress, you may want to integrate them into your sovereignty journey -- starting with basic self-custody and evolving to vaulted setups. </p>"},{"location":"saving/sovereignty/","title":"Sovereignty","text":"<p>Be a Sovereign over your own Savings</p> <p>Unlike physical custody of assets,   saving in Bitcoin   means storing information, a key or seed phrase,  and to store it in such a way that no one else  would ever be able to know it.</p> <p>For example, consider the following seed phrase,</p> <p>holiday crew machine fatigue welcome start axis cancel field slim rifle hero</p> <p>Because this seed phrase has been revealed,  anyone can generate private keys from this seed,  which will access any Bitcoin at any of the derived addresses (from this seed).</p> <p>What if you had to secure this seed phrase?</p> <p>In other words, how would you secure this phrase   such that,</p> <ol> <li>The seed phrase is accessible to those you trust (family members and the like), and</li> <li>No one else could ever know the seed phrase</li> </ol> <p>Knowing how to fulfill the above   is at the heart of how to save in Bitcoin.</p>"},{"location":"saving/sovereignty/#self-custody","title":"Self Custody","text":"<p>To self custody means you personally   secure your seed phrase and manage your own keys. This is the recommended approach and  it is also the only way to properly secure your  Bitcoin.</p> <p>With self custody you could decide that you'd rather die than give up your Bitcoin;  that it will go to your children or else to no one. This may sound silly and rather extreme, but Bitcoin is the only asset  in the history of the world where you can meaningfully accomplish this level of ownership. And you can accomplish this without lawyers or politicians. In fact, you can accomplish this even in opposition to lawyers and politicians  (as well as churches or nation states).</p> <p>Can you say the same about stocks, bonds, real-estate, or any modern financial instrument?</p> <p>The closest you might get is a physical possession, a bearer asset such as gold bullion.</p> <p>But there is an important difference:  with the use of force anyone can take possession of gold bullion  (as has happened over-and-over throughout history),  incentivizing the use of force to seize wealth.  But with Bitcoin, use of force is far less effective.   You can transfer your Bitcoin anywhere in the world.  And in the extreme, you can take your Bitcoin to the grave.</p> <p>This subtle difference shifts the balance of power,  aligning incentives with voluntary cooperation  and not with force or fiat. With Bitcoin, you truly can be  a sovereign over your own savings.</p>"},{"location":"saving/sovereignty/#who-owns-your-bitcoin","title":"Who owns your Bitcoin?","text":"<p>If you trust an institution to custody your Bitcoin,  then it's not your Bitcoin, it's their Bitcoin.  And no matter how secure their custody system,  it will never be as secure as your own self custody.</p> <p>Not your Bitcoin</p> <p>An institution that holds \"your\" Bitcoin can use \"your\" Bitcoin as collateral for \"their\" loan. If they're particularly clever they can buy more Bitcoin with that loan,  and if they're devious they'll create fractional reserve schemes. And if they go bankrupt do you really think you'll  get \"your\" Bitcoin back?</p> <p>An institution with \"your\" Bitcoin can  lock you out of your account. The governments in whichever countries the institution resides can freeze and even seize your funds. Perhaps your name was too similar to someone on a sanctions list, or perhaps your government is in a dispute with another government and they  suspend your account.</p> <p>A hacker who learned your mother's maiden name may be able to withdraw \"your\" Bitcoin.  Perhaps one of the many data breaches resulted in your personal information leaking out, putting \"your\" Bitcoin at risk, through the fault of the very institutions trusted to secure your information.</p>"},{"location":"saving/sovereignty/#its-easy","title":"It's Easy","text":"<p>There's a common misconception that Bitcoin self custody is hard.</p> <p>In practice, saving in Bitcoin is as easy as changing a light-bulb,  and it is vastly easier than online banking, not to mention far more secure.  Bitcoin is as secure as you want it to be, from trivial to nuclear-launch-code  level of security.</p> <p>Bitcoin is hard? Compared to what?!</p> <p>Let's look at the security setup for  accessing a typical online banking service,  and determine how easy and secure things really are.</p> Typical Online Banking <p>The bank requires a \"strong password\", the kind recommended by security experts.</p> <p>You use a Password Manager to generate \"strong passwords\", and your online banking password is something like <code>CH\"sgK9'?f&lt;WZWYS</code>.</p> <p>The bank requires multi-factor authentication (MFA),  and you've been told by security experts not to rely on SMS text messages for MFA, so you install an IdP app, which requires its own password with optional biometric verification.</p> <p>You generate another \"strong password\" for your IdP app, this one is <code>DVqt*\\Hax2$YD5vK</code>.</p> <p>The bank asks for your email address and asks you to verify it. You realize your email can be used to reset passwords, and fortunately you've already enabled MFA for your email service and used a \"strong password\", which is <code>c9~%C8UMNp+ung9=</code>.</p> <p>The bank also requires AML/KYC, so you provide them copies of your passport and you upload an image of yourself holding your passport along with a piece of paper that has your written signature and today's date. You feel stupid sending your bank a selfie, but you do it anyway.</p> <p>The bank also asks you to select and answer three \"security questions\", and you go with your high-school mascot, name of your first pet, and the city you met your significant other (Cherokees, Rex, Hoboken).</p> <p>The password manager also requires its own \"strong password\" and in case you forget that one, they provide you a \"secret key\" that they recommend  you print out and keep someplace safe. This \"secret key\" they tell you, can be used to recover all of your passwords, so you have to keep it very safe.</p> <p>You write down the following on a piece of paper,</p> <p>6QRDjV7MmznW63yjZWM5c8ngC5rxQhZxAPXrzfuYbg8CZuLT</p> <p>and you put that paper in a fire-proof lockbox.</p> <p>We could keep going with this all-too-common tale of security theater   (and you've no doubt already experienced much of this),  but let's pause here  and analyze how easy and how secure this system really is --</p> Security Review <p>In practice, your personal information has certainly been leaked out to the dark web multiple times (through any one of the high-profile data breaches that you read about in the news). Tying your wealth to personal information is generally a bad idea, but impossible to avoid with institutional custody.</p> <p>A fire-proof lockbox would not preserve a piece of paper through a house fire.</p> <p>Regardless, there's a much bigger problem -- a barely competent hacker could call your bank and impersonate you. With a quick glance at your social media, they could answer the security questions (Cherokees, Rex, Hoboken), then they reset the password, change the security questions, liquidate the account, and finally they close the account.</p> <p>If this happens, you'll find yourself locked out of your own account, and after weeks of calling the bank and getting a lawyer involved you will eventually learn what happened. Your account was liquidated. The bank assumes no responsibility, and they give you the number for the FBI. They blame the whole ordeal on your weak security questions  and point to the terms and services that you signed (but never read).</p> <p>In case it's not obvious, online banking is vastly more complicated  than anything you'll encounter with Bitcoin.  And you'll find all the same cryptographic concepts,  such as private keys and recovery seeds, but the bank and apps will  apply them in comically useless ways that add no real security  and still manage to leave you vulnerable.</p> <p>No reasonable person would conclude that the current state  of online security is easy.  Securing your identity across disparate technology  and banking providers is not easy.  And worse, it is getting harder and harder by the day.</p> <p>But is Bitcoin really as easy as changing a light-bulb?</p> <p>Yes, and definitely easier than  the security theater of online banking.</p> <p>Bitcoin is new and can seem complicated. But imagine asking a person from the  middle ages to change a light bulb.  They'd be confused and  without explicit instructions they would probably electrocute themselves.</p> <p>Bitcoin is no different.  Future generations may laugh at us for being so hopelessly ignorant of what will seem obvious and intuitive to them.</p>"},{"location":"saving/sovereignty/#really-its-easy","title":"Really, It's Easy","text":"<p>Securing your assets in the traditional fiat banking system requires  a Rube-Goldberg-Machine of security-theater  where telling a call-center operator in the Philipines  your mother's maiden name  somehow constitutes security.</p> <p>Bitcoin self custody offers real security.   And thus the risk of losing your funds in traditional banking  is far higher than any reasonable self custody solution.</p> <p>Sounds like banking. Why would I want to be a bank?</p> <p>You don't, and that's the point.</p> <p>Bitcoin allows superior custody services  that no bank or institution will ever be able  to match. You secure your own wealth by securing a seed phrase. There's no bullion to protect, only information. A custody service must protect that  same information while also allowing you access to it, which simply shifts the burden back onto you, adding unecessary complexity and vulnerability.</p> <p>Bitcoin self custody is exactly as hard   as learning about the Internet in the 1990s. It's new, it's different,  and it confuses those who haven't realized  just how disruptive this kind of technology truly is.</p> <p>The claims that it's too difficult are  patronizing and wrong. Managing your keys is easier than  driving a car,  buying a house,  or any of the myriad of tasks  we expect fully grown adults  to manage.</p> <p>I heard it requires 'persistent competence', is that true?</p> <p>That's online banking you're thinking about.</p> <p>A redneck with a gun and a coldcard can protect their Bitcoin with more security than any bank in the history of the world. And besides, if you're competent enough to have wealth,  you should be competent enough to preserve wealth.</p>"},{"location":"saving/sovereignty/level-1/","title":"Level 1: Getting Started","text":"<p>Save Bitcoin using a reputable exchange (a small amount that you can risk losing).</p> <p> Level 1 -- typical home network with devices that can reach a Bitcoin exchange </p> <p>The only way to get started   with Bitcoin is to first get some Bitcoin. The experienced Bitcoiners will tell you  \"don't leave Bitcoin on an exchange\",   and while this is true, this remains  the easiest and least-friction path  to getting Bitcoin that is secured, somewhere. This is also an easy way to learn about  Bitcoin: buy some on an exchange and  try to use it!</p>"},{"location":"saving/sovereignty/level-1/#advantages-of-an-exchange","title":"Advantages of an Exchange","text":"<ul> <li>device agnostic -- because it's an online account, you can access the exchange from a laptop, smarthphone, or wherever</li> </ul>"},{"location":"saving/sovereignty/level-1/#disadvantages-of-an-exchange","title":"Disadvantages of an Exchange","text":"<ul> <li>it is not your Bitcoin -- it will belong to the Exchange, and they will let you access it at their whim (according to their terms-of-service and availability)</li> <li>it's much less secure than self custody -- it will be as secure as your login credentials (your password, MFA, etc) and the exchange's \"forgot password\" mechanism</li> <li>it requires strict KYC processes such that you lose all privacy and security that Bitcoin otherwise could have offered</li> <li>initial account setup can be difficult due to integrations and slowness with legacy financial networks (e.g., waiting to verify a checking account for ACH transfers)</li> </ul> <p>Despite the many disadvantages it can be very educational to setup an exchange account. You will learn about ACH and wire transfers and the lengthy waiting periods  needed before fiat money can settle.  Bitcoin reaches final international settlement quickly,  and as a result it puts strain on the existing financial rails  even for small amounts.</p>"},{"location":"saving/sovereignty/level-1/#alternatives","title":"Alternatives","text":"<p>If you can acquire  Bitcoin directly without an exchange  then you may want to skip to  level-2.</p> <p>Here are some alternative ways  to get Bitcoin (without an exchange).</p> <ul> <li>get paid in Bitcoin -- you know someone who is willing to pay you in Bitcoin directly</li> <li>trade with someone -- similar to above, you have something to sell and the buyer can pay directly in Bitcoin</li> <li>Bisq or Azteco -- useful for the privacy conscious, peer-to-peer exchanges which assume you are already on level-2</li> </ul> <p>There are many   alternatives,  and ultimately   it depends on your circumstances whether  an online exchange is appropriate for you.</p>"},{"location":"saving/sovereignty/level-1/#find-a-reputable-exchange","title":"Find a Reputable Exchange","text":"<p>Not all exchanges are equal, in fact, most are downright scammy and poorly managed. Experienced Bitcoiners are not at all surprised when overleveraged \"crypto\" companies go bankrupt. Here are some criteria to look for when evaluating an exchange:</p> <ul> <li>Withdrawal support -- this is the most critical requirement; avoid any exchange that does not allow you to transfer your Bitcoin to your own self custody. Otherwise you have no Bitcoin, only an IOU. And importantly, selling Bitcoin for fiat (as a means to withdraw) is a taxable event in the US.</li> <li>Bitcoin-only -- if they offer other \"cryptocurrencies\", full stop, go to a different platform. This may seem extreme, but there are valid security concerns. The technology behind Bitcoin is non-trivial, and even a Bitcoin-only exchange will have serious challenges to overcome when building a proper custody and trading system. Exchanges that list Bitcoin as \"one of many cryptocurrencies\" are most likely scams and cannot offer the base level of security and identity protection that you will need.</li> <li>Future-proof -- a competent Bitcoin-focused company will build on top of Bitcoin: lightning integration, mining services, or other related products. Ultimately, a fiat-to-Bitcoin exchange will not lead to long-term profit, and any exchange not looking to the future should be avoided (as their short-term profits will likely be at your expense).</li> <li>No scammy yield products -- if they promise some % yield through some unspecified source, go to a different platform. This is not only a security concern but it's also very likely a future bankruptcy ending in you losing your wealth.</li> </ul>"},{"location":"saving/sovereignty/level-1/#reputable-exchanges","title":"Reputable Exchanges","text":"<p>no paid nor influenced content -- all views are from personal experience</p> <p>There are only two exchanges I would recommend:</p>"},{"location":"saving/sovereignty/level-1/#river-financial","title":"River Financial","text":"<p>River is a Bitcoin-only fintech with probably the most reliable and impressive tech stack.  During bull markets you'll find many popular exchanges (coinbase, gemini, etc)  will be unresponsive and unable  to handle spikes in traffic, or they may have issues integrating with your bank, or any number of problems. Meanwhile, River has proven extremely reliable and easy to use through bull and bear markets.</p>"},{"location":"saving/sovereignty/level-1/#swan-bitcoin","title":"Swan Bitcoin","text":"<p>Swan Bitcoin is perhaps the most Bitcoin-focused exchange in the world; and it seems  everyone at Swan (at any level) is a Bitcoiner. Swan openly embraces and encourages  self custody, allowing you to setup recurring buys that will transfer to your own  custody automatically.</p>"},{"location":"saving/sovereignty/level-10/","title":"Level 10: Fail-safes","text":"<p>Require fully redundant networks with explicit verification of cryptographic signatures.</p> <p> Level 10 -- redundant networks </p> <p>Level 10 achieves ultimate fault tolerance by implementing redundant networks, each with its own full node and Transaction-Manager.  This setup ensures independent creation of identical unsigned transactions and verification of signatures from Signing-Devices,  safeguarding against network failures, hardware compromises, or attacks like Dark Skippy.</p>"},{"location":"saving/sovereignty/level-10/#why-redundant-networks","title":"Why Redundant Networks?","text":"<p>Redundant networks eliminate single points of failure in your Bitcoin infrastructure.  By operating two separate full nodes and Transaction-Managers on isolated networks (e.g., via separate DMZs),  you create parallel systems for transaction creation and signature verification.  This ensures that a compromise or failure in one network -- whether due to malware, hardware issues, or network attacks -- does not affect the other, preserving access to your funds.</p> <p>Each Transaction-Manager generates identical unsigned transactions from the same multisig wallet and UTXOs,  while independent signature verification detects anomalies, such as those from malicious firmware like Dark Skippy.  This redundancy strengthens the fault tolerance established with multiple Signing-Devices in Level 9.</p>"},{"location":"saving/sovereignty/level-10/#benefits-of-redundancy","title":"Benefits of Redundancy","text":"<ul> <li>Network Isolation: Separate networks prevent cross-contamination, ensuring a breach in one does not compromise the other.</li> <li>Independent Verification: Each Transaction-Manager verifies partial signatures against its own full node, catching discrepancies or malicious behavior.</li> <li>Resilience: Funds remain accessible even if one network or device fails, as the second system can complete the transaction.</li> </ul>"},{"location":"saving/sovereignty/level-10/#implementation","title":"Implementation","text":"<ul> <li>Isolate Networks: Configure each full node and Transaction-Manager on separate DMZs or VLANs using distinct routers (e.g., Ubiquiti EdgeRouter 4).</li> <li>Synchronize Inputs: Ensure both Transaction-Managers use identical UTXOs, recipient addresses, and fee rates for unsigned transactions.</li> <li>Verify Signatures: Use tools like Sparrow Wallet to independently validate partial signatures on each Transaction-Manager.</li> <li>Monitor Anomalies: Employ detection tools (e.g., from Dark Skippy) to scan for signature-based attacks or possible seed exfil.</li> <li>Test Regularly: Simulate transaction creation and signing across both networks to confirm consistency.</li> </ul> <p>Redundant networks with separate full nodes and Transaction-Managers provide unmatched Bitcoin security. By generating identical unsigned transactions and independently verifying signatures from Signing-Devices, Level 10 ensures resilience against any single failure or attack, securing your funds with absolute confidence.</p>"},{"location":"saving/sovereignty/level-11/","title":"Level 11: Countermeasures","text":"<p>Electronic countermeasures to safeguard against 'NSA-level' threats.</p> <p> Level 11 -- electronic countermeasures </p> <p>Level 11 fortifies the airgap quarantine with electronic countermeasures to protect QR code transfers in a multisig setup. By ensuring only unsigned transactions from the Transaction-Manager enter the airgap and only partially signed transactions exit, we aim to defend against advanced side-channel attacks, including those from malicious firmware like Dark Skippy.</p>"},{"location":"saving/sovereignty/level-11/#why-countermeasures","title":"Why Countermeasures?","text":"<p>QR code transfers between the Transaction-Manager and Signing-Devices are critical, carrying sensitive transaction data across the airgap quarantine. Advanced adversaries could exploit side channels -- optical, electromagnetic, or acoustic -- to intercept this data.  Countermeasures ensure that only unsigned transactions enter and partially signed transactions exit, while blocking unauthorized exfiltration, even from state-level threats.</p> <p>Building on Level 10\u2019s redundant networks, countermeasures add a layer of defense by securing the physical and electronic environment,  complementing the fault tolerance of multiple Signing-Devices  and redundant networks.</p>"},{"location":"saving/sovereignty/level-11/#benefits-of-countermeasures","title":"Benefits of Countermeasures","text":"<ul> <li>Data Flow Control: Strict validation ensures only unsigned PSBTs enter and partially signed PSBTs exit the airgap.</li> <li>Side-Channel Protection: Mitigates optical, electromagnetic, and acoustic attacks on QR code transfers.</li> <li>Threat Resistance: Raises the bar against advanced adversaries, preserving multisig security.</li> </ul>"},{"location":"saving/sovereignty/level-11/#implementation","title":"Implementation","text":"<p>Quarantine Rules</p> <p>While electronic and physical countermeasures prevent side-channel and tampering attacks, you must integrate them into your Quarantine Rules and multisig protocol. Your security depends on your disciplined adherence to these rules.</p> <ul> <li>Camera Blockers: Apply webcam covers or tape to disable cameras on the Transaction-Manager when not scanning QR codes, blocking unauthorized recording.</li> <li>Firmware Checks: Verify Signing-Device firmware regularly, using tools to detect anomalies (e.g., Dark Skippy), safeguarding against malicious software.</li> <li>Privacy Enclosure: Use a lightproof scanning booth to shield QR code transfers from external observation, enhancing optical security.</li> <li>Privacy Filters: Use polarized screen protectors on Transaction-Manager and Signing-Device displays to limit viewing angles, preventing hidden cameras or observers from capturing QR codes. </li> <li>Secure Space: Perform transfers in a private, controlled room with no windows or cameras to prevent physical surveillance.</li> <li>Shielded Environment: Conduct QR transfers in a Faraday cage or shielded room to block electromagnetic emissions, protecting against signal interception.</li> <li>Tamper-Evident Seals: Affix seals on Signing-Devices to detect unauthorized physical access, ensuring hardware integrity.</li> <li>White Noise: Deploy white noise generators (preferably non-electronic) to mask acoustic signals during device operation, thwarting audio-based attacks.</li> </ul> <p>An example of Level 11 security is included in the appendix, see the Ridiculous Protocol.</p> <p>Electronic countermeasures in the airgap quarantine ensure secure QR code transfers, protecting multisig transactions from advanced threats.  Combined with Level 10\u2019s redundant networks, Level 11 delivers unparalleled resilience for your Bitcoin infrastructure.</p>"},{"location":"saving/sovereignty/level-12/","title":"Level 12: Off-grid","text":"<p>Receive-only (e.g., satellite) nodes with geographically distributed key signing.</p> <p> Level 12 -- a veritable Hero's Journey into transaction signing </p> <p>Level 12 is the ultimate expression of Bitcoin self-custody, completely off-grid and airgapped, designed to withstand sophisticated physical, electronic, and network-based threats.  It employs receive-only nodes (e.g., RF or satellite) and geographically distributed key signing, expanding the airgap to cover redundant DMZs (and the receive-only nodes).</p> <p>An Airgapped-Computer collects signatures from read-only Transaction-Managers (every step cryptographically verified), and a final signed transaction is then taken to a geographically distinct drop point,  to broadcast via a stateless computer. Importantly, the only \"online\" device is the drop point, with zero visibility into how transactions were created or signed.</p>"},{"location":"saving/sovereignty/level-12/#why-off-grid","title":"Why Off-grid?","text":"<ul> <li>Redundant Full Nodes: Read-only full nodes provide uninterrupted access to the blockchain (e.g., via satellite), even under network censorship or failure.</li> <li>Airgap Expansion: Covering redundant DMZs with an airgap isolates critical operations from network threats.</li> <li>Distributed Signing: Keys are managed across secure, geographically separated locations, eliminating single points of failure or compromise.</li> </ul> <p>Building on all prior levels --  full nodes, airgap quarantine, metal backups, multisig,  fail-safes, countermeasures, etc  -- Level 12 creates an impenetrable fortress for Bitcoin self-custody.</p>"},{"location":"saving/sovereignty/level-12/#benefits-of-off-grid","title":"Benefits of Off-grid","text":"<ul> <li>Unmatched Security: Defends against state-level adversaries, physical tampering, and electronic attacks.</li> <li>Fault Tolerance: Redundant systems ensure functionality even if one component fails.</li> <li>Privacy Preservation: Off-grid operations minimize exposure to online surveillance.</li> </ul>"},{"location":"saving/sovereignty/level-12/#implementation","title":"Implementation","text":"<p>Discipline is Key</p> <p>Strict adherence to Quarantine Rules and multisig protocols is essential. Any lapse compromises the entire system.</p> <ul> <li> <p>Geographically Distributed Key Signing:</p> <ul> <li>Deploy Signing-Devices in multiple secure, physically separate locations.</li> <li>Use a multisig setup requiring signatures from several devices to authorize transactions.</li> </ul> </li> <li> <p>Redundant Receive-Only Full Nodes:</p> <ul> <li>Operate one full node via RF and another via satellite, both configured as read-only to prevent tampering.</li> <li>Verify data consistency between nodes to ensure blockchain integrity.</li> </ul> </li> <li> <p>Airgapped Signature Collection:</p> <ul> <li>Use an Airgapped-Computer within the expanded airgap to collect signatures from read-only Transaction-Managers.</li> <li>Transfer unsigned transactions via QR codes or other offline methods, adhering to quarantine rules.</li> </ul> </li> <li> <p>Secure Transaction Broadcasting:</p> <ul> <li>Move the signed transaction to an online Transaction-Manager at a designated drop point. This is a stateless Transaction-Manager (no persistent storage); it's one and only job is to broadcast signed transactions (over Tor or VPN).</li> <li>Broadcast via a full node, using VPN or Tor to anonymize the process.</li> </ul> </li> <li> <p>Enhanced Countermeasures:</p> <ul> <li>Apply Level 11 countermeasures: privacy filters, Faraday cages, white noise generators, and tamper-evident seals.</li> <li>Protect against side-channel attacks during QR code transfers or physical device handling.</li> </ul> </li> </ul> <p>An example of Level 12 security is included in the appendix, see the Ludicrous Protocol.</p> <p>Level 12\u2019s off-grid design, with receive-only nodes, geographically distributed key signing, and an airgapped core, offers the most extreme yet practical security for Bitcoin self-custody. It ensures your Bitcoin remains sovereign, even against the most determined threats.</p>"},{"location":"saving/sovereignty/level-2/","title":"Level 2: Your Keys","text":"<p>Save Bitcoin using a home computer or smartphone (a small amount that you can risk losing).</p> <p> Level 2 -- typical home network but with Tails OS on a USB-stick </p> <p>Once you have some Bitcoin (through an exchange or otherwise -- see  level-1)  you'll want to transfer it to your own custody. In other words, you'll want control of the keys  that can access your Bitcoin. We'll start with a   hot wallet  on a home computer or smartphone.</p> <p>However, in order to maximize security  and privacy, you should leverage  Tails OS  with  Electrum  on a bootable thumb drive.</p> Generate your own seed <p>The best way to manage your own keys is by generating a seed phrase (as discussed previously). You'll want sufficient entropy so as to guarantee security for all of your derived public and private keys. While modern random-number-generators (RNGs) offer sufficient entropy, it is highly recommended to use dice to generate your seeds (even for hot wallets).</p>"},{"location":"saving/sovereignty/level-2/#smartphone","title":"Smartphone","text":"<p>A hot-wallet on your smartphone is definitely one of the easiest  ways to manage your own Bitcoin. However it is only recommended for small amounts,  like cash you'd keep in your pocket.</p> <p></p>"},{"location":"saving/sovereignty/level-2/#advantages","title":"Advantages","text":"<ul> <li>full control of your keys</li> <li>portability -- it's with you everywhere</li> </ul>"},{"location":"saving/sovereignty/level-2/#disadvantages","title":"Disadvantages","text":"<ul> <li>privacy concerns -- whether android or iOS, all of your behavior and activity will be tracked and sold to 3rd parties.</li> <li>security concerns -- while you may trust Apple or Google to never have a data breach and to secure your data, this clearly poses a significant risk.</li> <li>lockin concerns -- many apps do not allow seed phrases to be imported or exported -- do not use any app with this kind of lock-in.</li> </ul>"},{"location":"saving/sovereignty/level-2/#reputable-apps","title":"Reputable Apps","text":"<p>no paid nor influenced content -- all views are from personal experience</p> <ul> <li>Blue Wallet</li> <li>Zeus</li> <li>Phoenix</li> </ul>"},{"location":"saving/sovereignty/level-2/#desktop","title":"Desktop","text":"<p>Desktop apps to manage your keys can provide a more comprehensive set of features and are fantastic for learning. And while they work with hot wallets, these apps can also coordinate transactions for cold storage.</p>"},{"location":"saving/sovereignty/level-2/#advantages_1","title":"Advantages","text":"<ul> <li>full control of your keys</li> </ul>"},{"location":"saving/sovereignty/level-2/#disadvantages_1","title":"Disadvantages","text":"<ul> <li>privacy concerns -- your Bitcoin will only be as private as the computer that you're using.</li> <li>security concerns -- your Bitcoin will only be as secure as the computer that you're using.</li> <li>lockin concerns -- strictly avoid any apps that do not allow import and export of a seed phrase. In fact, it's highly recommended to create test wallets and attempt to import onto other wallet apps and verify that the receive addresses are identical. A Bitcoin wallet should never be locked in to an app.</li> </ul>"},{"location":"saving/sovereignty/level-2/#reputable-apps_1","title":"Reputable Apps","text":"<ul> <li>Sparrow</li> <li>Specter</li> <li>Electrum</li> </ul>"},{"location":"saving/sovereignty/level-2/#tails-and-electrum","title":"Tails and Electrum","text":"<p>If you have a spare USB thumb drive and are looking  for the quickest and easiest way to maximize  privacy and security before moving on to higher levels,  then I'd highly recommend  going with   Tails OS  which comes with Electrum. This solves most of the disadvantages of managing  keys on a smartphone or desktop client. With this approach, you get a secured OS from  a bootable USB drive that leaves no trace  on the machine you were running it on.</p> Install Tails <p>See the official Install Tails guide.</p> <p>Once you boot with the Tails USB drive you will have an OS  focused on maintaining your privacy, and most importantly,  there is no persisted data, no cookies, not even persisted settings. Every time you boot Tails it's a fresh OS and it has no memeory  of what happened before. Internet traffic is over Tor making it extremely difficult  to track.</p> <p>There is an optional persistent volume that you can use  to save application data to the USB drive itself. And what we'll do is enable this only for Electrum so that it can  persist your keys. </p> Enable Persistence for Electrum <p> Once you've booted Tails, go to Applications and select Configure persistent volume. </p> <p> Select Electrum and optionally set a password for the volume. </p> <p>After a reboot, you will be given an option to  use the persistent volume -- or you can still  use Tails without it, in its pure amnesic state. If you do use the persistent volume then you will  be able to run Electrum with any saved wallets  or transaction files.</p> <p>From here you can run Electrum as normal,  generate wallets, send and receive Bitcoin, etc.</p> <p></p>"},{"location":"saving/sovereignty/level-2/#advantages_2","title":"Advantages","text":"<ul> <li>full control of your keys</li> <li>privacy -- all of the privacy advantages of Tails OS, and if you're pursuing nokyc then Tails OS is definitely recommended.</li> <li>secure -- more secure than any other level-2 solution</li> <li>most bang for the buck -- you'll have equivalent security to most hardware wallets and likely much more privacy</li> </ul>"},{"location":"saving/sovereignty/level-2/#disadvantages_2","title":"Disadvantages","text":"<ul> <li>long-term storage concerns -- this approach may be secure enough for your needs, however a sensible backup of your seed phrases (preferably in metal -- see level-6) is highly recommended before you consider using this for larger amounts of Bitcoin</li> </ul>"},{"location":"saving/sovereignty/level-3/","title":"Level 3: Dedicated Hardware","text":"<p>Save Bitcoin using a dedicated offline device (as much as you'd be comfortable hiding under your mattress).</p> <p> Level 3 -- typical home network with accessible cold storage </p> <p>In order to save large amounts of money,  and do so securely,  you'll want to setup a dedicated signing device. Essentially, this will separate the private keys from the public keys.</p> <p>Public keys will be managed in a transaction manager  (used to verify addresses for receiving Bitcoin,  checking balances,  and created unsigned transactions). Private keys will be managed in an offline signing device  (used only for spending Bitcoin).</p> <p>While there are many alternatives-- we will use  coldcard  as an example, but any offline signing device can be used.</p> <p>no paid nor influenced content -- all views are from personal experience</p>"},{"location":"saving/sovereignty/level-3/#transaction-manager","title":"Transaction Manager","text":"<p>A transaction manager can be any device,  although it's recommended to use a dedicated laptop that you can install a Linux flavor such as Ubuntu.  However, it is recommended to use Tails OS on a USB drive for the added privacy and security.</p>"},{"location":"saving/sovereignty/level-3/#honeypot","title":"Honeypot","text":"<p>Your real transaction manager should be via Tails OS with a persistent xPub (see below).  However, you may want to install Sparrow or Electrum with a hot wallet  and use that for testing.  This can also serve as a honeypot, that is, a Bitcoin wallet decoy. If someone comes looking for Bitcoin, a honeypot can act as an effective decoy.</p>"},{"location":"saving/sovereignty/level-3/#tails-os-xpub-only","title":"Tails OS (xPub only)","text":"<p>Similar to level-2,   we will use a bootable Tails OS USB drive for the actual transaction manager. To set up your transaction manager with a watch-only wallet, follow the steps outlined in the Coldcard documentation  to export your xPub from the Coldcard. </p> Tails OS with xPub <ol> <li>On your Tails OS, open Electrum.</li> <li>Create a new wallet, select <code>Standard wallet</code>, and then <code>Use a master key</code>.</li> <li>Paste or scan the QR code of the xPub obtained from your Coldcard.</li> <li>When you open this wallet, you'll see a warning indicating it is watch-only.</li> <li>When you attempt to send from this wallet, it will create an unsigned transaction file, which will need to be signed by the signing device (see below).</li> </ol>"},{"location":"saving/sovereignty/level-3/#signing-device","title":"Signing Device","text":"<p>Adapted from the Coldcard docs</p> Sign Transaction <ol> <li>Connect your Coldcard to power and enter your PIN if you haven't already done so.</li> <li>Select <code>Ready to Sign</code> from the main menu.</li> <li>Insert the microSD card containing the unsigned transaction file from your transaction manager.</li> <li>The Coldcard briefly shows Reading... and Validating... before displaying transaction details. Take every opportunity to check and double-check transaction information. Ensure the address you are sending funds to is absolutely correct.</li> <li>If the transaction information is correct and the fee acceptable, press OK (\u2713). Otherwise, abort the transaction by pressing X.</li> <li>Your Coldcard signs the transaction and saves two files to the microSD card: one ending in <code>-signed.psbt</code> and another <code>-final.txn</code>.</li> <li>Press OK (\u2713) to return to the Main Menu.</li> </ol> <p>You can now power off the Coldcard and transfer the microSD card back to the transaction manager running Tails OS.</p> Broadcasting (signed) Transaction <ol> <li>Insert the microSD card with the signed transaction files.</li> <li>Open Electrum or Sparrow and load the <code>-signed.psbt</code> or <code>-final.txn</code> file.</li> <li>Verify the transaction details again, ensuring the destination address and amount are correct.</li> <li>Broadcast the transaction to the Bitcoin network.</li> <li>Once broadcasted, you can safely remove the microSD card and store it securely.</li> </ol>"},{"location":"saving/sovereignty/level-3/#alternative-signing-devices","title":"Alternative Signing Devices","text":"<p>While Coldcard is a robust, Bitcoin-only, air-gapped solution, other dedicated hardware options exist for self-custody.  Here are some recommended alternatives:</p> <ul> <li>SeedSigner: A DIY, open-source signing device built on affordable hardware (Raspberry Pi Zero). SeedSigner is air-gapped, supports QR code scanning for transaction signing, and is ideal for those who prefer a fully verifiable solution.</li> <li>DIY Raspberry Pi Zero: For advanced users, you can create your own signing device using a Raspberry Pi Zero with open-source software.</li> <li>Specter-DIY: This approach requires technical expertise but offers complete control over the hardware and software stack.</li> </ul> <p>These alternatives prioritize open-source principles and Bitcoin-only functionality, aligning with the ethos of self-custody. However, they may require more setup effort compared to a Coldcard.</p>"},{"location":"saving/sovereignty/level-3/#hardware-wallets-considerations","title":"Hardware Wallets: Considerations","text":"<p>Hardware wallets can be an excellent self-custody solution, but not all are created equal.  Devices like the Coldcard and SeedSigner are Bitcoin-only, air-gapped, and prioritize open-source software,  allowing users to verify entropy and maintain full control over their keys.  Other hardware wallets may:</p> <ul> <li>Support multiple cryptocurrencies, increasing complexity and attack surfaces.</li> <li>Rely on proprietary software or hardware, limiting transparency.</li> <li>Require online connections, reducing security compared to air-gapped solutions.</li> </ul> <p>When choosing a hardware wallet, prioritize devices that are Bitcoin-focused, air-gapped, and open-source to ensure maximum security and sovereignty.</p>"},{"location":"saving/sovereignty/level-4/","title":"Level 4: Full Node","text":"<p>Save Bitcoin and run your own node (as much as you'd be comfortable hiding under your mattress).</p> <p> Level 4 -- introducing a Full Bitcoin Node </p> <p>Running a Bitcoin full node enhances your self-custody by allowing your transaction manager to verify transactions and balances against your own copy of the Bitcoin blockchain. This eliminates reliance on third-party nodes, boosting privacy and security. In Level 4, you\u2019ll integrate a full node into the setup from Level 3, using it to support your transaction manager while keeping private keys offline on a dedicated signing device like a Coldcard.</p> <p>No paid nor influenced content -- all views are from personal experience</p>"},{"location":"saving/sovereignty/level-4/#why-run-a-full-node","title":"Why Run a Full Node?","text":"<p>A full node downloads and validates the entire Bitcoin blockchain, ensuring you trust only your own verification of the network\u2019s rules. Benefits include:</p> <ul> <li>Privacy: Your transaction manager queries your own node, reducing risks of IP tracking or data leaks.</li> <li>Security: You verify transactions and balances yourself, avoiding reliance on potentially malicious external nodes.</li> <li>Sovereignty: Running a node strengthens Bitcoin\u2019s decentralization, contributing to network resilience (effectively +1 more copy of the blockchain).</li> </ul> <p>We'll use Bitcoin Knots, a Bitcoin full node implementation with enhanced privacy features and spam filtering compared to Bitcoin Core. Knots includes tools like improved transaction filtering and mempool policies to reduce spam, making it ideal for privacy-focused self-custody.</p>"},{"location":"saving/sovereignty/level-4/#setting-up-your-full-node","title":"Setting Up Your Full Node","text":"<p>For simplified node management, consider Umbrel or Raspiblitz or MyNode,  which provide web interfaces and tools like Electrum Server.  However, these may default to Bitcoin Core; you\u2019ll need to manually install Bitcoin Knots (check project documentation for compatibility). </p> <p>To run a Bitcoin Knots full node, you need a dedicated device with sufficient storage (2TB recommended).  A Raspberry Pi 4 or 5 with an external SSD is cost-effective, though a dedicated Linux laptop or desktop (e.g., Ubuntu) offers better performance.</p>"},{"location":"saving/sovereignty/level-4/#diy-node-setup","title":"DIY Node Setup","text":"<ol> <li>Install Linux</li> <li>Install Bitcoin Knots<ul> <li>Visit bitcoinknots.org and download the latest Bitcoin Knots version for your system.</li> <li>Verify the download using GPG signatures to ensure authenticity.</li> </ul> </li> <li>Configure Bitcoin Knots<ul> <li>Create a <code>bitcoin.conf</code> file in the Bitcoin data directory (<code>~/.bitcoin/</code> on Linux).</li> <li>Add the following settings for a secure, node-only setup:  <pre><code>server=1\nrpcuser=yourusername\nrpcpassword=yourstrongpassword\ntxindex=1\nlisten=1\nbind=127.0.0.1\nprune=0\nblockfilterindex=1\ndbcache=4096\n</code></pre></li> <li><code>txindex=1</code> enables transaction indexing for wallet queries; <code>prune=0</code> ensures a full archival node; <code>blockfilterindex=1</code> supports advanced privacy features.</li> </ul> </li> <li>Start Bitcoin Knots<ul> <li>Run <code>bitcoind -daemon</code> to start the node in the background.</li> <li>The initial sync may take days, depending on hardware, internet speed, and <code>dbcache</code> settings. Monitor progress with <code>bitcoin-cli getblockchaininfo</code>.</li> </ul> </li> <li>Secure Your Node<ul> <li>Configure your firewall to allow only tcp/8333 (Bitcoin P2P) for external connections and restrict RPC access to localhost (or to your local network).</li> <li>Enable Tor or a VPN for additional privacy if your node is externally accessible.</li> </ul> </li> </ol> <p>Speeding Up Initial Sync</p> <p>Setting <code>dbcache</code> to a higher value (e.g., <code>dbcache=12288</code>, 12 GB) significantly reduces the time for Initial Block Download (IBD) and verification by caching the UTXO set in memory. Ensure your system has enough free memory to avoid swapping, which could slow down the process. For example, a Raspberry Pi with 8 GB RAM can safely use <code>dbcache=4096</code>, but if you have plenty of memory (16+ GB) it is best to keep the entire chainstate (UTXO set) in memory.</p>"},{"location":"saving/sovereignty/level-4/#integrating-with-the-transaction-manager","title":"Integrating with the Transaction Manager","text":"<p>With your Bitcoin Knots node synced, configure your Level 3 transaction manager to connect to your node (and Electrum Server, if available).  This assumes you\u2019re using Tails OS with Electrum or Sparrow for your watch-only wallet.</p> <ol> <li>Set Up Electrum Server (recommended for efficiency):<ul> <li>Install Electrs on your node to provide additional indexing for faster performance.</li> </ul> </li> <li>Configure Electrum on Tails OS:<ul> <li>Boot Tails OS and open Electrum.</li> <li>Go to <code>Preferences &gt; Network</code> and select <code>Connect to a specific server</code>.</li> <li>Enter your node\u2019s IP address and port (e.g., <code>192.168.1.100:50002</code> for Electrs).</li> </ul> </li> <li>Verify Connection:<ul> <li>Confirm Electrum connects to your node and shows synced status.</li> <li>Ensure your watch-only wallet loads addresses and balances correctly.</li> </ul> </li> </ol>"},{"location":"saving/sovereignty/level-4/#signing-transactions","title":"Signing Transactions","text":"<p>The signing process remains identical to Level 3,  however, when you verify transactions and broadcast, you will retain privacy so long as your transaction manager   is communicating with your full node.</p> <ol> <li>Create an unsigned transaction on your transaction manager (Tail OS).</li> <li>Transfer the transaction file to your offline signing device.</li> <li>Sign the transaction.</li> <li>Return to the transaction manager, load the signed transaction, and broadcast it via your Bitcoin Knots node.</li> </ol> <p>Disclaimer: Running a full node requires technical effort and responsibility. Verify software downloads, secure your hardware, and double-check transactions.  Self-custody and node operation carry risks, and you are responsible for protecting your Bitcoin.</p>"},{"location":"saving/sovereignty/level-5/","title":"Level 5: Airgap Quarantine","text":"<p>Greater security than any bank (as much as you'd be comfortable hiding under your mattress).</p> <p> Level 5 -- airgap quarantine with dedicated air-gapped computer </p> <p>An airgap quarantine ensures your signing device and any associated computers remain completely isolated from any network or external device.  A strict airgap provides the highest level of security by eliminating risks of malware, network attacks, or physical data leaks.  Data transfers require QR codes via a dedicated air-gapped computer,  avoiding physical connections like USB or microSD. </p> <p>By isolating the signing device via an air-gapped computer, you eliminate most all attack vectors (for remote or physical compromise). A well-managed airgap quarantine offers you more security for your savings than any bank in the history of the world.</p>"},{"location":"saving/sovereignty/level-5/#prepare","title":"Prepare","text":"<p>An airgap quarantine requires a signing device and an air-gapped computer to handle QR code workflows, ensuring no network exposure. This can be challenging to setup, and it is important to prepare carefully.</p> <p>Technically, there are numerous ways to create an airgap, either on existing hardware or something like a SeedSigner. The most challenging aspect is not the device, but the discipline used to ensure that the Quarantine Rules (see below) are never violated.</p> <p>Ultimately, you'll need an airgapped device (or devices) that can perform the following:</p> <ol> <li>Input seeds and/or keys (verify checksums).</li> <li>Read QR codes (of unsigned transactions).</li> <li>Sign transactions.</li> <li>Display QR codes (of signed transactions).</li> </ol> <p>If you have a signing device that doesn't perform all of the above (such as no QR support),  you will need an air-gapped laptop, and you must ensure that your signing device ONLY ever interfaces with that air-gapped laptop. Tails OS can be useful towards this end, although it's important to maintain the airgap  -- that is -- the USB drive used by Tail OS must also be quarantined.</p>"},{"location":"saving/sovereignty/level-5/#quarantine-rules","title":"Quarantine Rules","text":"<p>An airgap quarantine is typically more involved than a simple network airgap. By adhering to these rules you ensure maximum security for your savings.</p> <p>To achieve nuclear-launch-code-level security, follow these rules as a concise, numbered checklist. Each includes a brief rationale for clarity and enforcement. The focus is on absolute isolation, verifiable processes, and layered defenses against physical, digital, and human threats. Adhere to them without exception during any session involving seeds or transaction signing.</p> <ol> <li> <p>No device or data crosses the quarantine except via QR codes: Limit transfers between the Transaction-Manager and Airgapped-Computer to visual QR codes only; ban USB, MicroSD, or any physical media to eliminate malware vectors. Rationale: Prevents hidden payloads; QR enforces manual verification.</p> </li> <li> <p>Expose seed phrases only on the Signing-Device: Never display, write, or input seeds on any other component; derive keys solely within this isolated environment. Rationale: Contains the most critical secret to one tamper-resistant point, reducing theft risk.</p> </li> <li> <p>Stow all smartphones and personal electronics in Faraday bags outside the room: Power them off first and place in shielded bags; assume they are actively compromised for surveillance or key theft. Rationale: Blocks remote activation of microphones, cameras, or transmitters.</p> </li> <li> <p>Ban all electronic devices near the Signing-Device: Exclude speakers, smart devices, fans, or anything with potential for acoustic/electromagnetic leaks; use a dedicated, shielded room if possible. Rationale: Mitigates side-channel attacks like audio-based data exfiltration.</p> </li> <li> <p>Ensure complete physical privacy: Conduct sessions away from windows, in a locked room with no line-of-sight exposure; use white noise generators or RF shielding if available. Rationale: Guards against optical surveillance (e.g., drones, lasers) or thermal imaging.</p> </li> <li> <p>Sanitize and verify all tools pre-session: Check software/firmware signatures on official sources; wipe temporary media and test for integrity; treat every component as potentially compromised. Rationale: Counters supply-chain attacks and ensures no pre-installed malware.</p> </li> <li> <p>If possible, require multi-person verification for critical steps: Involve a trusted witness for seed loading or signing; use time-delayed access (e.g., 24-hour locks) to deter coercion. Rationale: Adds human redundancy against ransom or insider threats.</p> </li> <li> <p>Post-session wipe and audit: Clear RAM on shutdown, log all actions, and test quarantine integrity periodically (e.g., simulate breaches quarterly). Rationale: Erases residual data and detects subtle violations early.</p> </li> <li> <p>Distribute and redundantly store components: Keep Signing-Device elements geographically separate. Rationale: Ensures resilience against localized physical attacks like burglary or fire.</p> </li> </ol> <p>These rules, when followed meticulously, create a fortress-like barrier, making unauthorized access exponentially difficult\u2014even for advanced adversaries.  Test them in dry runs to build familiarity.</p>"},{"location":"saving/sovereignty/level-5/#signing-ceremony","title":"Signing Ceremony","text":"<p>In order to maintain the integrity of your airgap quarantine,  a strict signing ceremony should be followed. Airgap quarantine steps are highlighted in red.</p> Step 1: Create Unsigned Transaction <ol> <li>On the Tails OS transaction manager, open Electrum or Sparrow.</li> <li>Create a transaction in your watch-only wallet (e.g., send Bitcoin to an address).</li> <li>Verify the transaction details (amount, address, fee).</li> <li>Export the unsigned transaction as a QR code.</li> </ol> Step 2: Transfer to Air-Gapped Computer <ol> <li>Boot the air-gapped computer (with Tails OS or Linux install).</li> <li>Open Sparrow or Electrum and scan the QR code from the transaction manager.</li> <li>Verify the transaction details (address, amount, fee).</li> <li>Save the unsigned transaction to a microSD card (for devices without QR input) or export it as a QR code (for QR-capable signing device).</li> </ol> Step 3: Sign Transaction <ol> <li>Power on the signing device using a battery or offline charger.</li> <li>Load the unsigned transaction.</li> <li>Verify the transaction details (address, amount, fee).</li> <li>Approve / Sign the transaction.</li> </ol> Step 4: Transfer Signed Transaction <ol> <li>On the air-gapped computer, load the signed transaction.</li> <li>Verify the signed transaction details in Sparrow or Electrum.</li> <li>Export the signed transaction as a QR code.</li> </ol> Step 5: Broadcast Signed Transaction <ol> <li>On the transaction manager, scan the signed transaction QR code from the air-gapped computer.</li> <li>Verify the transaction details again (address, amount, fee).</li> <li>Broadcast the transaction to the Bitcoin network via your Bitcoin node.</li> <li>Wait for transaction confirmation.</li> </ol>"},{"location":"saving/sovereignty/level-5/#signing-devices","title":"Signing Devices","text":"<p>No paid nor influenced content -- all views are from personal experience</p> <p>Choose a device based on your preference for cost, ease of use, or open-source transparency, ensuring it supports air-gapped operation.</p> <ul> <li>Coldcard: Bitcoin-only, air-gapped, with robust security (secure element, PIN protection). Requires an air-gapped computer for QR workflows, using microSD for transaction input.</li> <li>Coldcard Mk4: Adds native QR code support for xPub export and transaction signing. Simplifies airgap workflows but is slightly more expensive.</li> <li>SeedSigner: DIY, open-source device built on Raspberry Pi Zero. Fully transparent, and QR-native, but requires assembly and technical expertise.</li> <li>Specter-DIY: Open-source, DIY device using affordable hardware. Supports QR codes and air-gapped workflows but requires significant setup. Best for advanced users.</li> </ul> <p>Regardless of which signing device you use,  an airgap quarantine delivers unmatched security for your Bitcoin, far surpassing the security of traditional banking systems with respect to custody of wealth.  By combining a Bitcoin full node, Tails OS transaction manager, and a strictly air-gapped signing process, you achieve ultimate sovereignty and privacy. </p> <p>Disclaimer: Airgap quarantine demands rigorous security practices. Verify all hardware and software, cross-check transactions, and maintain strict airgap discipline.  Self-custody carries risks, and you are responsible for protecting your Bitcoin.</p>"},{"location":"saving/sovereignty/level-6/","title":"Level 6: Metal Backup","text":"<p>Protect your Bitcoin with metal backups (worth as much as your house).</p> <p> Level 6 -- metal seed backups </p> <p>What if your signing devices and seed phrases were destroyed in a fire?</p> <p>For significant Bitcoin holdings, metal backups of your seed phrases ensure your private keys survive extreme conditions like fire, flood, or physical damage. For example, a metal backup created using stainless steel dog tags provides a fireproof, waterproof, and corrosion-resistant copy of your seed phrase. </p>"},{"location":"saving/sovereignty/level-6/#why-metal-seed-backup","title":"Why Metal Seed Backup?","text":"<p>A metal backup ensures your Bitcoin seed phrase withstands disasters that would destroy paper or digital backups. By stamping your seed phrase into stainless steel or titanium, you create a resilient, long-term artifact.</p>"},{"location":"saving/sovereignty/level-6/#which-metal","title":"Which Metal?","text":"<p>Not all metals resist environmental damage or are suitable for stamping. The table below compares common metals for hardness (Vickers scale, higher is better for stamping durability) and melting temperature (for fire resistance):</p> Metal Hardness (Vickers) Melting Temperature Suitability for Seed Backup Stainless Steel ~200\u2013250 HV ~2,500\u00b0F (1,370\u00b0C) Excellent: Affordable, corrosion-resistant, durable, easy to stamp. Titanium ~300\u2013350 HV ~3,000\u00b0F (1,660\u00b0C) Superior: Lightweight, extremely durable, fire-resistant, slightly harder to stamp. Aluminum ~25\u201350 HV ~1,220\u00b0F (660\u00b0C) Poor: Soft, prone to scratches, low fire resistance. Silver ~25\u201370 HV ~1,760\u00b0F (960\u00b0C) Poor: Soft, tarnishes, less durable for stamping. Gold ~20\u201330 HV ~1,947\u00b0F (1,064\u00b0C) Poor: Very soft, expensive, unsuitable for stamping. <ul> <li>Stainless Steel: Affordable and corrosion-resistant. Recommended in grades 304 or 316.</li> <li>Titanium: Ultra-durable, lightweight, and fire-resistant but more expensive and slightly harder to stamp. Ideal for high-value backups.</li> <li>Tungsten Stamping Kit: Use a tungsten or steel stamping kit with letter stamps. Tungsten stamps are harder, ensuring clear imprints. Available at craft stores or online retailers.</li> </ul> <p>Avoid softer metals like aluminum, silver, or gold, which are less durable and harder to stamp legibly. Verify material quality to ensure durability.</p>"},{"location":"saving/sovereignty/level-6/#creating-a-metal-seed-backup","title":"Creating a Metal Seed Backup","text":"<p>No paid nor influenced content -- all views are from personal experience</p> <p>Stamp your seed phrase into stainless steel dog tags or fender washers. Generic materials, like dog tags, enhance security by allowing you to control the supply chain and verify materials independently.</p> <p>While commercial seed backups exist, most are inferior to a DIY solution. The MicroSeed stamp kit, which uses 1\" stainless steel fender washers (available at hardware stores), is a good option to simplify the stamping process.</p> Materials Needed <ul> <li>Metal Medium: Stainless steel dog tags or fender washers.</li> <li>Stamping Kit: Tungsten or steel stamping kit with letter stamps.</li> <li>Stamping Surface: A flat, hard surface like a steel anvil or brick for stable stamping. A brick is sufficient but may cause slight imperfections.</li> </ul> <p>For the actual stamping, you'll want to follow the Quarantine Rules discussed previously.</p> Stamping Process (quarantined) <ol> <li>Prepare the Seed Phrase:<ul> <li>Retrieve the seed phrase from your signing device, written on a temporary paper backup during initial setup.</li> <li>Work in a secure, private location with no electronic devices nearby.</li> </ul> </li> <li>Set Up the Stamping Area:<ul> <li>Place the dog tag or washer on a flat, hard surface (e.g., steel anvil or brick).</li> <li>Secure the medium with tape or a holder to prevent movement. Avoid stamping beyond designated areas to prevent damage.</li> </ul> </li> <li>Stamp the Seed Phrase:<ul> <li>Use a tungsten stamping kit to imprint each word letter by letter. Apply light, consistent pressure for clear, legible imprints.</li> </ul> </li> <li>Verify the Backup:<ul> <li>Test the backup by entering the seed phrase into a temporary, offline wallet (e.g., on a fresh Tails OS session) on a signing device.</li> </ul> </li> <li>Secure the Backup:<ul> <li>Store the metal backup in a tamper-evident bag or container.</li> <li>Place it in a secure, offline location (e.g., safe deposit box or home safe).</li> </ul> </li> </ol>"},{"location":"saving/sovereignty/level-6/#tamper-evident-seals","title":"Tamper-Evident Seals","text":"<p>For metal backups that don\u2019t require regular access, tamper-evident seals are recommended to ensure no unauthorized access has occurred.</p> <p>A combination of high-tech and low-tech approaches is advisable. For example, tamper-evident bags are widely available, and an attacker could replace the entire bag, including printed serial numbers, with relative ease. Here are some recommended solutions:</p> <ul> <li>RFID or NFC Tags: Use specialized tamper-evident tags or cables with RFID or NFC capabilities. Any attempt to break or open the seal disables the RFID or NFC functionality. Replacing the tag requires replicating the exact RFID signal, which is possible but demands a technically sophisticated attacker.</li> <li>Tamper-Evident Tape or Bags: These products reveal opening attempts through clear visual indicators (e.g., a \u201cVOID\u201d message after tampering). However, replacing these widely available items is often straightforward, reducing their standalone effectiveness.</li> <li>Wax Seals: A classic low-tech solution, wax seals are highly effective but can be replicated by anyone with access to your stamp.</li> <li>Unique Markings: Simple yet effective, these can include a signature, hand-etched scratches, or other personalized markings known only to you. These are difficult for an attacker to replicate exactly without detailed knowledge of the design.</li> </ul> <p>In practice, combining multiple techniques -- particularly high-tech and low-tech approaches -- makes unauthorized replacement extremely challenging. For instance, replacing an RFID tag requires a programmable chip, which is difficult but feasible. However, if the attacker must also replicate a custom wax seal and unique hand-drawn markings, the task becomes impractical.</p>"},{"location":"saving/sovereignty/level-6/#maintaining-your-metal-backup","title":"Maintaining Your Metal Backup","text":"<p>To ensure your metal backup remains reliable:</p> <ul> <li>Inspect Regularly: Check annually for corrosion, scratches, or tampering.</li> <li>Multiple Backups: Create at least two metal backups, stored in separate, secure locations (e.g., home safe and bank vault).</li> <li>Test Periodically: Every few years, verify legibility and test with an offline wallet to confirm accuracy.</li> <li>Secure Locations: Store backups in fireproof, waterproof containers in locations accessible only to you and your family (trusted loved ones).</li> </ul> <p>Disclaimer: Metal seed backups require meticulous handling and secure storage. Verify material quality, stamp accurately, and protect backups from theft or exposure. Self-custody carries risks, and you are responsible for protecting your Bitcoin.</p>"},{"location":"saving/sovereignty/level-7/","title":"Level 7: Multisig Protocols","text":"<p>Protocols to manage multi-signature Bitcoin custody (any amount).</p> <p> Level 7 -- Multisig Protocols </p> <p>Multisig (multi-signature) Protocols are the gold standard for securing Bitcoin.  Unlike single-signature wallets, which rely on one private key, multisig requires multiple keys to authorize transactions,  offering unmatched security and redundancy.</p> <p>These can be configured in any m-of-n quorum, which allows for both security and fault tolerance,  e.g., a 2-of-3 quorum requires 2 valid signatures from any 3 private keys   -- which is ideal for inheritance planning  and collaborative custody.</p> <p>That said, managing a multisig setup can be complex for both technical and non-technical users.  A well-defined protocol\u2014a set of step-by-step instructions\u2014is essential to navigate this complexity,  ensuring your Bitcoin remains secure, accessible, and manageable for you and your loved ones.</p>"},{"location":"saving/sovereignty/level-7/#why-a-multisig-protocol","title":"Why a Multisig Protocol?","text":"<p>Multisig setups, such as a 2-of-3 or 3-of-5 key arrangement, provide significant advantages: losing one key doesn\u2019t compromise your funds, and an attacker needs multiple keys to steal your Bitcoin. These benefits come at the cost of increased complexity. Without a clear protocol, even experienced users can make errors, such as mismanaging keys, failing to document recovery steps, or exposing sensitive information. For non-technical users, the technical jargon, hardware requirements, and coordination of multiple devices can be overwhelming.</p> <p>A multisig protocol addresses these challenges by:</p> <ul> <li>Simplifying Complexity: Breaking down setup, transaction signing, and recovery into clear, repeatable steps.</li> <li>Reducing Errors: Providing a checklist to avoid mistakes, such as improper key storage or incorrect wallet configurations.</li> <li>Enabling Collaboration: Guiding trusted parties (e.g., family or heirs) to access funds securely, even if they lack technical expertise.</li> </ul> <p>One excellent example is the Glacier Protocol, which combines multisig with rigorous operational security. Glacier breaks its process into sub-protocols (setup, deposit, withdrawal), each with detailed instructions. While highly secure, Glacier has minor drawbacks, such as address reuse and lack of BIP-39 mnemonic seed support. For users seeking alternatives, custom protocols can be tailored to balance security and usability.</p>"},{"location":"saving/sovereignty/level-7/#challenges-of-multisig","title":"Challenges of Multisig","text":"<p>Multisig setups are inherently more demanding than single-signature wallets. Here are the key challenges and how a protocol mitigates them:</p> <ol> <li>Technical Complexity: Configuring multisig requires coordinating multiple hardware wallets (e.g., Coldcard, SeedSigner) and compatible software (e.g., Electrum, Sparrow Wallet). A protocol provides step-by-step guidance, making the process accessible to non-technical users.</li> <li>Key Management: Storing multiple keys securely in separate locations (e.g., safes, safety deposit boxes) while ensuring accessibility is daunting. A protocol outlines best practices for storage, backup, and tamper-evident measures.</li> <li>Transaction Coordination: Signing transactions with multiple keys, especially across air-gapped devices, is time-consuming and error-prone. A protocol streamlines the process with clear instructions for signing and broadcasting.</li> <li>Recovery and Inheritance: Without documentation, recovering funds or passing them to heirs is nearly impossible. A protocol includes recovery steps and instructions for trusted parties, reducing reliance on the primary user\u2019s expertise.</li> <li>User Error: Mistakes like losing a key, misconfiguring a wallet, or reusing addresses can compromise security. A protocol enforces best practices and includes checks to catch errors before they become critical.</li> </ol>"},{"location":"saving/sovereignty/level-7/#implementing","title":"Implementing","text":"<p>A multisig protocol is a written guide that you and your trusted contacts can follow. Below are the essential steps to create and implement one:</p> <ol> <li> <p>Choose Your Multisig Setup:</p> <ul> <li>Decide on the key configuration (e.g., 2-of-3, 3-of-5) based on your security needs.</li> <li>Use reputable signing devices like Coldcard or SeedSigner, which support multisig.</li> <li>Choose software that supports multisig, such as Electrum, Sparrow Wallet, or Specter. These tools coordinate key setup and transaction signing.</li> </ul> </li> <li> <p>Distribute Keys Securely:</p> <ul> <li>Store each key in a separate, secure location (e.g., personal safe, safety deposit box, or with a trusted collaborator). Use tamper-evident storage to detect unauthorized access.</li> <li>Avoid digital backups that could be hacked, and never store keys together.</li> </ul> </li> <li> <p>Document Your Protocol:</p> <ul> <li>Use a clear, step-by-step guide covering setup, transaction signing, key recovery, and inheritance. Include wallet software versions, hardware details, and contact information for trusted parties.</li> <li>Store the protocol securely (e.g., encrypted or in a physical safe) and share relevant sections with heirs or collaborators.</li> </ul> </li> <li> <p>Test Your Setup:</p> <ul> <li>Perform small test transactions to verify your protocol, including signing with multiple keys and recovering funds from backups.</li> <li>Simulate failure scenarios (e.g., losing one key) to ensure your recovery process works perfectly.</li> </ul> </li> </ol>"},{"location":"saving/sovereignty/level-7/#how-much-security-do-you-need","title":"How Much Security Do You Need?","text":"<p>The level of security required for your Bitcoin custody depends on your threat model. A protocol benefits all levels of security, but at the higher levels involving multisig, it is essential to manage complexity and ensure reliability.</p> <ul> <li>Minimal Security: A mobile app hot wallet (e.g., BlueWallet or Phoenix) may suffice for small amounts or users unconcerned about potential loss. A simple protocol can still help by documenting backup and recovery steps, reducing the risk of errors.</li> <li>Baseline Security: Using a hardware wallet like a Coldcard or SeedSigner with a single-signature setup and proper seed phrase backup provides robust protection. A protocol ensures consistent key management and inheritance planning.</li> <li>Advanced Security: Multisig setups, such as a 2-of-3 or 3-of-5 key arrangement, add redundancy and resilience. A protocol is critical here to coordinate multiple keys, streamline transaction signing, and guide non-technical users or heirs.</li> <li>Ridiculous Security: For protection against sophisticated threats -- like hostile nation-states (such as North Korea or Canada) -- use a high-threshold multisig, geographically distributed keys, air-gapped devices, and self-hosted full nodes. </li> <li>Ludicrous Security: For NSA-level threats and nuclear-launch-code levels of security.</li> </ul> <p>Regardless of your needs, a protocol is indispensable to manage your wealth. And with a multisig protocol, you\u2019ll protect your wealth better than any bank or custodian ever could.</p>"},{"location":"saving/sovereignty/level-8/","title":"Level 8: DMZs","text":"<p>Keep your full-node and transaction-manager completely safe from untrusted devices on your network.</p> <p> Level 8 -- network segmentation and DMZs </p> <p>In Level 8, we introduce the concept of a DMZ (Demilitarized Zone) to elevate the security of your Bitcoin setup. A DMZ is a distinct network segment positioned between your home network and the Internet, acting as a fortified buffer for your non-airgapped components. This approach complements the airgap quarantine used for offline tasks, focusing here on safeguarding the online elements of your Bitcoin infrastructure.</p> <p>Your home network is likely a mix of devices -- laptops, smartphones, smart TVs, and IoT gadgets -- any of which could be a weak link, potentially compromised by malware or an attacker.  By isolating your Bitcoin full node and Transaction-Manager within a DMZ,  you establish a protective barrier, making it far more difficult for threats to reach these vital assets, even if your home network is breached.</p>"},{"location":"saving/sovereignty/level-8/#why-a-dmz","title":"Why a DMZ?","text":"<p>The DMZ isolates your full node (running Electrs for wallet functionality) and Transaction-Manager (booting from Tails OS) from your broader home network. Only the Transaction-Manager is permitted to communicate with the full node, meaning that even if other devices on your network are compromised, they cannot directly target your Bitcoin setup.</p> <p>This isolation is typically achieved using a separate router or managed switch\u2014such as the Ubiquiti EdgeRouter 4   -- configured with strict firewall rules to regulate traffic flow.  The result is a tightly controlled environment that minimizes exposure to potential threats.</p>"},{"location":"saving/sovereignty/level-8/#why-ethernet-only","title":"Why Ethernet Only?","text":"<p>This setup prioritizes wired connections over Wi-Fi to maximize security.  Wireless networks, while user-friendly, are susceptible to risks like data interception, unauthorized access, and exploits targeting Wi-Fi protocols.  By relying solely on Ethernet, you eliminate these vulnerabilities, ensuring your Bitcoin infrastructure is only accessible through physically secure, wired links.</p> <p>Adopting a DMZ with wired connections for your Bitcoin full node and Transaction-Manager provides a robust defense against network-based threats. This setup safeguards your assets from risks within your home network and sidesteps the weaknesses of Wi-Fi, offering a professional-grade security solution.  While it demands thoughtful configuration, the heightened protection it delivers is invaluable for securing your Bitcoin infrastructure.</p>"},{"location":"saving/sovereignty/level-9/","title":"Level 9: Fault Tolerance","text":"<p>Remove all 'single points of compromise'.</p> <p> Level 9 -- redundant signing devices </p> <p>Fault tolerance in Bitcoin custody hinges on eliminating single points of compromise.  Level 9 builds on our multisig protocol by adding redundant Signing-Devices,  ensuring funds remain secure even if a device fails or is compromised, such as by malicious firmware.</p>"},{"location":"saving/sovereignty/level-9/#why-fault-tolerance","title":"Why Fault Tolerance?","text":"<p>In a multisig configuration, using multiple Signing-Devices  (each with its own private key) provides fault tolerance against hardware failure or compromise of any single device.  This is because the multisig setup requires signatures from multiple devices to authorize a transaction, preventing any one compromised device from acting alone.  For example, malicious firmware with a Dark Skippy attack could compromise a single device (seed exfil), but fault-tolerant redundancy ensures your wealth remains safe.</p>"},{"location":"saving/sovereignty/level-9/#which-devices","title":"Which Devices?","text":"<p>Any two of the Signing-Devices discussed in Level 3 can be used to ensure fault tolerance.</p> <p>For example:</p> <ul> <li>SeedSigner: A DIY, open-source signing device built on affordable hardware (Raspberry Pi Zero). SeedSigner is air-gapped, supports QR code scanning for transaction signing, and is ideal for those who prefer a fully verifiable solution.</li> <li>DIY Raspberry Pi Zero: For advanced users, you can create your own signing device using a Raspberry Pi Zero with open-source software.</li> <li>Specter-DIY: This approach requires technical expertise but offers complete control over the hardware and software stack.</li> <li>Coldcard Q: Coldcard with QR scanner and display.</li> </ul>"},{"location":"saving/sovereignty/level-9/#implementation","title":"Implementation","text":"<p>You will need at least a 2-of-3 multisig, and at least two different signing devices (ideally different manufacturer and firmware).</p> <ul> <li>Seed-1 -- created by Signing-Device-1</li> <li>Seed-2 -- created by Signing-Device-2</li> <li>Seed-3 -- created by an Airgapped-Computer or by pencil and paper; this seed will act as a backup for recovery purposes.</li> </ul> <p>Importantly, each seed is dedicated to a specific Signing-Device, and one should take additional precautions in the Quarantine Rules  to ensure no cross-contamination between seeds and Signing-Devices.</p> <p>In practice, your Transaction-Manager will create an unsigned transaction and you will transmit (via quarantine) to each Signing-Device and collect  the needed signatures onto the Transaction-Manager, which will merge the signatures into a finalized transaction. An example of Level 9 fault tolerance is included in the appendix, see the advanced protocol.</p> <p>Redundant Signing-Devices in a multisig setup bolster security against hardware failure and attacks.  This method ensures resilience and fault-tolerant control over your funds.</p>"},{"location":"saving/wealth/","title":"Wealth Preservation","text":"<p>With fiat money, family wealth rarely survives beyond a few generations. The statistics are stark: 70% of wealthy families lose their fortunes by the second generation, and 90% by the third. This isn't mere coincidence or poor luck -- it's a direct consequence of fiat money's design.  Fiat systems, with their endless money printing and built-in inflation, foster high-time-preference: a cultural and psychological bias toward immediate gratification over long-term planning. Families consume rather than create, spend inheritances instead of stewarding them, and watch as debasement erodes their legacy. But Bitcoin changes everything. As a hard money standard with a fixed supply of 21 million coins, Bitcoin incentivizes low-time-preference -- encouraging each generation to save, build, and pass on more wealth than they received. In this paradigm, family dynasties don't dissipate; they compound, growing stronger across centuries.</p>"},{"location":"saving/wealth/#broken-money-destroys-family-legacies","title":"Broken Money Destroys Family Legacies","text":"<p>Fiat currency isn't just paper -- it's a system engineered for short-termism. Central banks like the Federal Reserve can print money at will, diluting the value of savings and rewarding debt-fueled spending. This creates inflation, often understated in official figures (e.g., reported at 3% when real rates exceed 7%), which quietly taxes savers and pushes families toward high-risk investments or extravagant lifestyles to \"keep up.\" The result? High-time-preference permeates society: people discount the future, prioritizing instant pleasures like luxury goods, vacations, or speculative gambles over building enduring assets.</p> <p>This mindset wreaks havoc on family dynasties. Historical data shows that generational wealth loss stems from:</p> <ul> <li>Lack of Financial Literacy and Planning: Heirs, raised in abundance, often lack the discipline or knowledge to manage wealth, leading to poor decisions.</li> <li>Taxes and Inflation: Governments impose estate taxes, capital gains, and property levies, while inflation erodes purchasing power -- fiat wealth halves every few decades.</li> <li>Dilution and Lifestyle Inflation: Wealth splits among multiple heirs, and without a culture of restraint, it's squandered on maintaining appearances.</li> <li>Communication Failures: Families rarely discuss values or strategies, leading to mismanagement -- 60% of fortunes vanish due to broken trust and poor dialogue.</li> </ul> <p>At its core, fiat amplifies these issues by distorting values. As one analysis notes, broken money causes \"high time-preference tendencies\" that mis-value relationships, family, and future stability. Parents borrow against tomorrow to live lavishly today, modeling consumption over creation. Children inherit not just assets, but a fiat-fueled entitlement mindset, consuming principal rather than compounding it. Even \"successful\" dynasties, like those in Europe spanning 750 years, measure wealth in centuries only by fighting constant erosion -- yet in fiat eras, this battle intensifies. The outcome is predictable: wealth concentrates among elites who game the system, while average families see their legacies evaporate, perpetuating inequality and cultural decay.</p> <p>Contrast this with historical hard money standards, like gold-backed currencies, where savings held value and encouraged foresight. Fiat's departure from this -- evident in hyperinflations throughout history -- has accelerated dynasty dissolution. It's no wonder that in fiat-dominated societies, intergenerational mobility plummets, trapping families in cycles of boom and bust.</p>"},{"location":"saving/wealth/#eternal-dynasties","title":"Eternal Dynasties","text":"<p>Bitcoin isn't just an asset; it's a monetary renaissance that flips the script on wealth preservation. With its immutable protocol and capped supply, Bitcoin enforces scarcity -- no central authority can inflate it away. This design naturally cultivates low-time-preference: holders are rewarded for patience, as Bitcoin's value accrues purchasing power over time through halvings and network growth. Unlike fiat, where saving feels punitive, Bitcoin makes delayed gratification profitable -- encouraging families to think in decades or centuries, not quarters.</p> <p>Imagine a world where each generation adds to the family stack rather than depletes it. Bitcoin enables this by:</p> <ul> <li>Compounding Scarcity: As technology drives abundance in goods and services, Bitcoin's fixed supply captures that value. Holders don't need to sell; they can collateralize (e.g., borrow against BTC without triggering taxes) to fund life while preserving the principal. This \"buy, borrow, die\" strategy minimizes erosion, allowing wealth to grow exponentially.</li> <li>Immunity to Fiat Flaws: No inflation tax, no debasement -- Bitcoin is \"forever money\" for family offices seeking decades-long stability. It's portable, divisible, and disaster-proof, unlike real estate vulnerable to fires or taxes.</li> <li>Cultural Shift: Bitcoin fosters responsibility and education. Families discuss seed phrases and multisig setups as rites of passage, not just wills. Heirs learn to HODL, building on inheritance rather than spend it. Custom tooling can enable seamless transfers without lawyers or lost keys.</li> </ul>"},{"location":"saving/wealth/#compounding-family-wealth","title":"Compounding Family Wealth","text":"<p>The real power of Bitcoin lies in its ability to turn inheritance into a compounding engine, where each generation not only preserves but amplifies the family's wealth. In traditional fiat systems, heirs often view inheritance as a lump sum to be spent -- funding lifestyles, paying debts, or chasing fleeting investments. But Bitcoin's design shifts this paradigm: its scarcity and appreciation potential reward long-term holding, turning savers into stewards who add sats to the family vault.</p> <p>Consider the mechanics of compounding in a Bitcoin dynasty.  The first generation acquires BTC through disciplined stacking.  They secure it with advanced self-custody, ensuring it's preserved beyond their life.  The second generation inherits not just the wealth but the ethos: low-time-preference.  Instead of selling, they use Bitcoin, e.g., as collateral for low-interest loans to invest in productive ventures -- perhaps launching a family business or funding education that generates more income to buy additional Bitcoin.  Over time, halvings reduce new supply, driving value up, while global adoption increases demand -- compounding the stack's purchasing power exponentially.</p> <p>Michael Saylor's \"21 Ways to Wealth\" framework, presented at Bitcoin 2025, underscores this: Bitcoin enables families to build \"generational wealth\" by treating it as a perpetual asset, not a consumable. Strategies include passive income, long-term holding, and dynasty trusts that shield Bitcoin from taxes and dilution.  For instance, a Bitcoin Dynasty Trust allows heirs to access benefits (like borrowing against the principal) without ever selling, preserving the core stack for future growth.  This creates a flywheel: each generation educates the next on security and stewardship, stacking more through their efforts, leading to wealth that grows rather than shrinks.</p> <p>Real-world examples abound. Family offices are allocating to Bitcoin for its asymmetric upside, with projections that even 1 Bitcoin could represent \"generational wealth\" within decades.  The ongoing \"Great Wealth Transfer\" -- trillions moving to digital natives -- accelerates this, as millennials and Gen Z prioritize Bitcoin,  flipping fiat's dissipation cycle.  Communities echo this: savers share stories of stacking Bitcoin solely to compound family efforts, akin to a multi-generational business that accrues value indefinitely.</p> <p>In essence, Bitcoin transforms family wealth from a finite resource into an infinite game.  Where fiat dynasties fade, Bitcoin dynasties flourish -- each heir adding layers of security, knowledge, and sats, building empires that span centuries.</p> <p>Bitcoin reclaims wealth preservation from reactive defense to proactive compounding, empowering dynasties to grow across generations.  By ditching fiat's high-time-preference for Bitcoin's low-time-preference ethos, families can ensure each heir builds on the last  -- stacking sats, securing legacies, and thriving in a sound money future.</p> <p>Assess your sovereignty, educate your kin, and plan ahead  -- see inheritance planning for details.  In Bitcoin, your family's story isn't one of loss; it's an epic of endless growth.</p>"},{"location":"saving/wealth/inheritance/","title":"Inheritance Planning","text":"<p>In today's secular culture, inheritance often becomes a source of division rather than unity, with families torn apart by disputes and squandered legacies.  But inheritance, at its core, is about more than transferring assets -- it's a profound opportunity to pass on values, wisdom, and a sense of stewardship that echoes traditional values:</p> <p>Proverbs 13:22</p> <p>A good person leaves an inheritance for their children's children.</p> <p>Fiat systems, rooted in secular short-termism, exacerbate wealth loss -- 90% of fortunes dissipate by the third generation due to entitlement and broken communication. It wasn't always this way. Bitcoin, fortunately, aligns with a Christian ethos of patient endurance (Hebrews 6:12),  fostering low-time-preference and enabling dynasties built on faith, responsibility, and shared purpose.  Whether guided by Christian values or simply seeking stronger family bonds, Bitcoin transforms inheritance into a cultural cornerstone that unites generations in an eternal perspective.</p>"},{"location":"saving/wealth/inheritance/#fruits-of-secularism","title":"Fruits of Secularism","text":"<p>Fiat currency embodies the fruits of secularism -- an inflationary, debt-driven system that promotes high-time-preference and immediate gratification, often at the expense of traditional values like thrift, honor, and family cohesion. This mirrors biblical warnings against the love of money leading to ruin (1 Timothy 6:10), as it degrades society by encouraging consumerism over creation and division over unity.</p> <p>In this environment, inheritance planning suffers deeply:</p> <ul> <li>Lack of Education: Influenced by secular consumerism, parents rarely impart financial or spiritual wisdom, leaving heirs unprepared both materially and morally.</li> <li>Entitlement Mindset: Easy abundance without gratitude fosters prodigality, much like the Prodigal Son's squandering of his inheritance (Luke 15) -- yet in a secular culture, repentance and restoration are often absent.</li> <li>Communication Breakdowns: Taboos around death and wealth ignore calls to familial unity (Psalm 133:1), leading to disputes where 60% of fortunes are lost to eroded trust, fracturing God's intended design for family.</li> <li>Generational Dilution: Without faith-based anchors, wealth scatters, perpetuating inequality and echoing consequences of straying from principled living (Deuteronomy 28:15-68).</li> </ul> <p>These challenges are amplified in secular fiat societies, where inheritance divides like the parable of the rich fool hoarding for himself (Luke 12:13-21), contrasting sharply with hard-money eras -- such as the talents entrusted for stewardship -- where legacies unified faithful families.</p> Fiat Challenge Cultural/Secular Impact Christian Contrast Inflation-eroded value Encourages short-termism, rejecting biblical patience. Bitcoin as sound money honors God's provision for the future. Debt-fueled lifestyles Models greed and division, degrading family bonds. Low-time-preference reflects Christian self-control (Galatians 5:22-23). Legal complexities (probate) Fuels disputes, ignoring forgiveness and unity. Prayerful planning restores relational harmony."},{"location":"saving/wealth/inheritance/#an-ethos-of-compounding-wealth","title":"An Ethos of Compounding Wealth","text":"<p>Bitcoin introduces a cultural shift toward an ethos of compounding wealth -- its inherent scarcity and immutability naturally encourage low-time-preference, promoting saving for the future and building inter-generational legacies. This stands in stark contrast to fiat's destructive tendencies, which erode wealth through debasement and fracture families via short-term thinking. By rewarding patience and long-term holding, Bitcoin aligns with values of stewardship and providence, helping families -- whether Christian or not -- prioritize enduring bonds over fleeting gains.</p> <p>This ethos brings tangible benefits infused with timeless principles:</p> <ul> <li>Fosters Open Dialogues: Family discussions about Bitcoin stewardship, perhaps prayerful for those of faith, build trust and fulfill the call to teach diligently across generations (Deuteronomy 6:6-7).</li> <li>Promotes Education: Imparting knowledge of sovereignty becomes an opportunity for discipleship, instilling responsibility and gratitude, much like stewarding God's gifts.</li> <li>Encourages Stewardship: Generations view themselves as faithful managers (Matthew 25:14-30), adding to the family stack to serve future kin, embodying providential care.</li> <li>Strengthens Relationships: Shared rituals, such as reflections or prayers over the \"family stack,\" forge bonds that redeem isolation, creating a legacy of unity.</li> </ul> <p>At its heart, Bitcoin's low-time-preference rewards biblical patience,  guiding families to lay up treasures that endure (Matthew 6:19-21), whether seen through a faith lens or as practical wisdom for lasting family harmony. True wealth, afterall, is the family harmonizing with eternal values (with God's will).</p>"},{"location":"saving/wealth/inheritance/#family-of-faith","title":"Family of Faith","text":"<p>Embracing Bitcoin in inheritance planning involves practical, relational strategies grounded in faith and values -- tools that nurture a \"family of faith\" where stewardship is a shared journey. These approaches integrate timeless principles with everyday actions, ensuring cultural success drives technical implementation.</p> <p>Key strategies include:</p> <ul> <li>Family Education Programs: Blend Bible study or ethical reflections with sovereignty teachings (e.g., begin with Level 2), seeking wisdom through prayer or thoughtful discussion in stewardship of wealth.</li> <li>Building Traditions: Develop family charters incorporating Scripture or core values, weaving stories of the \"family stack\" to highlight humility and foresight as enduring virtues.</li> <li>Communication Frameworks: Convene prayer-led or value-centered family councils to openly discuss plans, modeling forgiveness and unity to preempt conflicts.</li> <li>Intergenerational Involvement: Engage children early with small wallets for hands-on learning, praying or reflecting on their growth, sparking excitement in a principled economy.</li> </ul> Strategy How It Builds Family Culture Example Open Wealth Discussions Enhances trust through prayerful transparency (James 5:16). Annual retreats with devotionals on stewardship, reviewing sovereignty progress. Heir Education Instills low-time-preference as godly patience. Teaching kids to stack sats while studying Proverbs on diligence. Shared Legacy Narratives Creates emotional bonds rooted in faith. Journaling the family's Bitcoin journey with testimonies and prayers. <p>While technical details like fault-tolerant setups are covered in Level 9, remember that a culture of prayer, values, and mutual respect -- whether explicitly Christian or broadly ethical -- is what ensures true, lasting success.</p>"},{"location":"saving/wealth/inheritance/#cultural-risks","title":"Cultural Risks","text":"<p>Even with Bitcoin's advantages, cultural risks in inheritance planning must be navigated thoughtfully, drawing on a Christian lens to address issues like jealousy (Cain and Abel), resistance from secular influences, or prideful isolation from over-reliance on expertise (Proverbs 16:18). These challenges, if unmet, can undermine family unity.</p> <p>Mitigation strategies, infused with grace and wisdom:</p> <ul> <li>Promote Inclusivity: Involve everyone in discussions or prayers, extending empathy regardless of belief, as a model of Christ-like grace.</li> <li>Address Emotional Aspects: Seek counsel or mediators, focusing on reconciliation through prayer or open-hearted talks.</li> <li>Balance with Empathy: Acknowledge fears around volatility; educate with patience, trusting in a higher sovereignty or shared long-term vision.</li> </ul> Risk Cultural Risks Impact Mitigation Family Disputes Erodes relationships through greed. Prayer for unity and forgiveness (Ephesians 4:32). Generational Gaps Alienates kin via secular divides. Faith-tailored teaching, bridging with love. Over-Secrecy Breeds mistrust, ignoring truth. Transparent planning with biblical accountability."},{"location":"saving/wealth/inheritance/#restoring-the-family","title":"Restoring the Family","text":"<p>Bitcoin restores family values by reviving a Christian ethos eroded by fiat's secular fruits -- empowering prayerful, value-driven inheritance that unites generations in stewardship, love, and compounding growth. Central to this is prayer or reflection as a foundation for planning, aligning with principles like providing for one's household (1 Timothy 5:8). The Parable of the Prodigal Son (Luke 15:11-32) illustrates redemption: Even if an heir squanders their share, Bitcoin's enduring scarcity and a family culture of grace enable return and restoration, much like the Father's welcoming mercy.</p> <p>A family is by definition inter-generational -- spanning parents, children, and beyond -- and in this light, family wealth is necessarily compounded as the family grows: Each new member contributes to and draws from the shared stack, transforming inheritance into a dynamic testament of expansion in numbers, relationships, and faithful provision, countering fiat's isolating erosion.</p> <p>Genesis 1:28</p> <p>And God blessed them, and God said unto them, Be fruitful, and multiply</p> <p>Begin today with prayer or intentional dialogue, root conversations in Scripture or core values, assess your sovereignty levels, and cultivate traditions. For more on building legacies, see wealth preservation. In Bitcoin, infused with faith or ethical depth, your family's story becomes one of multiplied bonds and redemptive legacies, carrying eternal value across generations.</p>"},{"location":"saving/wealth/kids/","title":"Bitcoin for Kids","text":"<p>Introducing children to Bitcoin fosters low-time-preference, responsibility, and a deeper understanding of value.  As parents, guiding kids toward Bitcoin isn't just about finance -- it's about instilling stewardship, patience, and family values aligned with principles.</p> <p>Proverbs 22:6</p> <p>Start children off on the way they should go, and even when they are old they will not turn from it.</p> <p>This article provides age-appropriate strategies and games,  helping kids grasp money and Bitcoin's role as superior, sovereign money.   We'll divide content by age groups, with hands-on activities for parents to implement at home.</p>"},{"location":"saving/wealth/kids/#for-ages-5-8","title":"For Ages 5-8","text":"<p>At this stage, focus on foundational concepts: What is money? Why do we save? Introduce Bitcoin simply as \"digital money\" that's like hidden treasure -- scarce, valuable, and yours to protect. Use stories, play, and visuals to build excitement without overwhelming details. Avoid technical jargon; emphasize fun analogies like Bitcoin as \"magic Internet money\" earned through chores and saved for big rewards.</p>"},{"location":"saving/wealth/kids/#key-ideas-to-teach","title":"Key Ideas to Teach","text":"<ul> <li>Money Basics: Money is a tool for trading what you have (time, effort) for what you want. It comes from work, not \"magic\" (countering fiat myths).</li> <li>Bitcoin as Money: Bitcoin is special money on the computer -- valuable like gold, can't be copied, and helps families save for the future.</li> <li>Low-Time-Preference Tease: Saving Bitcoin grows value over time, just like they grow taller over time.</li> </ul>"},{"location":"saving/wealth/kids/#games-and-activities","title":"Games and Activities","text":"<ol> <li> <p>Bitcoin Treasure Hunt: Hide \"Bitcoin tokens\" (printed paper coins or stickers) around the house. Kids \"mine\" them by completing simple tasks (e.g., tidying toys). Explain: \"Just like real Bitcoin, you earn it through work!\" Reward with a small treat, and encourage saving for bigger prizes.</p> </li> <li> <p>Storytime with Bitcoin: Read or create stories like \"The Little HODLer Who Waited,\" where a character saves Bitcoin instead of spending candy money, ending with a bigger adventure. Use free online Bitcoin kids' books or apps for visuals.</p> </li> <li> <p>Pretend Shop: Set up a home store where kids \"buy\" items with earned Bitcoin tokens. Introduce scarcity: \"There's only so much Bitcoin, so choose wisely!\"</p> </li> </ol> <p>These activities build intuition: Money requires work, and Bitcoin rewards patience -- setting the stage for deeper lessons.</p>"},{"location":"saving/wealth/kids/#for-ages-8-12","title":"For Ages 8-12","text":"<p>For older kids, dive into sovereignty: \"Not your keys, not your coins.\" Teach why self-custody protects against theft or inflation, linking to real-world saving. Introduce practical tools like memory wallets, emphasizing responsibility and family involvement. Reference sovereignty levels for safe implementation.</p>"},{"location":"saving/wealth/kids/#key-ideas-to-teach_1","title":"Key Ideas to Teach","text":"<ul> <li>Sovereignty Basics: You control your Bitcoin like a secret key to a treasure chest -- no banks needed.</li> <li>Saving in Bitcoin: Halvings make it scarcer;saving builds wealth over time, countering fiat's erosion.</li> <li>Self-Custody Intro: Use simple wallets; memorize seeds as a \"brain backup.\"</li> </ul>"},{"location":"saving/wealth/kids/#games-and-activities_1","title":"Games and Activities","text":"<ol> <li> <p>Sovereignty Quest Board Game: Create a custom board (or use printable templates) where players \"journey\" through levels: Earn Bitcoin by answering quizzes (e.g., \"What's a halving?\"), face \"inflation monsters\" that steal fiat, and reach \"self-custody castle\" by securing a pretend wallet.</p> </li> <li> <p>Memory Wallet Challenge: Teach mnemonic seeds via Mnemonic Wallets. Play a game: Generate a simple 12-word phrase (use safe tools like offline generators), have kids memorize it through rhymes or drawings. \"Restore\" a pretend wallet by reciting words -- reward correct ones with extra playtime or small BTC (via parent-controlled app).</p> </li> <li> <p>Bitcoin Saving Simulator: Use apps like Bitcoin Miner simulators or paper tracking: Kids \"stack sats\" from allowance, watch value \"grow\" via mock charts. Discuss real halvings and why holding beats spending.</p> </li> <li> <p>Family Custody Workshop: Involve siblings in setting up a shared \"family wallet\" (multisig basics, linked to Level 7). Role-play scenarios: \"What if a bank freezes your money? With Bitcoin, you're the boss!\"</p> </li> </ol> <p>These build hands-on skills: Kids learn custody as empowerment, fostering low-time-preference through tangible saving games.</p>"},{"location":"saving/wealth/kids/#for-ages-12-and-up","title":"For Ages 12 and Up","text":"<p>As teens mature, deepen their understanding of Bitcoin sovereignty by exploring advanced concepts like fault-tolerant setups and off-grid storage. Encourage independent research and real-world application, tying into family discussions on stewardship and long-term planning. Reference the site's sovereignty levels (e.g., Level 1 to Level 12) as a roadmap for progressive self-custody.</p>"},{"location":"saving/wealth/kids/#key-ideas-to-teach_2","title":"Key Ideas to Teach","text":"<ul> <li>Advanced Sovereignty: Beyond basics, learn multisig, hardware wallets, and privacy tools to protect against risks.</li> <li>Economic Principles: Understand Bitcoin's scarcity vs. fiat inflation; discuss halvings, network effects, and why it's \"forever money.\"</li> <li>Ethical Stewardship: Saving Bitcoin builds generational wealth, aligning with values of patience and responsibility.</li> </ul>"},{"location":"saving/wealth/kids/#games-and-activities_2","title":"Games and Activities","text":"<ol> <li> <p>Sovereignty Level Challenge: Assign \"missions\" based on site levels -- e.g., set up a basic wallet (Level 3), then advance to metal backups (Level 6). Track progress in a family journal.</p> </li> <li> <p>Debate Club: Host debates on \"Bitcoin vs. Fiat\" -- teens research arguments, presenting on topics like inflation's impact on families. Award \"sats\" for strong points.</p> </li> <li> <p>Portfolio Simulator: Use free tools to simulate Bitcoin holdings over years, incorporating real data. Discuss scenarios: \"What if you save through a halving?\"</p> </li> <li> <p>Project Build: Guide teens to create a simple Bitcoin project, like a family expense tracker or mnemonic art, reinforcing self-custody.</p> </li> </ol> <p>These activities empower teens as stewards, preparing them for sovereign saving and linking to the site's levels for lifelong learning.</p> <p>Teaching Bitcoin equips kids for a sound money future, strengthening family bonds through shared learning. Start small, adapt to your child's interest, and model how to save for the future.  For advanced custody, explore sovereignty levels.  In the end, you're not just saving money -- you're building legacies of wisdom and faith.</p>"},{"location":"saving/wealth/physical-security/","title":"Physical Security","text":"<p>Your home is the frontline for safeguarding your family and your savings. A burglary, violent coercion, or wildfire can strike in seconds, threatening lives and assets. With practical defenses \u2014 strong locks, smart alarms, firearms, and firearm training \u2014 you build a safe haven. This guide provides clear steps to fortify your household against real-world dangers.</p>"},{"location":"saving/wealth/physical-security/#critical-scenarios","title":"Critical Scenarios","text":"<p>Physical security is essential when danger strikes.</p> <ul> <li>Home Invasion: Burglars targeting valuables threaten your family\u2019s safety.</li> <li>Coercion: Attackers may use violence to demand assets, risking lives.</li> <li>Natural Disasters: Fires or floods disrupt safety and resources.</li> <li>Travel Risks: An empty home is vulnerable to break-ins.</li> <li>Child Safety: Kids need clear guidance to stay safe in emergencies.</li> </ul>"},{"location":"saving/wealth/physical-security/#protect-your-family","title":"Protect Your Family","text":"<p>Stay Committed</p> <p>Physical security requires constant effort and family teamwork. An unlocked door or untrained response can expose your home and your family to danger.</p> <ul> <li>Deter Intruders: Install motion-sensor lights and cameras (e.g., Ring) to ward off burglars. Clear bushes near entries to remove hiding spots.</li> <li>Fortify Entries: Equip doors with deadbolts and reinforced strike plates (e.g., Door Armor); add security film to windows.</li> <li>Train with Firearms: Complete certified firearm training (e.g., USCCA Defensive Shooting) to counter violent threats. Store guns safely and pursue concealed carry for protection outside the home.</li> <li>Designate a Safe Room: Set up a room with a solid door, phone, and supplies as a family retreat during intrusions.</li> <li>Use Smart Alarms: Deploy systems with real-time alerts and offsite storage.</li> <li>Plan as a Family: Assign roles (e.g., one adult calls 911, another secures kids) and drill periodically.</li> <li>Prepare for Disasters: Install smoke detectors and flood sensors; keep a 72-hour emergency kit with food and medical supplies.</li> </ul>"},{"location":"saving/wealth/physical-security/#the-role-of-firearms","title":"The Role of Firearms","text":"<p>Firearms are a critical defense against violent threats like a wrench attack. If a criminal uses force to demand your Bitcoin \u2014 firearm beats wrench. Certified training (e.g., USCCA Defensive Shooting Fundamentals) builds skills: situational awareness, safe handling, and precise response under stress. Training covers de-escalation, legal use, and marksmanship, preparing you to protect your family during a home invasion. </p> <p>Concealed carry training and permits extend this defense to public spaces, ensuring safety during travel or daily routines. Store firearms safely to prevent unauthorized access, and practice regularly at a range. With millions of defensive gun uses annually in the U.S. (FBI estimates), firearms, paired with training, provide a vital shield for your household.</p> <p>With strong locks, firearms, and a family plan, your home stands as a fortress, safeguarding your loved ones from danger.</p>"}]}